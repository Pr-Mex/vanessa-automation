&НаКлиенте
Перем ВнешняяКомпонента;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МестоположениеВнешнейКомпонентыДляСкриншотов = Параметры.МестоположениеВнешнейКомпонентыДляСкриншотов;
	ДескрипторОкна = Параметры.ДескрипторОкнаКлиентаТестирования;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВнешняяКомпонента = Неопределено Тогда
		ПодключитьВнешнююКомпоненту(
			МестоположениеВнешнейКомпонентыДляСкриншотов, 
			"WindowCaptureComponent", 
			ТипВнешнейКомпоненты.Native);
		ВнешняяКомпонента = Новый("AddIn.WindowCaptureComponent.WindowsControl");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроизвольныйРазмер(Команда)

	УстановитьРазмер(ПозицияПоГоризонтали, ПозицияПоВертикали, РазмерПоГоризонтали, РазмерПоВертикали);
	
КонецПроцедуры

&НаКлиенте
Процедура Размер800х600(Команда)
	УстановитьРазмер(0, 0, 800, 600);
КонецПроцедуры

&НаКлиенте
Процедура Размер960х720(Команда)
	УстановитьРазмер(0, 0, 960, 720);
КонецПроцедуры

&НаКлиенте
Процедура Размер1024х768(Команда)
	УстановитьРазмер(0, 0, 1024, 768);
КонецПроцедуры

&НаКлиенте
Процедура Размер1280х960(Команда)
	УстановитьРазмер(0, 0, 1280, 960);
КонецПроцедуры

&НаКлиенте
Процедура Широкий960х540(Команда)
	УстановитьРазмер(0, 0, 960, 540);
КонецПроцедуры

&НаКлиенте
Процедура Широкий1024х576(Команда)
	УстановитьРазмер(0, 0, 1024, 576);
КонецПроцедуры

&НаКлиенте
Процедура Широкий1280х720(Команда)
	УстановитьРазмер(0, 0, 1280, 720);
КонецПроцедуры

&НаКлиенте
Процедура Широкий1600х900(Команда)
	УстановитьРазмер(0, 0, 1600, 900);
КонецПроцедуры

&НаКлиенте
Процедура СделатьСнимок(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолученСнимокОкна", ЭтаФорма);
	ВнешняяКомпонента.НачатьВызовПолучитьСнимокОкна(ОписаниеОповещения, ДескрипторОкна);
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьСнимкиДочернихОкон(Команда)
	
	СписокОкон.Очистить();
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолученСписокОкон", ЭтаФорма);
	ВнешняяКомпонента.НачатьВызовПолучитьДочерниеОкна(ОписаниеОповещения, ДескрипторОкна);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПрочитатьСтрокуJSON(ТекстJSON)
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	
	Возврат ПрочитатьJSON(ЧтениеJSON);
	
КонецФункции

&НаКлиенте
Процедура УстановитьРазмер(ПозицияПоГоризонтали, ПозицияПоВертикали, РазмерПоГоризонтали, РазмерПоВертикали)
	
	ВнешняяКомпонента.УстановитьРазмерОкна(ДескрипторОкна, РазмерПоГоризонтали, РазмерПоВертикали);
	ВнешняяКомпонента.УстановитьПозициюОкна(ДескрипторОкна, ПозицияПоГоризонтали, ПозицияПоВертикали);
	ВнешняяКомпонента.РазрешитьИзменятьРазмер(ДескрипторОкна, НЕ ЗапретитьИзменятьРазмер);
	ВнешняяКомпонента.АктивироватьОкно(ДескрипторОкна);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученСнимокОкна(Значение, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Значение) Тогда
		ДанныеКартинки = ПоместитьВоВременноеХранилище(Значение, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученСписокОкон(Значение, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	Если Значение = "null " Тогда
		Возврат;
	КонецЕсли;
	
	Данные = ПрочитатьСтрокуJSON(Значение);
	Для Каждого Стр из Данные Цикл
		
		НоваяСтрока = СписокОкон.Добавить();
		
		ДвоичныеДанные = ВнешняяКомпонента.ПолучитьСнимокОкна(Стр.window);
		Стр.Вставить("ДвоичныеДанныеКартинки", ДвоичныеДанные);
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОконПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.СписокОкон.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ДанныеКартинки1 = "";
		Возврат;
	КонецЕсли;
	
	ДанныеКартинки1 = ПоместитьВоВременноеХранилище(
		ТекущиеДанные.ДвоичныеДанныеКартинки, 
		Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти
