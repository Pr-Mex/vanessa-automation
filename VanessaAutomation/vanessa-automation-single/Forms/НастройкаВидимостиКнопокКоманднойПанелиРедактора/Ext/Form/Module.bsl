#Область ОбработкаСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДанныеКнопок = Параметры.ДанныеКнопок;
	
	Для Каждого ДанныеКнопки Из ДанныеКнопок Цикл
		// Создание группы для кнопки и флага
		ГруппаЭлемента = Элементы.Добавить("Группа" + ДанныеКнопки.Имя, Тип("ГруппаФормы"), Элементы.ГруппаОсновная);
		ГруппаЭлемента.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаЭлемента.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ГруппаЭлемента.ОтображатьЗаголовок = Ложь;
		
		// Создание флага
		РекФормы = Новый РеквизитФормы("Рек" + ДанныеКнопки.Имя, Новый ОписаниеТипов("Булево"),,"");
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(РекФормы);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		ФлагВидимостиЭлемента = Элементы.Добавить("Флаг" + ДанныеКнопки.Имя, Тип("ПолеФормы"), ГруппаЭлемента);
		ФлагВидимостиЭлемента.ПутьКДанным = РекФормы.Имя;
		ФлагВидимостиЭлемента.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ФлагВидимостиЭлемента.Вид = ВидПоляФормы.ПолеФлажка;
		ФлагВидимостиЭлемента.Заголовок = "";
		
		// Создание кнопки
		ТекКнопка = Элементы.Добавить("Кнопка" + ДанныеКнопки.Имя, Тип("КнопкаФормы"), ГруппаЭлемента);
		ТекКнопка.Заголовок  = ДанныеКнопки.Заголовок;
		Если ПустаяСтрока(ТекКнопка.Заголовок) Тогда
			ТекКнопка.Заголовок = ДанныеКнопки.Имя;
			Если НЕ ПустаяСтрока(ДанныеКнопки.ЗаголовокКоманды) Тогда
				ТекКнопка.Заголовок = ДанныеКнопки.ЗаголовокКоманды;
			КонецЕсли;	 
		КонецЕсли;	 
		ТекКнопка.АвтоМаксимальнаяШирина = Ложь;
		ТекКнопка.Высота = 1;
		ТекКнопка.Ширина = 40;
		ТекКнопка.ИмяКоманды = "ОсновнаяКоманда";
		ТекКнопка.Видимость = Истина;
		ТекКнопка.Картинка = ДанныеКнопки.Картинка;
		ТекКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;
		Если ДанныеКнопки.КартинкаКомандыВнутр <> Неопределено Тогда
			ПромКартинка = ЗначениеИзСтрокиВнутр(ДанныеКнопки.КартинкаКомандыВнутр);
			Если ПромКартинка.Вид = ВидКартинки.ИзБиблиотеки Тогда
				ТекКнопка.Картинка = ПромКартинка;
			КонецЕсли;	 
		КонецЕсли;	 

		ДанныеКнопокФорма.Добавить(ДанныеКнопки.Видимость, РекФормы.Имя);
		
	КонецЦикла;	 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для Каждого Элем Из ДанныеКнопокФорма Цикл
		Если Элем.Значение Тогда
			Выполнить(Элем.Представление + "= Истина");
		КонецЕсли;	 
	КонецЦикла;	 
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ОсновнаяКоманда(Команда)
	ЧастьСтроки = Сред(ЭтаФорма.ТекущийЭлемент.Имя, 7);
	ЭтаФорма["Рек" + ЧастьСтроки] = НЕ ЭтаФорма["Рек" + ЧастьСтроки];
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	Данные = Новый Массив;
	Для Каждого Элем Из ДанныеКнопокФорма Цикл
		ИмяКнопки = Сред(Элем.Представление, 4);
		ВидимостьКнопки = Вычислить(Элем.Представление);
		
		ДанныеКнопки = Новый Структура;
		ДанныеКнопки.Вставить("ИмяКнопки", ИмяКнопки);
		ДанныеКнопки.Вставить("ВидимостьКнопки", ВидимостьКнопки);
		Данные.Добавить(ДанныеКнопки);
	КонецЦикла;	 
	ВладелецФормы.ОбработатьВидимостьКнопокКоманднойПанели(Данные);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменить(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПометитьВсе(Команда)
	Для Каждого Элем Из ДанныеКнопокФорма Цикл
		Выполнить(Элем.Представление + "= Истина");
	КонецЦикла;	 
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьВсе(Команда)
	Для Каждого Элем Из ДанныеКнопокФорма Цикл
		Выполнить(Элем.Представление + "= Ложь");
	КонецЦикла;	 
КонецПроцедуры

#КонецОбласти

#Область ЭкспортныеПроцедурыИФункции

// Возвращает данные команды
&НаКлиенте
Функция ДанныеКомандыVanessaAutomation(ИмяКоманды) Экспорт
	Возврат ДанныеКомандыVanessaAutomationСервер(ИмяКоманды); 
КонецФункции	 

#КонецОбласти

#Область ИнтерактивнаяСправка

&НаСервере
Функция ДанныеКомандыVanessaAutomationСервер(ИмяКоманды)
	
	Данные = Новый Структура;
	Данные.Вставить("Заголовок", Команды[ИмяКоманды].Заголовок);
	Данные.Вставить("Действие", Команды[ИмяКоманды].Действие);
	Данные.Вставить("Подсказка", Команды[ИмяКоманды].Подсказка);
	
	Возврат Данные; 
	
КонецФункции	 

#КонецОбласти



