&НаКлиенте
Перем VanessaTabs;

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	VanessaTabs = ВладелецФормы.Элементы.VanessaEditor.Документ.defaultView.VanessaTabs;
	Элементы.Опции.Отображение = ОтображениеТаблицы.Дерево;
	ЗаполнитьНастройкиРедактора();

КонецПроцедуры

&НаКлиенте
Процедура ОпцииПередСворачиванием(Элемент, Строка, Отказ)

	Отказ = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	VanessaTabs = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныПроцедурыИФункции

&НаКлиенте
Функция ИгнорируемыеНастройкиРедакотра()

	Массив = Новый Массив;
	Массив.Добавить("ariaLabel");
	Массив.Добавить("automaticLayout");
	Массив.Добавить("bracketPairGuides");
	Массив.Добавить("contextmenu");
	Массив.Добавить("domReadOnly");
	Массив.Добавить("extraEditorClassName");
	Массив.Добавить("fixedOverflowWidgets");
	Массив.Добавить("fontInfo");
	Массив.Добавить("fontLigatures2");
	Массив.Добавить("inDiffEditor");
	Массив.Добавить("readOnly");
	Массив.Добавить("tabIndex");
	Массив.Добавить("useShadowDOM");
	Массив.Добавить("wordWrapOverride1");
	Массив.Добавить("wordWrapOverride2");
	Массив.Добавить("editorClassName");
	Массив.Добавить("pixelRatio");
	Массив.Добавить("tabFocusMode");
	Массив.Добавить("layoutInfo");
	Массив.Добавить("wrappingInfo");
	Массив.Добавить("wordSeparators");
	Массив.Добавить("wordWrapBreakAfterCharacters");
	Массив.Добавить("wordWrapBreakBeforeCharacters");

	//Управление через таблицу
	Массив.Добавить("rulers");
	Возврат Массив;

КонецФункции

&НаКлиенте
Функция ПрочитатьСтрокуJSON(ТекстJSON, ПрочитатьВСоответствие = Истина)

	Если ПустаяСтрока(ТекстJSON) Тогда
		Возврат Неопределено;
	КонецЕсли;

	ПоляДаты = Новый Массив;
	ПоляДаты.Добавить("CreationDate");
	ПоляДаты.Добавить("date");

	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	Возврат ПрочитатьJSON(ЧтениеJSON, ПрочитатьВСоответствие, ПоляДаты);

КонецФункции

&НаКлиенте
Функция ЗаписатьСтрокуJSON(Данные)

	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет);
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Возврат ЗаписьJSON.Закрыть();

КонецФункции

&НаКлиенте
Процедура ДобавитьПодчиненныеНастройки(НаборЭлементов, СхемаРодителя, ЗначениеРодителя)

	СписокЗначений = Новый СписокЗначений;
	Для каждого Реквизит из СхемаРодителя Цикл
		МассивИмен = СтрРазделить(Реквизит.Ключ, ".");
		Ключ = МассивИмен.Получить(МассивИмен.ВГраница());
		СписокЗначений.Добавить(Реквизит.Значение, Ключ);
	КонецЦикла;
	СписокЗначений.СортироватьПоПредставлению();

	Для каждого ЭлементСписка из СписокЗначений Цикл
		Ключ = ЭлементСписка.Представление;
		ТекЗначение = ЗначениеРодителя.Получить(Ключ);
		НоваяСтрока = НаборЭлементов.Добавить();
		НоваяСтрока.Наименование = Ключ;
		НоваяСтрока.ТекЗначение = ЗаписатьСтрокуJSON(ТекЗначение);
		СхемаРеквизита = ЭлементСписка.Значение;
		Если СхемаРеквизита <> Неопределено Тогда
			НоваяСтрока.Схема = ЗаписатьСтрокуJSON(СхемаРеквизита);
			НоваяСтрока.Тип = СхемаРеквизита.Получить("type");
			НоваяСтрока.Описание = СхемаРеквизита.Получить("description");
			НоваяСтрока.ПоУмолчанию = ЗаписатьСтрокуJSON(СхемаРеквизита.Получить("default"));
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция ЗначениеИзменялось(ТекСтр)

	Если НЕ ЗначениеЗаполнено(ТекСтр.ПоУмолчанию) Или ТекСтр.ПоУмолчанию = "null" Тогда
		Возврат Ложь;
	КонецЕсли;

	Если ТекСтр.Наименование = "lineHeight" И ТекСтр.ТекЗначение = "19" Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат ТекСтр.ПоУмолчанию <> ТекСтр.ТекЗначение;

КонецФункции

&НаКлиенте
Процедура ЗаполнитьНастройкиРедактора()

	НаборОпций = ПрочитатьСтрокуJSON(VanessaTabs.options);
	ТекущиеНастройки = ПрочитатьСтрокуJSON(VanessaTabs.current.options);

	ОтсутствующиеТипы = Новый Структура;
	ОтсутствующиеТипы.Вставить("disableLayerHinting", "boolean");
	ОтсутствующиеТипы.Вставить("disableMonospaceOptimizations", "boolean");
	ОтсутствующиеТипы.Вставить("lineDecorationsWidth", "number");
	ОтсутствующиеТипы.Вставить("lineNumbersMinChars", "number");
	ОтсутствующиеТипы.Вставить("overviewRulerLanes", "number");
	ОтсутствующиеТипы.Вставить("revealHorizontalRightPadding", "number");
	ОтсутствующиеТипы.Вставить("selectOnLineNumbers", "boolean");
	ОтсутствующиеТипы.Вставить("stopRenderingLineAfter", "number");

	Игнорируемые = ИгнорируемыеНастройкиРедакотра();
	НаборЭлементов = Опции.ПолучитьЭлементы();
	НаборЭлементов.Очистить();
	Для каждого Опция из НаборОпций Цикл
		Ключ = Опция[0];
		Если Игнорируемые.Найти(Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Элемент = Опция[1];
		ТекЗначение = ТекущиеНастройки.Получить(Ключ);
		ПоУмолчанию = Элемент.Получить("defaultValue");
		НоваяСтрока = НаборЭлементов.Добавить();
		НоваяСтрока.Наименование = Ключ;
		НоваяСтрока.ТекЗначение = ЗаписатьСтрокуJSON(ТекЗначение);
		НоваяСтрока.ПоУмолчанию = ЗаписатьСтрокуJSON(ПоУмолчанию);

		СхемаРеквизита = Элемент.Получить("schema");
		Если СхемаРеквизита = Неопределено Тогда
			ВариантыЗначений = Элемент.Получить("_allowedValues");
			Если ВариантыЗначений <> Неопределено Тогда
				СхемаРеквизита = Новый Структура("enum", ВариантыЗначений);
				НоваяСтрока.Схема = ЗаписатьСтрокуJSON(СхемаРеквизита);
			Иначе
				Если ОтсутствующиеТипы.Свойство(Ключ, НоваяСтрока.Тип) Тогда
					СхемаРеквизита = Новый Структура("type", НоваяСтрока.Тип);
					НоваяСтрока.Схема = ЗаписатьСтрокуJSON(СхемаРеквизита);
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;

		НоваяСтрока.Схема = ЗаписатьСтрокуJSON(СхемаРеквизита);
		НоваяСтрока.Описание = СхемаРеквизита.Получить("description");
		Если ПустаяСтрока(НоваяСтрока.Описание) Тогда
			НоваяСтрока.Описание = СхемаРеквизита.Получить("markdownDescription");
		КонецЕсли;
		НоваяСтрока.Тип = СхемаРеквизита.Получить("type");
		Если ПустаяСтрока(НоваяСтрока.Тип) Тогда
			НаборТипов = СхемаРеквизита.Получить("anyOf");
			Если НаборТипов = Неопределено Тогда
				ДобавитьПодчиненныеНастройки(НоваяСтрока.ПолучитьЭлементы(), СхемаРеквизита, ТекЗначение);
			ИначеЕсли Ключ = "quickSuggestions" Тогда
				СхемаРеквизита = НаборТипов[1].Получить("properties");
				ДобавитьПодчиненныеНастройки(НоваяСтрока.ПолучитьЭлементы(), СхемаРеквизита, ТекЗначение);
			Иначе
				НоваяСтрока.Тип = ЗаписатьСтрокуJSON(НаборТипов);
				НоваяСтрока.Отличается = ЗначениеИзменялось(НоваяСтрока);
			КонецЕсли;
		Иначе
			НоваяСтрока.Отличается = ЗначениеИзменялось(НоваяСтрока);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОпцииПередНачаломИзменения(Элемент, Отказ)

	Данные = Элементы.Опции.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПолеФормы = Элементы.ОпцииЗначение;
	Схема = ПрочитатьСтрокуJSON(Данные.Схема);
	Если Схема = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Перечисление = Схема.Получить("enum");
	Если ТипЗнч(Перечисление) = Тип("Массив") Тогда
		ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		ПолеФормы.РедактированиеТекста = Ложь;
		ПолеФормы.РежимВыбораИзСписка = Истина;
		ПолеФормы.КнопкаВыпадающегоСписка = Истина;
		ПолеФормы.СписокВыбора.Очистить();
		Для каждого ЭлементПеречисления из Перечисление Цикл
			ПолеФормы.СписокВыбора.Добавить(ЭлементПеречисления);
		КонецЦикла;
	Иначе
		ПолеФормы.СписокВыбора.Очистить();
		ПолеФормы.РежимВыбораИзСписка = Ложь;
		ПолеФормы.РедактированиеТекста = Истина;
		ПолеФормы.КнопкаВыпадающегоСписка = Ложь;
		Если Данные.Тип = "string" Тогда
			ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		ИначеЕсли Данные.Тип = "boolean" Тогда
			ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов("Булево");
			ПолеФормы.РедактированиеТекста = Ложь;
			ПолеФормы.РежимВыбораИзСписка = Истина;
			ПолеФормы.КнопкаВыпадающегоСписка = Истина;
			ПолеФормы.СписокВыбора.Очистить();
			ПолеФормы.СписокВыбора.Добавить(Истина, "true");
			ПолеФормы.СписокВыбора.Добавить(Ложь, "false");
		ИначеЕсли Данные.Тип = "integer" ИЛИ Данные.Тип = "number" Тогда
			ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов("Число");
		ИначеЕсли Данные.Наименование = "fontWeight" Тогда
			Массив = Новый Массив;
			Массив.Добавить(Тип("Строка"));
			Массив.Добавить(Тип("Число"));
			ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов(Массив);
			ПолеФормы.РедактированиеТекста = Ложь;
			ПолеФормы.РежимВыбораИзСписка = Истина;
			ПолеФормы.КнопкаВыпадающегоСписка = Истина;
			ПолеФормы.СписокВыбора.Очистить();
			ПолеФормы.СписокВыбора.Добавить("normal");
			ПолеФормы.СписокВыбора.Добавить("bold");
			Для Ном = 1 По 10 Цикл
				Значение = Ном * 100;
				Представление = Формат(Значение, "ЧГ=");
				ПолеФормы.СписокВыбора.Добавить(Значение, Представление);
			КонецЦикла;
		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Данные.ТекЗначение = ПрочитатьСтрокуJSON(Данные.ТекЗначение);

КонецПроцедуры

&НаКлиенте
Процедура ОпцииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Данные = Элементы.Опции.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	НовоеЗначение = Данные.ТекЗначение;
	Если ПустаяСтрока(НовоеЗначение) Тогда
		Если Данные.ПоУмолчанию <> "null" Тогда
			НовоеЗначение = ПрочитатьСтрокуJSON(Данные.ПоУмолчанию);
		КонецЕсли;
	КонецЕсли;

	ВремСтруктура = Новый Структура(Данные.Наименование, НовоеЗначение);
	Если Данные.ПолучитьРодителя() = Неопределено Тогда
		VanessaTabs.options = ЗаписатьСтрокуJSON(ВремСтруктура);
		Данные.ТекЗначение = VanessaTabs.current.getOption(Данные.Наименование);
		Данные.Отличается = ЗначениеИзменялось(Данные);
	Иначе
		ДанныеРодителя = Данные.ПолучитьРодителя();
		ВремСтруктура = Новый Структура(ДанныеРодителя.Наименование, ВремСтруктура);
		VanessaTabs.options = ЗаписатьСтрокуJSON(ВремСтруктура);
		ТекстJSON = VanessaTabs.current.getOption(ДанныеРодителя.Наименование);
		ТекЗначение = ПрочитатьСтрокуJSON(ТекстJSON).Получить(Данные.Наименование);
		Данные.ТекЗначение = ЗаписатьСтрокуJSON(ТекЗначение);
		Данные.Отличается = ЗначениеИзменялось(Данные);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОпцииЗначениеОчистка(Элемент, СтандартнаяОбработка)

	Данные = Элементы.Опции.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Данные.ПоУмолчанию <> "null" Тогда
		Данные.ТекЗначение = ПрочитатьСтрокуJSON(Данные.ПоУмолчанию);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ТекРезультат = Новый Структура;
	Для каждого ТекСтр из Опции.ПолучитьЭлементы() Цикл 
		Если ТекСтр.ПолучитьЭлементы().Количество() > 0 Тогда
			ЕстьИзменения = Ложь;
			ТекЗначение = Новый Структура;
			Для каждого ДочСтр из ТекСтр.ПолучитьЭлементы() Цикл
				Если ДочСтр.Отличается Тогда
					ДочЗначение = ПрочитатьСтрокуJSON(ДочСтр.ТекЗначение);
					ТекЗначение.Вставить(ДочСтр.Наименование, ДочЗначение);
					ЕстьИзменения = Истина;
				КонецЕсли;
			КонецЦикла;
			Если ЕстьИзменения Тогда 
				ТекРезультат.Вставить(ТекСтр.Наименование, ТекЗначение);
			КонецЕсли;
		Иначе
			Если ТекСтр.Наименование = "lineHeight" И ТекСтр.ТекЗначение = "19" Тогда
				//Это значение по умолчанию, которое не нужно сохранять
				Продолжить;
			КонецЕсли;
			Если ТекСтр.Отличается Тогда
				ТекЗначение = ПрочитатьСтрокуJSON(ТекСтр.ТекЗначение);
				ТекРезультат.Вставить(ТекСтр.Наименование, ТекЗначение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(ЗаписатьСтрокуJSON(ТекРезультат));
	
КонецПроцедуры

#КонецОбласти
