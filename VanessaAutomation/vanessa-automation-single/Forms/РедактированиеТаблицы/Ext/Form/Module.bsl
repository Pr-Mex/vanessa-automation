#Область КомандыФормы

&НаКлиенте
Процедура ПометитьВсе(Команда)
	Ном = 0;
	Для Каждого Элем Из СписокКолонок Цикл
		Ном          = Ном + 1;
		Элем.Пометка = Истина;
		Элементы["ТаблицаНаФорме_Колонка" + Формат(Ном, "ЧГ=; ЧН=0")].Видимость = Элем.Пометка;
	КонецЦикла;	
	
	Элементы.ТаблицаНаФорме_СлужебнаяПустаяКолонка_.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	Ном = 0;
	Для Каждого Элем Из СписокКолонок Цикл
		Ном          = Ном + 1;
		Элем.Пометка = Ложь;
		Элементы["ТаблицаНаФорме_Колонка" + Формат(Ном, "ЧГ=; ЧН=0")].Видимость = Элем.Пометка;
	КонецЦикла;
	
	Элементы.ТаблицаНаФорме_СлужебнаяПустаяКолонка_.Видимость = Истина;
	Элементы.ТаблицаНаФорме_СлужебнаяПустаяКолонка_.Заголовок = " ";
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьКолонкуВВерх(Команда)
	ТекИмяКолонки = Элементы.СписокКолонок.ТекущиеДанные.Значение;
	НомерКолонки = Число(СтрЗаменить(ТекИмяКолонки, "Колонка", "")) - 1;
	Если НомерКолонки = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	НовыйНомерКолонки = НомерКолонки - 1;
	
	ПоменятьКолонкиМестами(НомерКолонки, НовыйНомерКолонки);
	
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьКолонкуВниз(Команда)
	ТекИмяКолонки = Элементы.СписокКолонок.ТекущиеДанные.Значение;
	НомерКолонки = Число(СтрЗаменить(ТекИмяКолонки, "Колонка", "")) - 1;
	Если НомерКолонки = СписокКолонок.Количество() - 1 Тогда
		Возврат;
	КонецЕсли;	
	
	НовыйНомерКолонки = НомерКолонки + 1;
	
	ПоменятьКолонкиМестами(НомерКолонки, НовыйНомерКолонки);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКолонку(Команда)
	
	ДобавитьКолонкуСлужебный();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ДанныеКомандыVanessaAutomation(ИмяКоманды) Экспорт
	Возврат ДанныеКомандыVanessaAutomationСервер(ИмяКоманды); 
КонецФункции	 

&НаСервере
Функция ДанныеКомандыVanessaAutomationСервер(ИмяКоманды)
	
	Данные = Новый Структура;
	Данные.Вставить("Заголовок", Команды[ИмяКоманды].Заголовок);
	Данные.Вставить("Действие", Команды[ИмяКоманды].Действие);
	Данные.Вставить("Подсказка", Команды[ИмяКоманды].Подсказка);
	
	Возврат Данные; 
	
КонецФункции

&НаКлиенте
Процедура ПослеВводаИмениКолонки(ИмяКолонки, ДопПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(ИмяКолонки) Тогда
		МассивСтрок = ПолучитьМассивСтрокПослеРедактирования(Ложь);
		Если МассивСтрок.Количество() > 0 Тогда
			МассивСтрок[0] = МассивСтрок[0] + " '" + ИмяКолонки + "' |";
		КонецЕсли;	 
		Для Сч = 1 По МассивСтрок.Количество() - 1 Цикл
			МассивСтрок[Сч] = МассивСтрок[Сч] + " '' |";
		КонецЦикла;	
		ЗагрузитьТаблицуСервер(МассивСтрок);
		ПоказатьСкрытьСлужебнуюКолонку();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
		
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаСервере
Процедура ЗагрузитьМассивСтрокВТаблицу(Таблица,МассивСтрок)
	Таблица.Очистить();
	Таблица.Колонки.Очистить();
	
	Для Каждого Стр Из МассивСтрок Цикл
		СтрокаТаблицы = Таблица.Добавить();
		
		Стр = СтрЗаменить(Стр,"\|","~ЭкранированиеВертикальнойЧерты~");
		
		Стр = СокрЛП(Стр);
		Если Лев(Стр,1) = "|" Тогда
			Стр = Сред(Стр,2);
		КонецЕсли;	 
		
		Если Прав(Стр,1) = "|" Тогда
			Стр = Лев(Стр,СтрДлина(Стр)-1);
		КонецЕсли;	 
		
		МассивЗначений = РазложитьСтрокуВМассивПодстрок(Стр,"|");
		
		Для Ккк = 0 По МассивЗначений.Количество()-1 Цикл
			ИмяКолонки = "Колонка" + (Ккк+1);
			Если Таблица.Колонки.Количество() < Ккк+1 Тогда
				Таблица.Колонки.Добавить(ИмяКолонки,Новый ОписаниеТипов("Строка"));
			КонецЕсли;	
			
			МассивЗначений[Ккк] = СокрЛП(СтрЗаменить(МассивЗначений[Ккк],"~ЭкранированиеВертикальнойЧерты~","\|"));
			СтрокаТаблицы[ИмяКолонки] = МассивЗначений[Ккк];
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Таблица.Колонки.Добавить("СлужебнаяПустаяКолонка_");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьТаблицуСервер()
КонецПроцедуры

&НаСервере
Функция ЗаголовкКолонкиСервер(Стр,Имя)
	Если Найти(Имя,"СлужебнаяПустаяКолонка_") > 0 Тогда
		Возврат " ";
	КонецЕсли;	 
	
	Возврат Стр; 
КонецФункции	 

&НаСервере
Процедура ЗагрузитьТаблицуСервер(МассивСтрокДляРедактирования = Неопределено)
	
	Если Параметры.Свойство("ЗакрытиеФормы") И Параметры.ЗакрытиеФормы Тогда
		Возврат;
	КонецЕсли;	
	
	Если МассивСтрокДляРедактирования = Неопределено Тогда
		МассивСтрокДляРедактирования = Параметры.МассивСтрокДляРедактирования;
	КонецЕсли;	 
	
	ПромТаблица = Новый ТаблицаЗначений;
	ЗагрузитьМассивСтрокВТаблицу(ПромТаблица,МассивСтрокДляРедактирования);
	
	Если НЕ СоздаваласьСлужебнаяКолонка Тогда
		ДобавляемыеРеквизиты  = Новый Массив;
		
		ИмяКолонки = "СлужебнаяПустаяКолонка_";
		НоваяКолонка = Новый РеквизитФормы(ИмяКолонки, Новый ОписаниеТипов("Строка"), "ТаблицаНаФорме",""); 
		ДобавляемыеРеквизиты.Добавить(НоваяКолонка);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		НовыйЭлемент = Элементы.Добавить("ТаблицаНаФорме_" + ИмяКолонки, Тип("ПолеФормы"), Элементы.ТаблицаНаФорме);       
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "ТаблицаНаФорме." + ИмяКолонки;
		НовыйЭлемент.Ширина = 10;		
		
		СоздаваласьСлужебнаяКолонка = Истина;
	КонецЕсли;	 
	
	ДобавляемыеРеквизиты  = Новый Массив;
	НовыеКолонки = Новый Массив;
	Для Каждого Колонка Из ПромТаблица.Колонки Цикл 
		
		Если Найти(Колонка.Имя,"СлужебнаяПустаяКолонка_") > 0 Тогда
			Продолжить;
		КонецЕсли;	 

		Если СписокКолонок.НайтиПоЗначению(Колонка.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		НоваяКолонка = Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов("Строка"), "ТаблицаНаФорме",
		    ЗаголовкКолонкиСервер(СокрЛП(ПромТаблица[0][Колонка.Имя]),Колонка.Имя)); 
		ДобавляемыеРеквизиты.Добавить(НоваяКолонка);
		
		ЭлементСпискаКолонок               = СписокКолонок.Добавить();
		ЭлементСпискаКолонок.Значение      = Колонка.Имя;
		ЭлементСпискаКолонок.Пометка       = Истина;
		ЭлементСпискаКолонок.Представление = СокрЛП(ПромТаблица[0][Колонка.Имя]);
		Если Лев(ЭлементСпискаКолонок.Представление,1) = "'" И Прав(ЭлементСпискаКолонок.Представление,1) = "'" Тогда
			ЭлементСпискаКолонок.Представление = Сред(ЭлементСпискаКолонок.Представление,2,СтрДлина(ЭлементСпискаКолонок.Представление)-2);
		КонецЕсли;	 
		
		НовыеКолонки.Добавить(Колонка);
		
	КонецЦикла; 
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого Колонка Из НовыеКолонки Цикл 
		НовыйЭлемент = Элементы.Добавить("ТаблицаНаФорме_" + Колонка.Имя, Тип("ПолеФормы"), Элементы.ТаблицаНаФорме);       
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "ТаблицаНаФорме." + Колонка.Имя;
		НовыйЭлемент.Ширина = 10;		
	КонецЦикла; 
	
	Для Каждого Элем Из СписокКолонок Цикл
		Элементы["ТаблицаНаФорме_" + Элем.Значение].Заголовок = Элем.Представление;
	КонецЦикла;	 
		
	ЗначениеВРеквизитФормы(ПромТаблица,"ТаблицаНаФорме");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПоказатьСкрытьСлужебнуюКолонку();
КонецПроцедуры

&НаКлиенте
Процедура СписокКолонокПометкаПриИзменении(Элемент)
	Значение      = Элементы.СписокКолонок.ТекущиеДанные.Значение;
	ЭлементСписка = СписокКолонок.НайтиПоЗначению(Значение);
	
	ИД = СписокКолонок.Индекс(ЭлементСписка);
	
	Элементы["ТаблицаНаФорме_Колонка" + Формат(ИД+1, "ЧГ=; ЧН=0")].Видимость = Элементы.СписокКолонок.ТекущиеДанные.Пометка;
	
	ПоказатьСкрытьСлужебнуюКолонку();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьСлужебнуюКолонку()
	КолПометок = 0;
	Для Каждого Элем Из СписокКолонок Цикл
		Если Элем.Пометка Тогда
			КолПометок = КолПометок + 1;
		КонецЕсли;	 
	КонецЦикла;	 
	
	Если КолПометок = 0 Тогда
		Элементы.ТаблицаНаФорме_СлужебнаяПустаяКолонка_.Видимость = Истина;
	Иначе	
		Элементы.ТаблицаНаФорме_СлужебнаяПустаяКолонка_.Видимость = Ложь;
	КонецЕсли;	 
	
	Элементы.ТаблицаНаФорме_СлужебнаяПустаяКолонка_.Заголовок = " ";
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьМассивСтрокПослеРедактирования(ИспользоватьПометки = Истина)
	Таблица = РеквизитФормыВЗначение("ТаблицаНаФорме");
	
	Массив = Новый Массив;
	
	Для НомерСтроки = 0 По Таблица.Количество()-1 Цикл
		Стр = "| ";
		Для Ккк = 0 По СписокКолонок.Количество()-1 Цикл
			Если НЕ СписокКолонок[Ккк].Пометка И ИспользоватьПометки Тогда
				Продолжить;
			КонецЕсли;	 
			
			Стр = Стр + Таблица[НомерСтроки][СписокКолонок[Ккк].Значение] + "|";
		КонецЦикла;
		
		Массив.Добавить(Стр);
	КонецЦикла;	
	
	Возврат Массив;
КонецФункции	

&НаКлиенте
Процедура ОК(Команда)
	МассивСтрок = ПолучитьМассивСтрокПослеРедактирования();
	Данные = Новый Структура;
	Данные.Вставить("МассивСтрок", МассивСтрок);
	Данные.Вставить("UID", ВладелецФормы.УникальныйИдентификатор);
	Оповестить("РедактированиеТаблицыGherkin", Данные);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СписокКолонокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СнятьВсе(Неопределено);
	СписокКолонок[ВыбраннаяСтрока].Пометка = Истина;
	СписокКолонокПометкаПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПоменятьКолонкиМестами(НомерКолонки, НовыйНомерКолонки)
	ПредставлениеНомерКолонки = СписокКолонок[НомерКолонки].Представление;
	ПредставлениеНовыйНомерКолонки = СписокКолонок[НовыйНомерКолонки].Представление;
	НовоеЗначениеКолонки = СписокКолонок[НовыйНомерКолонки].Значение;
	
	СписокКолонок[НомерКолонки].Представление = ПредставлениеНовыйНомерКолонки; 
	СписокКолонок[НовыйНомерКолонки].Представление = ПредставлениеНомерКолонки; 
	
	Если НовыйНомерКолонки > НомерКолонки Тогда
		Элементы.СписокКолонок.ТекущаяСтрока = Элементы.СписокКолонок.ТекущаяСтрока + 1;
	Иначе	
		Элементы.СписокКолонок.ТекущаяСтрока = Элементы.СписокКолонок.ТекущаяСтрока - 1;
	КонецЕсли;	 
	
	ПоменятьКолонкиМестамиСервер(НомерКолонки, НовыйНомерКолонки);
	
	Элементы["ТаблицаНаФорме_" + СписокКолонок[НомерКолонки].Значение].Заголовок = ПредставлениеНовыйНомерКолонки;
	Элементы["ТаблицаНаФорме_" + СписокКолонок[НовыйНомерКолонки].Значение].Заголовок = ПредставлениеНомерКолонки;
	
КонецПроцедуры 

&НаСервере
Процедура ПоменятьКолонкиМестамиСервер(НомерКолонки, НовыйНомерКолонки)
	
	ТаблицаНаФормеСервер = РеквизитФормыВЗначение("ТаблицаНаФорме");
	
	Для Каждого СтрокаТаблицаНаФормеСервер Из ТаблицаНаФормеСервер Цикл
		ПервоеЗначение = СтрокаТаблицаНаФормеСервер[НомерКолонки + 1];
		ВтороеЗначение = СтрокаТаблицаНаФормеСервер[НовыйНомерКолонки + 1];
		
		СтрокаТаблицаНаФормеСервер[НомерКолонки + 1] = ВтороеЗначение;
		СтрокаТаблицаНаФормеСервер[НовыйНомерКолонки + 1] = ПервоеЗначение;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ТаблицаНаФормеСервер,"ТаблицаНаФорме"); 
	МассивСтрок = ПолучитьМассивСтрокПослеРедактирования();
	ЗагрузитьТаблицуСервер(МассивСтрок);
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокКолонокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокКолонокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ДобавитьКолонкуСлужебный();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКолонкуСлужебный()
	
	Текст = ВладелецФормы.Локализовать("Введите имя новой колонки");
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВводаИмениКолонки", ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещения, , Текст);
	
КонецПроцедуры 

#КонецОбласти

