//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

// Делает отключение модуля
&НаКлиенте
Функция ОтключениеМодуля() Экспорт

	Ванесса = Неопределено;
	Контекст = Неопределено;
	КонтекстСохраняемый = Неопределено;

КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПроизошлаЗагрузкаНесколькихФичИзКаталога()","ПроизошлаЗагрузкаНесколькихФичИзКаталога","Тогда произошла загрузка нескольких фич из каталога");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопкуЗагрузитьОднуФичу()","ЯНажимаюНаКнопкуЗагрузитьОднуФичу","Когда Я нажимаю на кнопку Загрузить одну фичу");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрывшемсяОкнеЯУказываюПутьКФиче(Парам01)","ВОткрывшемсяОкнеЯУказываюПутьКФиче","Тогда в открывшемся окне я указываю путь к фиче ""Core\FeatureWrite\Док-ПримерНаписанияФичи.feature""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПроизошлаЗагрузкаОднойФичиИзКаталога()","ПроизошлаЗагрузкаОднойФичиИзКаталога","Тогда произошла загрузка одной фичи из каталога");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопкуЗагрузитьФайлыИзКаталога()","ЯНажимаюНаКнопкуЗагрузитьФайлыИзКаталога","Когда Я нажимаю на кнопку Загрузить файлы из каталога");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрывшемсяОкнеЯУказываюПутьККаталогуФич(Парам01)","ВОткрывшемсяОкнеЯУказываюПутьККаталогуФич","И     в открывшемся окне я указываю путь к каталогу фич ""Core\FeatureWrite""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПроизошлаЗагрузкаФичИзКаталога()","ПроизошлаЗагрузкаФичИзКаталога","Тогда произошла загрузка фич из каталога");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯДелаюСвёрткуСтрокДереваДоФич()","ЯДелаюСвёрткуСтрокДереваДоФич","И я делаю свёртку строк дерева до фич");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВДеревеЕстьНесколькоФич()","ВДеревеЕстьНесколькоФич","И В Дереве есть несколько фич");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопкуПерезагрузитьСценарии()","ЯНажимаюНаКнопкуПерезагрузитьСценарии","И я нажимаю на кнопку Перезагрузить Сценарии");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ОднаИзФичНеЗагрузиласьТкВНейБылУказанТегIgnoreOnCIMainBuild()","ОднаИзФичНеЗагрузиласьТкВНейБылУказанТегIgnoreOnCIMainBuild","Тогда одна из фич не загрузилась, т.к. в ней был указан тег @IgnoreOnCIMainBuild");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"КоличествоФичВДеревеУменьшилось()","КоличествоФичВДеревеУменьшилось","И количество фич в дереве уменьшилось");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ОднаИзФичНеЗагрузиласьТкВНейНЕБылУказанТегIgnoreOnCIMainBuild()","ОднаИзФичНеЗагрузиласьТкВНейНЕБылУказанТегIgnoreOnCIMainBuild","Тогда одна из фич не загрузилась, т.к. в ней НЕ был указан тег @IgnoreOnCIMainBuild");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда Я нажимаю на кнопку Загрузить одну фичу
//@ЯНажимаюНаКнопкуЗагрузитьОднуФичу()
Функция ЯНажимаюНаКнопкуЗагрузитьОднуФичу() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\FeatureLoadOne.sikuli""");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <FeatureLoadOne>");
	
	Ванесса.СделатьДействияПриЗаписиИнструкции("толькоскриншот");
	
	Ванесса.Шаг("И я набираю текст ""#enter""");
	
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\OpenDialogClick.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <OpenDialogClick>");
КонецФункции

&НаКлиенте
//Тогда в открывшемся окне я указываю путь к фиче "Core\FeatureWrite\Док-ПримерНаписанияФичи.feature"
//@ВОткрывшемсяОкнеЯУказываюПутьКФиче(Парам01)
Функция ВОткрывшемсяОкнеЯУказываюПутьКФиче(ЧастьПутиКФиче) Экспорт
	ПутьКФиче = Ванесса.Объект.КаталогИнструментов + "\Features\" + ЧастьПутиКФиче;
	Ванесса.Шаг("И я набираю текст """ + ПутьКФиче + """");
	Ванесса.СделатьДействияПриЗаписиИнструкции();
	Ванесса.Шаг("И я набираю текст ""#enter""");
КонецФункции

&НаКлиенте
//Когда Я нажимаю на кнопку Загрузить файлы из каталога
//@ЯНажимаюНаКнопкуЗагрузитьФайлыИзКаталога()
Функция ЯНажимаюНаКнопкуЗагрузитьФайлыИзКаталога() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\FeatureLoadMany.sikuli""");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <FeatureLoadMany>");
	
	Ванесса.СделатьДействияПриЗаписиИнструкции("толькоскриншот");
	
	Ванесса.Шаг("И я набираю текст ""#enter""");
	
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\OpenDialogClickFolder.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <OpenDialogClickFolder>");
КонецФункции

&НаКлиенте
//Тогда в открывшемся окне я указываю путь к каталогу фич "Core\FeatureWrite"
//@ВОткрывшемсяОкнеЯУказываюПутьККаталогуФич(Парам01)
Функция ВОткрывшемсяОкнеЯУказываюПутьККаталогуФич(ЧастьПутиКФиче) Экспорт
	ПутьКФиче = Ванесса.Объект.КаталогИнструментов + "\Features\" + ЧастьПутиКФиче;
	Ванесса.Шаг("И я набираю текст """ + ПутьКФиче + """");
	Ванесса.СделатьДействияПриЗаписиИнструкции();

	
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\OpenDialogClickFolderSelect.sikuli""");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <OpenDialogClickFolderSelect>");
КонецФункции

&НаКлиенте
//Тогда произошла загрузка фич из каталога
//@ПроизошлаЗагрузкаФичИзКаталога()
Функция ПроизошлаЗагрузкаФичИзКаталога() Экспорт
	//Ванесса.Sleep(3);
	ДеревоТестов = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку("ДеревоТестов");
	
	КолФич = 0;
	
	Для каждого СтрДеревоТестов Из ДеревоТестов Цикл
		ПутьКФиче = СтрДеревоТестов["Путь к файлу"];
		Если ПутьКФиче = Неопределено Тогда
			ВызватьИсключение Ванесса.ПолучитьТекстСообщенияПользователю("ПутьКФиче=Неопределено");
		КонецЕсли;	 
		Если Найти(НРег(ПутьКФиче),".feature") > 0 Тогда
			КолФич = КолФич + 1;
		КонецЕсли;	 
	КонецЦикла;
	
	Ванесса.ПроверитьРавенство(КолФич > 0,Истина,"Загружено больше одной фичи");
КонецФункции

&НаКлиенте
//Тогда произошла загрузка нескольких фич из каталога
//@ПроизошлаЗагрузкаНесколькихФичИзКаталога()
Функция ПроизошлаЗагрузкаНесколькихФичИзКаталога() Экспорт
	Ванесса.Sleep(3);
КонецФункции

&НаКлиенте
//И я нажимаю на кнопку Перезагрузить Сценарии
//@ЯНажимаюНаКнопкуПерезагрузитьСценарии()
Функция ЯНажимаюНаКнопкуПерезагрузитьСценарии() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\ReloadScenarios.sikuli""");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <ReloadScenarios>");
	
	Ванесса.СделатьДействияПриЗаписиИнструкции("толькоскриншот");
КонецФункции

&НаКлиенте
//И ываыавыаыв
//@Ываыавыаыв()
Функция Ываыавыаыв() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение Ванесса.ПолучитьТекстСообщенияПользователю("Не реализовано.");
КонецФункции

&НаКлиенте
//Тогда одна из фич не загрузилась, т.к. в ней был указан тег @IgnoreOnCIMainBuild
//@ОднаИзФичНеЗагрузиласьТкВНейБылУказанТегIgnoreOnCIMainBuild()
Функция ОднаИзФичНеЗагрузиласьТкВНейБылУказанТегIgnoreOnCIMainBuild() Экспорт
	
КонецФункции

&НаКлиенте
//Тогда одна из фич не загрузилась, т.к. в ней НЕ был указан тег @IgnoreOnCIMainBuild
//@ОднаИзФичНеЗагрузиласьТкВНейНЕБылУказанТегIgnoreOnCIMainBuild()
Функция ОднаИзФичНеЗагрузиласьТкВНейНЕБылУказанТегIgnoreOnCIMainBuild() Экспорт
	
КонецФункции

&НаКлиенте
//Тогда произошла загрузка одной фичи из каталога
//@ПроизошлаЗагрузкаОднойФичиИзКаталога()
Функция ПроизошлаЗагрузкаОднойФичиИзКаталога() Экспорт
	Ванесса.Шаг("И таблица формы с именем ""ДеревоТестов"" стала равной:
		|| 'Снипет'                                      | 'Наименование'                                            |
		|| ''                                            | 'Док-ПримерНаписанияФичи.feature'                         |
		|| ''                                            | 'Док-ПримерНаписанияФичи'                                 |
		|| ''                                            | 'Контекст'                                                |
		|| 'СформироватьИмяВременногоФайлаФичи(Парам01)' | 'Когда Сформировать имя временного файла фичи ""Example1""' |
		|| ''                                            | 'Создание feature-файла'                                  |
		|| 'ЯОткрываюТекстовыйРедактор()'                | 'Когда Я открываю текстовый редактор'                     |
		|| 'ЗапустилсяРедакторVisualStudioCode()'        | 'Тогда запустился редактор Visual Studio Code'            |
		|| 'ЯПишуЗаголовокФичи()'                        | 'И Я пишу заголовок фичи'                                 |
		|| 'ЯПишуСекциюКонтекст()'                       | 'И Я пишу секцию Контекст'                                |
		|| 'ЯПишуСекциюСценарий()'                       | 'И Я пишу секцию Сценарий'                                |
		|| 'ЯПишуСекциюСтруктураСценария()'              | 'И Я пишу секцию Структура сценария'                      |
		|| 'СохраняюСделанныеИзменения()'                | 'И Сохраняю сделанные изменения'                          |
		|");
КонецФункции

&НаКлиенте
//И я делаю свёртку строк дерева до фич
//@ЯДелаюСвёрткуСтрокДереваДоФич()
Функция ЯДелаюСвёрткуСтрокДереваДоФич() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\SvernutDerevoDoFich.sikuli""");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <SvernutDerevoDoFich>");
	
	Ванесса.СделатьДействияПриЗаписиИнструкции("толькоскриншот");
	
	Ванесса.Шаг("И я набираю текст ""#enter""");
КонецФункции

&НаКлиенте
Функция ПолучитьКоличествоФич()
	КолФич = 0;
	ДеревоТестов = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку("ДеревоТестов");
	Для каждого СтрДеревоТестов Из ДеревоТестов Цикл
		ПутьКФиче = СтрДеревоТестов["Путь к файлу"];
		Если ПутьКФиче = Неопределено Тогда
			ВызватьИсключение Ванесса.ПолучитьТекстСообщенияПользователю("ПутьКФиче=Неопределено");
		КонецЕсли;	 
		Если Найти(НРег(ПутьКФиче),".feature") > 0 Тогда
			КолФич = КолФич + 1;
		КонецЕсли;	 
	КонецЦикла;
	
	Ванесса.ПроверитьРавенство(КолФич > 0,Истина,"Загружено больше одной фичи");
	
	Возврат КолФич;
КонецФункции	

&НаКлиенте
//И В Дереве есть несколько фич
//@ВДеревеЕстьНесколькоФич()
Функция ВДеревеЕстьНесколькоФич() Экспорт
	КолФич = ПолучитьКоличествоФич();
	Контекст.Вставить("ТекущееКоличествоФич",КолФич);
КонецФункции

&НаКлиенте
//И количество фич в дереве уменьшилось
//@КоличествоФичВДеревеУменьшилось()
Функция КоличествоФичВДеревеУменьшилось() Экспорт
	КолФич = ПолучитьКоличествоФич();
	Ванесса.ПроверитьРавенство(КолФич < Контекст.ТекущееКоличествоФич,Истина,"Количество фич в дереве уменьшилось.");
	Ванесса.ПроверитьНеРавенство(КолФич ,0,"Есть хотя бы одна фича.");
КонецФункции
