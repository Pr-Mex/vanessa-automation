//начало текста модуля
&НаКлиенте
Перем Ванесса;
&НаКлиенте
Перем МаксКоличествоСекундПодключения,ТекКоличествоСекундПодключения;

// Делает отключение модуля
&НаКлиенте
Функция ОтключениеМодуля() Экспорт

	Ванесса = Неопределено;
	Контекст = Неопределено;
	КонтекстСохраняемый = Неопределено;

КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER()","ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER","Я работаю в сеансе, запущенного с ключом TESTMANAGER");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем()","ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем","Я запускаю сеанс 1С с ключом TESTCLIENT");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого()","ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого","в переменной Контекст появилось значение ГлавноеОкноТестируемого");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСворачиваюВсеОкна()","ЯСворачиваюВсеОкна","я сворачиваю все окна");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУстанавливаюСоединениеССеансомTESTCLIENT()","ЯУстанавливаюСоединениеССеансомTESTCLIENT","я устанавливаю соединение с сеансом TESTCLIENT");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯАктивизируюГлавноеОкноСеансаTESTCLIENT()","ЯАктивизируюГлавноеОкноСеансаTESTCLIENT","я активизирую главное окно сеанса TESTCLIENT");
	
	

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции


&НаКлиенте
//Я работаю в сеансе, запущенного с ключом TESTMANAGER
//@ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER()
Функция ЯРаботаюВСеансеЗапущенногоСКлючомTESTMANAGER() Экспорт
	Попытка
		ТипЗначения = Тип("ТестируемоеПриложение");
	Исключение
		ВызватьИсключение Ванесса.ПолучитьТекстСообщенияПользователю("Хост сеанс надо запустить с ключом /TESTMANAGER.");
	КонецПопытки;
	
КонецФункции


&НаКлиенте
//я сворачиваю все окна
//@ЯСворачиваюВсеОкна()
Функция ЯСворачиваюВсеОкна() Экспорт
	СисИнфо = Новый СистемнаяИнформация; 
	Если (СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86) или (СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64) Тогда		
		Попытка
			Оболочка = Новый COMОбъект("Shell.Application");
			Оболочка.MinimizeAll();
		Исключение
			ВызватьИсключение Ванесса.ПолучитьТекстСообщенияПользователю("Не удалось подключить COM объект <Shell.Application>");
		КонецПопытки;
	КонецЕсли;	 
КонецФункции

&НаКлиенте
//Я запускаю сеанс 1С с ключом TESTCLIENT С Логином "НетЛогина" И Паролем "НетПароля"
//@ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем()
Функция ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем(Логин,Пароль) Экспорт
	
	УстановитьКраткийЗаголовокПриложения("Vanessa-behavior");
	
	Контекст.Вставить("Логин",Логин);
	Контекст.Вставить("Пароль",Пароль);
	
	Если КонтекстСохраняемый.Свойство("ТестовоеПриложение") Тогда
		Если КонтекстСохраняемый.ТестовоеПриложение <> Неопределено Тогда
			Попытка
				КонтекстСохраняемый.ТестовоеПриложение.УстановитьСоединение();
				ГлавноеОкноТестКлиента = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),,,5);
			Исключение
				ГлавноеОкноТестКлиента = Неопределено;
			КонецПопытки;
			
			Если ГлавноеОкноТестКлиента <> Неопределено Тогда
				Возврат Неопределено;
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	
	
	СисИнфо = Новый СистемнаяИнформация; 
	
	ВерсияПриложения = СисИнфо.ВерсияПриложения;
	ПутьК1С = "C:\Program Files (x86)\1cv8\" + ВерсияПриложения + "\bin\1cv8c.exe";
	
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ПутьК1С) Тогда
		ТекстСообщения = Ванесса.ПолучитьТекстСообщенияПользователю("Не нашел путь к 1cv8c.exe: %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",ПутьК1С);
		ВызватьИсключение ТекстСообщения;
		Возврат Неопределено;
	КонецЕсли;	 
	
	КаталогБазы = СтрокаСоединенияИнформационнойБазы();
	
	Если Найти(ВРег(КаталогБазы),ВРег("File=")) > 0 Тогда
		
		КаталогБазы = СтрЗаменить(КаталогБазы,"File="," /F");
		КаталогБазы = СтрЗаменить(КаталогБазы,";","");
		
	Иначе
		
		КаталогБазы = СтрЗаменить(КаталогБазы,"Srvr=","/S");
		КаталогБазы = СтрЗаменить(КаталогБазы,""";Ref=""","\");
		
	КонецЕсли;
	
	
	Если НРег(Логин) <> НРег("НетЛогина") Тогда
		КаталогБазы = КаталогБазы + " /N""" + Логин +  """ /P""" + Пароль + """";
	КонецЕсли;	 
	
	СтрокаЗапуска = """" + ПутьК1С + """ ENTERPRISE " + КаталогБазы + " /TESTCLIENT";

	ЗапуститьСистему(СтрокаЗапуска);
	
	ТипЗначения = Тип("ТестируемоеПриложение");
	ПараметрыОбъекта = Новый Массив;
	ПараметрыОбъекта.Добавить("localhost");
	ТестовоеПриложение = Новый (ТипЗначения,ПараметрыОбъекта);
	
	КонтекстСохраняемый.Вставить("ТестовоеПриложение",ТестовоеПриложение);
	
КонецФункции


&НаКлиенте
Функция УстановитьСоединениеССеансомTESTCLIENT()
	ИмяОбработчика = "УстановитьСоединениеССеансомTESTCLIENT";
	
	Если НЕ Ванесса.ИдетВыполнениеСценариев() Тогда
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Возврат Неопределено;
	КонецЕсли;	 
	
	ТестовоеПриложение = КонтекстСохраняемый.ТестовоеПриложение;
	
	ТекКоличествоСекундПодключения = ТекКоличествоСекундПодключения + 1;
	ТекстСообщения = Ванесса.ПолучитьТекстСообщенияПользователю("Количество секунд дял подключения TestClient: %1");
	ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",ТекКоличествоСекундПодключения);
	Сообщить(Ванесса.ПолучитьТекстСообщенияПользователю(ТекстСообщения));
	
	Попытка
		ТестовоеПриложение.УстановитьСоединение();
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Сообщить(Ванесса.ПолучитьТекстСообщенияПользователю("Подключились к сеансу TESTCLIENT."));
		Ванесса.ПродолжитьВыполнениеШагов();
		
		Возврат Неопределено;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Если ТекКоличествоСекундПодключения >= МаксКоличествоСекундПодключения Тогда
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;	 
	
КонецФункции


&НаКлиенте
//я устанавливаю соединение с сеансом TESTCLIENT
//@ЯУстанавливаюСоединениеССеансомTESTCLIENT()
Функция ЯУстанавливаюСоединениеССеансомTESTCLIENT() Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();
	
	МаксКоличествоСекундПодключения = 10;
	ТекКоличествоСекундПодключения  = 0;
	
	ПодключитьОбработчикОжидания("УстановитьСоединениеССеансомTESTCLIENT",1);
	
КонецФункции


&НаКлиенте
Функция ПолучитьГлавноеОкноТестируемогоПриложения()
	ИмяОбработчика = "ПолучитьГлавноеОкноТестируемогоПриложения";
	
	Если НЕ Ванесса.ИдетВыполнениеСценариев() Тогда
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Возврат Неопределено;
	КонецЕсли;	 
	
	ТестовоеПриложение = КонтекстСохраняемый.ТестовоеПриложение;
	
	ТекКоличествоСекундПодключения = ТекКоличествоСекундПодключения + 1;
	
	Если ТекКоличествоСекундПодключения >= МаксКоличествоСекундПодключения Тогда
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Сообщить(Ванесса.ПолучитьТекстСообщенияПользователю("Не вышло получитьГлавноеОкноТестируемогоПриложения."));
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;	 
	
	
	Попытка
		ГлавноеОкноТестируемого = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"));
		ГлавноеОкноТестируемого.Активизировать();
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		КонтекстСохраняемый.Вставить("ГлавноеОкноТестируемого",ГлавноеОкноТестируемого);
		Ванесса.ПродолжитьВыполнениеШагов();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецФункции


&НаКлиенте
Функция ЗавершитьСеансыTestClientПринудительно()
	Ванесса.ЗавершитьСеансыTestClientПринудительно();
КонецФункции


&НаКлиенте
//я активизирую главное окно сеанса TESTCLIENT
//@ЯАктивизируюГлавноеОкноСеансаTESTCLIENT()
Функция ЯАктивизируюГлавноеОкноСеансаTESTCLIENT() Экспорт
	
	ОписаниеОшибки = "";
	ТестовоеПриложение = КонтекстСохраняемый.ТестовоеПриложение;
	Попытка
		ГлавноеОкноТестируемого = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),,,5);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ГлавноеОкноТестируемого = Неопределено;
	КонецПопытки;
	
	Если ГлавноеОкноТестируемого = Неопределено Тогда
		ТекстСообщения = Ванесса.ПолучитьТекстСообщенияПользователю("Делаю перезапуск TESTCLIENT. ОписаниеОшибки=%1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",ОписаниеОшибки);
		Сообщить(Ванесса.ПолучитьТекстСообщенияПользователю(ТекстСообщения));
		ЗавершитьСеансыTestClientПринудительно();
		ЯЗапускаюСеанс1ССКлючомTESTCLIENTСЛогиномИПаролем(Контекст.Логин,Контекст.Пароль);
		ТестовоеПриложение      = КонтекстСохраняемый.ТестовоеПриложение;
		ГлавноеОкноТестируемого = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),,,20);
	КонецЕсли;	 
	
	ГлавноеОкноТестируемого.Активизировать();
	
	КонтекстСохраняемый.Вставить("ГлавноеОкноТестируемого",ГлавноеОкноТестируемого);
КонецФункции


&НаКлиенте
//в переменной Контекст появилось значение ГлавноеОкноТестируемого
//@ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого()
Функция ВПеременнойКонтекстПоявилосьЗначениеГлавноеОкноТестируемого() Экспорт
	Ванесса.ПроверитьРавенство(КонтекстСохраняемый.Свойство("ГлавноеОкноТестируемого"),Истина,"В контексте есть ГлавноеОкноТестируемого.");
КонецФункции




//окончание текста модуля
