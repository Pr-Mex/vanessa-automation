
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОкнеСозданияФотографииЯДелаюОтмену()","ВОкнеСозданияФотографииЯДелаюОтмену","И в окне создания фотографии я делаю отмену","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОкнеСозданияФотографииЯДелаюФото()","ВОкнеСозданияФотографииЯДелаюФото","И в окне создания фотографии я делаю фото","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОкнеСозданияФотографииЯВключаюВспышку()","ВОкнеСозданияФотографииЯВключаюВспышку","И в окне создания фотографии я включаю вспышку","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОкнеСозданияФотографииЯМеняюКамеру()","ВОкнеСозданияФотографииЯМеняюКамеру","И в окне создания фотографии я меняю камеру","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОкнеСозданияФотографииЯПодтверждаюФото()","ВОкнеСозданияФотографииЯПодтверждаюФото","И в окне создания фотографии я подтверждаю фото","","");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВМобильномЯНажимаюНаКоординатыИ(Парам01,Парам02)","ВМобильномЯНажимаюНаКоординатыИ","И в мобильном я нажимаю на координаты ""Х"" и ""У""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВМобильномЯНажимаюНаОтносительныеКоординатыИ(Парам01,Парам02)","ВМобильномЯНажимаюНаОтносительныеКоординатыИ","И в мобильном я нажимаю на относительные координаты ""Х"" и ""У""","","");

	Возврат ВсеТесты;
КонецФункции
	
// Делает отключение модуля
Функция ОтключениеМодуля() Экспорт
	
	Ванесса = Неопределено;
	Контекст = Неопределено;
	КонтекстСохраняемый = Неопределено;
	
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции

#КонецОбласти

#Область Служебные_комманды
&НаКлиенте         
	
Функция ПараметрыЭкрана()
	СтруктураПараметрыЭкрана = Новый Структура("Высота, Ширина, Ориентация", 0, 0, 0);
	
	ИнформацияПроУстройство = ВыполнитьИВернутьСообщениеИзADB("shell dumpsys input");
	
	УдалосьРаспознатьРазмерЭкрана = Ложь;
	ИндексНачала = 0;
	ИндексОкончания = 0;                                            
	Якорь = "Viewport INTERNAL";
	Для Индекс = 1 По СтрЧислоВхождений(ИнформацияПроУстройство, Якорь) Цикл
		ИндексНачала = Вычислить("СтрНайти(ИнформацияПроУстройство, Якорь, , , Индекс)");
		ИндексОкончания = Вычислить("СтрНайти(ИнформацияПроУстройство, Символы.ПС, , ИндексНачала)");
		ШаблонПоиска = "deviceSize=[0, 0]";
		ПоискПоДанным = Сред(ИнформацияПроУстройство, ИндексНачала, ИндексОкончания - ИндексНачала); 
		Если Ванесса._СтрНайти(ПоискПоДанным, ШаблонПоиска) = 0 Тогда 
			УдалосьРаспознатьРазмерЭкрана = Истина;
			Прервать;
		КонецЕсли;   
	КонецЦикла;                                    
	
	Если Не УдалосьРаспознатьРазмерЭкрана Тогда
		ВызватьИсключение "Ошибка рассчета диагонали экрана"; 
	КонецЕсли;
	
	Данные = Вычислить("СтрРазделить(ПоискПоДанным, "" =[],"", Ложь)");
	Для Индекс = 0 По Данные.Количество() - 1 Цикл
		Если Данные[Индекс] = "deviceSize" Тогда
			СтруктураПараметрыЭкрана.Высота = Число(Данные[Индекс + 1]);
			СтруктураПараметрыЭкрана.Ширина = Число(Данные[Индекс + 2]); 
		ИначеЕсли Данные[Индекс] = "orientation" Тогда
			СтруктураПараметрыЭкрана.Ориентация = Число(Данные[Индекс + 1]);
		КонецЕсли;
	КонецЦикла;  
	
	Возврат СтруктураПараметрыЭкрана;
КонецФункции     

&НаКлиенте
Функция ВыполнитьИВернутьСообщениеИзADB(ТекстКоманды)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("log");
	Ванесса.ВыполнитьКомандуОСБезПоказаЧерногоОкна(Ванесса.Объект.ПутьКadb + "adb " + ТекстКоманды + " > " + ИмяВременногоФайла);
	Данные = "";
	Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяВременногоФайла) Тогда
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяВременногоФайла);
		Данные = Текст.Прочитать();
		Текст.Закрыть();
		УдалитьФайлы(ИмяВременногоФайла);
	КонецЕсли;
	Возврат Данные;
КонецФункции  

&НаКлиенте
Функция ТкнутьВЭкран(Х, У, ЭтоКоординаты = Ложь)
	ТекстКоманды = "shell input tap %1 %2";
	Если ЭтоКоординаты Тогда
		ХПозицияКнопки = Х;
		УПозицияКнопки = У;
	Иначе
		СтруктураПараметрыЭкрана = ПараметрыЭкрана();
		Если СтруктураПараметрыЭкрана.Ориентация > 0 Тогда
			ВызватьИсключение НСтр("en = 'Support only portrait orientation'; ru = 'Поддерживается только портретная ориентация'");   
		КонецЕсли; 
		ХПозицияКнопки = Цел(СтруктураПараметрыЭкрана.Высота * Х);
		УПозицияКнопки = Цел(СтруктураПараметрыЭкрана.Ширина * У);
	КонецЕсли;
	ТекстКоманды = Ванесса.ПодставитьПараметрыВСтроку(ТекстКоманды, Формат(ХПозицияКнопки, "ЧГ="), Формат(УПозицияКнопки, "ЧГ="));
	Ванесса.Отладка(ТекстКоманды);
	Ответ = ВыполнитьИВернутьСообщениеИзADB(ТекстКоманды);	
КонецФункции  

#КонецОбласти

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И в окне создания фотографии я делаю отмену
//@ВОкнеСозданияФотографииЯДелаюОтмену()
Функция ВОкнеСозданияФотографииЯДелаюОтмену() Экспорт
	ТкнутьВЭкран(0.06, 0.06);
КонецФункции

&НаКлиенте
//И в окне создания фотографии я делаю фото
//@ВОкнеСозданияФотографииЯДелаюФото()
Функция ВОкнеСозданияФотографииЯДелаюФото() Экспорт
	ТкнутьВЭкран(0.5, 0.85);
КонецФункции

&НаКлиенте
//И в окне создания фотографии я включаю вспышку
//@ВОкнеСозданияФотографииЯВключаюВспышку()
Функция ВОкнеСозданияФотографииЯВключаюВспышку() Экспорт
	ТкнутьВЭкран(0.06, 0.85);
КонецФункции

&НаКлиенте
//И в окне создания фотографии я меняю камеру
//@ВОкнеСозданияФотографииЯМеняюКамеру()
Функция ВОкнеСозданияФотографииЯМеняюКамеру() Экспорт
	ТкнутьВЭкран(0.85, 0.85);
КонецФункции

&НаКлиенте
//И в окне создания фотографии я подтверждаю фото
//@ВОкнеСозданияФотографииЯПодтверждаюФото()
Функция ВОкнеСозданияФотографииЯПодтверждаюФото() Экспорт
	ТкнутьВЭкран(0.90, 0.85);
КонецФункции
                            
&НаКлиенте
//И в мобильном я нажимаю на координаты "Х" и "У"
//@ВМобильномЯНажимаюНаКоординатыИ(Парам01,Парам02)
Функция ВМобильномЯНажимаюНаКоординатыИ(Парам01,Парам02) Экспорт
	ТкнутьВЭкран(Цел(Парам01), Цел(Парам02), Истина);
КонецФункции

&НаКлиенте
//И в мобильном я нажимаю на относительные координаты "Х" и "У"
//@ВМобильномЯНажимаюНаОтносительныеКоординатыИ(Парам01,Парам02)
Функция ВМобильномЯНажимаюНаОтносительныеКоординатыИ(Парам01,Парам02) Экспорт
	ТкнутьВЭкран(Число(Парам01), Число(Парам02));
КонецФункции

