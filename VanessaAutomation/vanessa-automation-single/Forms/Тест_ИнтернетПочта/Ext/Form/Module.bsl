
#Область Служебные_функции_и_процедуры

// Контекст фреймворка Vanessa-Automation
&НаКлиенте
Перем Ванесса;

// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
&НаКлиенте
Перем Контекст Экспорт;

// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
&НаКлиенте
Перем КонтекстСохраняемый Экспорт;

// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт

	Ванесса = КонтекстФреймворкаBDD;

	ВсеТесты = Новый Массив;

	// описание шагов
	// пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, Снипет, ИмяПроцедуры, ПредставлениеТеста, ОписаниеШага, ТипШагаДляОписания, ТипШагаВДереве);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ПользовательSMTP(Парам01)",
		"ПользовательSMTP",
		"Допустим пользователь SMTP 'user@localhost'",
		"Установка имени пользователя для сервера SMTP",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯОтправляюПисьмоОтИмениПоАдресуСТемой(Парам01,Парам02,Парам03)",
		"ЯОтправляюПисьмоОтИмениПоАдресуСТемой",
		"И Я отправляю письмо от имени 'user@localhost' по адресу 'user@localhost' с темой 'test'","","");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ПользовательIMAP(Парам01)",
		"ПользовательIMAP",
		"Допустим пользователь IMAP 'user@localhost'",
		"Установка имени пользователя для сервера SMTP",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯСоздаюЯщик(Парам01)",
		"ЯСоздаюЯщик",
		"Тогда я создаю ящик 'SENT'",
		"Создает почтовый ящик по заданному имени",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯОчищаюЯщикОтСообщений(Парам01)",
		"ЯОчищаюЯщикОтСообщений",
		"Тогда я очищаю ящик 'SENT' от сообщений",
		"Удаляет все сообщения из почтового ящика",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ВЯщикеЕстьСообщения(Парам01, Парам02)",
		"ВЯщикеЕстьСообщения",
		"Тогда в ящике 'SENT' есть сообщения",
		"Проверяет, что есть сообщения ящике и сохраняет их в переменную Контекст",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ВЯщикеЕстьНовыеСообщения(Парам01)",
		"ВЯщикеЕстьНовыеСообщения",
		"Тогда в ящике 'SENT' есть новые сообщения",
		"Проверяет, что есть новые сообщения и сохраняет их в переменную Контекст",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ВЯщикеЕстьСообщенияСТемой(Парам01, Парам02)",
		"ВЯщикеЕстьСообщенияСТемой",
		"Тогда в ящике 'SENT' есть сообщения с темой 'Тема'",
		"Проверяет, что есть сообщения с указанными словами в Теме",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ВЯщикеЕстьСообщенияСТекстом(Парам01, Парам02)",
		"ВЯщикеЕстьСообщенияСТекстом",
		"Тогда в ящике 'SENT' есть сообщения с текстом 'Текст'",
		"Проверяет, что есть сообщения с указанными словами в Тексте",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ВЯщикеЕстьСообщенияОт(Парам01, Парам02)",
		"ВЯщикеЕстьСообщенияОт",
		"Тогда в ящике 'SENT' есть сообщения от 'Отправитель'",
		"Проверяет, что есть сообщения от определенного адреса",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ВЯщикеЕстьСообщенияДля(Парам01, Парам02)",
		"ВЯщикеЕстьСообщенияДля",
		"Тогда в ящике 'SENT' есть сообщения для 'Получатель'",
		"Проверяет, что есть сообщения для определенного адреса",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ТемойСообщения(Парам01)",
		"ТемойСообщения",
		"И темой сообщения 'Тема'",
		"Используется для уточения отбора по Теме сообщения",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ТекстомСообщения(Парам01)",
		"ТекстомСообщения",
		"И текстом сообщения 'Текст'",
		"Используется для уточения отбора по Тексту сообщения",
		"Плагины.ИнтернетПочта");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ТекстомВложенияСообщения(Парам01)",
		"ТекстомВложенияСообщения",
		"И текстом вложения сообщения 'Текст'",
		"Используется для уточения отбора по Тексту вложения",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"СообщенияОт(Парам01)",
		"СообщенияОт",
		"И сообщения от 'Отправитель'",
		"Используется для уточения отбора по отправителю сообщения",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"СообщенияДля(Парам01)",
		"СообщенияДля",
		"И сообщения для 'Получатель'",
		"Используется для уточения отбора по получателю сообщения",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЗаголовкомСообщения(Парам01)",
		"ЗаголовкомСообщения",
		"И заголовком сообщения 'Заголовок'",
		"Используется для уточения отбора по заголовку сообщения",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯОтвечаюНаЭтоСообщение()",
		"ЯОтвечаюНаЭтоСообщение",
		"Тогда я отвечаю на это сообщение",
		"Отвечает на первое сообщение из списка с установленным ранее отбором",
		"Плагины.ИнтернетПочта");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯОтключаюсьОтПочтовогоСервера()",
		"ЯОтключаюсьОтПочтовогоСервера",
		"Тогда я отключаюсь от почтового сервера",
		"Отключается от почтового сервера",
		"Плагины.ИнтернетПочта");

	Возврат ВсеТесты;

КонецФункции

// Служебная функция.
&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции

// Служебная функция для подключения библиотеки создания fixtures.
&НаКлиенте
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти

#Область Работа_со_сценариями

// Процедура выполняется перед началом каждого сценария
&НаКлиенте
Процедура ПередНачаломСценария() Экспорт

КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт

	ОтключитьсяОтИнтернетПочты();

КонецПроцедуры

#КонецОбласти

#Область Вспомогательные_процедуры

&НаКлиенте
Процедура ИнициализироватьИнтернетПочтовыйПрофиль()

	Если КонтекстСохраняемый.Свойство("ИнтернетПочтовыйПрофиль") Тогда
		Возврат;
	КонецЕсли;

	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераIMAP = "localhost";
	Профиль.АдресСервераSMTP  = "localhost";
	Профиль.ИспользоватьSSLSMTP = Истина;
	Профиль.ИспользоватьSSLIMAP = Истина;
	Профиль.Таймаут = 300;

	КонтекстСохраняемый.Вставить("ИнтернетПочтовыйПрофиль", Профиль);

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьсяКИнтернетПочте()

	#Если Не ВебКлиент Тогда

	Если Контекст.Свойство("ИнтернетПочта") Тогда
		Возврат;
	КонецЕсли;

	ИнтернетПочта = Новый ИнтернетПочта();
	ИнтернетПочта.Подключиться(КонтекстСохраняемый.ИнтернетПочтовыйПрофиль, ПротоколИнтернетПочты.IMAP);

	Контекст.Вставить("ИнтернетПочта", ИнтернетПочта);

	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ОтключитьсяОтИнтернетПочты()

	#Если Не ВебКлиент Тогда

	Если Не Контекст.Свойство("ИнтернетПочта") Тогда
		Возврат;
	КонецЕсли;

	Контекст.ИнтернетПочта.Отключиться();
	Контекст.Удалить("ИнтернетПочта");

	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПараметрыОтбора()

	ИнициализироватьПараметрыОтбора();
	Контекст.ПараметрыОтбора.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура ДополнитьПараметрыОтбора(Ключ, Значение)

	ИнициализироватьПараметрыОтбора();
	Контекст.ПараметрыОтбора.Вставить(Ключ, Значение);

КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьПараметрыОтбора()

	Если Не Контекст.Свойство("ПараметрыОтбора") Тогда
		Контекст.Вставить("ПараметрыОтбора", Новый Структура);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗаголовки()

	ИнициализироватьИнтернетПочтовыйПрофиль();
	ПодключитьсяКИнтернетПочте();
	ИнициализироватьПараметрыОтбора();
	Контекст.ИнтернетПочта.ТекущийПочтовыйЯщик = Контекст.ТекущийПочтовыйЯщик;

	Результат = Контекст.ИнтернетПочта.ПолучитьЗаголовки(Контекст.ПараметрыОтбора);

	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ВалидироватьРезультатЗапросаПисем(ЗаголовкиПисем)

	#Если Не ВебКлиент Тогда
	Ванесса.ПроверитьТип(ЗаголовкиПисем, Тип("Массив"));
	Ванесса.ПроверитьБольше(0, ЗаголовкиПисем.Количество(), "В ящике должны быть сообщения");

	Контекст.Вставить("ЗаголовкиПисем", ЗаголовкиПисем);
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ОтфильтроватьПисьмаПоПолю(Поле, Значение)

	ЗаголовкиПисем = Контекст.ЗаголовкиПисем;

	Сч = 0;
	Пока Сч < ЗаголовкиПисем.Количество() Цикл
		ТекЗаголовок = ЗаголовкиПисем.Получить(Сч);

		Если Найти(ТекЗаголовок[Поле], Значение) = 0 Тогда
			ЗаголовкиПисем.Удалить(Сч);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОтфильтроватьПисьмаПоОтправителю(Значение)

	ЗаголовкиПисем = Контекст.ЗаголовкиПисем;

	Сч = 0;
	Пока Сч < ЗаголовкиПисем.Количество() Цикл
		ТекЗаголовок = ЗаголовкиПисем.Получить(Сч);

		Если Найти(ПредставлениеПочтовогоАдреса(ТекЗаголовок.Отправитель), Значение) = 0 Тогда
			ЗаголовкиПисем.Удалить(Сч);
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОтфильтроватьПисьмаПоПолучателю(Значение)

	ЗаголовкиПисем = Контекст.ЗаголовкиПисем;

	Сч = 0;
	Пока Сч < ЗаголовкиПисем.Количество() Цикл
		ТекЗаголовок = ЗаголовкиПисем.Получить(Сч);

		Если АдресНайденВСпискеПолучателей(ТекЗаголовок.Получатели, Значение) Тогда
			Сч = Сч + 1;
		Иначе
			ЗаголовкиПисем.Удалить(Сч);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция АдресНайденВСпискеПолучателей(Получатели, ПочтовыйАдрес)

	Для Каждого ТекПолучатель Из Получатели Цикл

		Если Найти(ПредставлениеПочтовогоАдреса(ТекПолучатель), ПочтовыйАдрес) > 0 Тогда
			Возврат Истина;
		КонецЕсли;

	КонецЦикла;

	Возврат Ложь;

КонецФункции

&НаКлиенте
Функция ПредставлениеПочтовогоАдреса(ПочтовыйАдрес)

	Если ТипЗнч(ПочтовыйАдрес) = Тип("Строка") Тогда
		Возврат ПочтовыйАдрес;
	КонецЕсли;

	Если ТипЗнч(ПочтовыйАдрес) = Тип("ИнтернетПочтовыйАдрес") Тогда
		Возврат ПочтовыйАдрес.ОтображаемоеИмя + " " + ПочтовыйАдрес.Адрес;
	КонецЕсли;

	Возврат "";

КонецФункции

&НаКлиенте
Процедура ОтфильтроватьПисьмаПоТекстуСообщения(Текст)

	ЗаголовкиПисем = Контекст.ЗаголовкиПисем;

	Сч = 0;
	Пока Сч < ЗаголовкиПисем.Количество() Цикл
		ТекЗаголовок = ЗаголовкиПисем.Получить(Сч);

		Если ТекстНайденВПисьме(ТекЗаголовок, Текст) Тогда
			Сч = Сч + 1;
		Иначе
			ЗаголовкиПисем.Удалить(Сч);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОтфильтроватьПисьмаПоТекстуВложенияСообщения(Текст)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	ЗаголовкиПисем = Контекст.ЗаголовкиПисем;
	
	Сч = 0;
	Пока Сч < ЗаголовкиПисем.Количество() Цикл
		ТекЗаголовок = ЗаголовкиПисем.Получить(Сч);
		
		Если ТекстНайденВоВложенииСообщения(ТекЗаголовок, Текст, ИмяВременногоФайла) Тогда
			Сч = Сч + 1;
		Иначе
			ЗаголовкиПисем.Удалить(Сч);
		КонецЕсли;
	КонецЦикла;
	
	// BSLLS:MissingCodeTryCatchEx-off
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
		// Специальная обработка не требуется
	КонецПопытки;
	// BSLLS:MissingCodeTryCatchEx-on
	
КонецПроцедуры

// Здесь идёт запрос к IMAP-серверу, т.к. в заголовках не содержится текст письма
&НаКлиенте
Функция ТекстНайденВПисьме(ЗаголовокПисьма, Текст)

	ПараметрЗаголовки = Новый Массив;
	ПараметрЗаголовки.Добавить(ЗаголовокПисьма);

	ПочтовоеСообщение = Контекст.ИнтернетПочта.Выбрать(Ложь, ПараметрЗаголовки);
	Если Не ЗначениеЗаполнено(ПочтовоеСообщение) Тогда
		Возврат Ложь;
	КонецЕсли;

	Для Каждого ТекТекст Из ПочтовоеСообщение[0].Тексты Цикл
		Если Найти(ТекТекст.Текст, Текст) > 0 Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции

&НаКлиенте
Функция ТекстНайденВоВложенииСообщения(ЗаголовокПисьма, Текст, ИмяВременногоФайла)

	ПараметрЗаголовки = Новый Массив;
	ПараметрЗаголовки.Добавить(ЗаголовокПисьма);

	ПочтовоеСообщение = Контекст.ИнтернетПочта.Выбрать(Ложь, ПараметрЗаголовки);
	Если Не ЗначениеЗаполнено(ПочтовоеСообщение) Тогда
		Возврат Ложь;
	КонецЕсли;

	Для Каждого ТекВложение Из ПочтовоеСообщение[0].Вложения Цикл
		ТекВложение.Данные.Записать(ИмяВременногоФайла);
		ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла);
		ТекСтрока = ЧтениеТекста.ПрочитатьСтроку();
		Пока ТекСтрока <> Неопределено Цикл
			Если Найти(ТекСтрока, Текст) > 0 Тогда
				Возврат Истина;
			КонецЕсли;
			ТекСтрока = ЧтениеТекста.ПрочитатьСтроку();
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции

#КонецОбласти

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

//Допустим пользователь SMTP 'user@localhost'
//@ПользовательSMTP(Парам01)
&НаКлиенте
Процедура ПользовательSMTP(Парам01) Экспорт

	ИнициализироватьИнтернетПочтовыйПрофиль();
	КонтекстСохраняемый.ИнтернетПочтовыйПрофиль.ПользовательSMTP = Парам01;
	КонтекстСохраняемый.ИнтернетПочтовыйПрофиль.ПарольSMTP = Парам01

КонецПроцедуры

//И Я отправляю письмо от имени 'user@localhost' по адресу 'user@localhost' с темой 'test'
//@ЯОтправляюПисьмоОтИмениПоАдресуСТемой(Парам01,Парам02,Парам03)
&НаКлиенте
Процедура ЯОтправляюПисьмоОтИмениПоАдресуСТемой(Парам01, Парам02, Парам03) Экспорт

	ИнициализироватьИнтернетПочтовыйПрофиль();
	ПодключитьсяКИнтернетПочте();
	НовоеПочтовоеСообщение = Новый ИнтернетПочтовоеСообщение;
	НовоеПочтовоеСообщение.Отправитель = Парам01;
	НовоеПочтовоеСообщение.Получатели.Добавить(Парам02);
	НовоеПочтовоеСообщение.Тема = Парам03;
	Результат = Контекст.ИнтернетПочта.Послать(НовоеПочтовоеСообщение);

КонецПроцедуры

//Допустим пользователь IMAP 'user@localhost'
//@ПользовательIMAP(Парам01)
&НаКлиенте
Процедура ПользовательIMAP(Парам01) Экспорт

	ИнициализироватьИнтернетПочтовыйПрофиль();
	КонтекстСохраняемый.ИнтернетПочтовыйПрофиль.ПользовательIMAP = Парам01;
	КонтекстСохраняемый.ИнтернетПочтовыйПрофиль.ПарольIMAP = Парам01

КонецПроцедуры

//Тогда я создаю ящик 'SENT'
//@ЯСоздаюЯщик(Парам01)
&НаКлиенте
Процедура ЯСоздаюЯщик(Парам01) Экспорт

	ИнициализироватьИнтернетПочтовыйПрофиль();
	ПодключитьсяКИнтернетПочте();
	Для Каждого ТекЯщик Из Контекст.ИнтернетПочта.ПолучитьПочтовыеЯщики() Цикл
		Если ТекЯщик = Парам01 Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	Контекст.ИнтернетПочта.СоздатьПочтовыйЯщик(Парам01);

КонецПроцедуры

//Тогда я очищаю ящик 'SENT' от сообщений
//@ЯОчищаюЯщикОтСообщений(Парам01)
&НаКлиенте
Процедура ЯОчищаюЯщикОтСообщений(Парам01) Экспорт

	ИнициализироватьИнтернетПочтовыйПрофиль();
	ПодключитьсяКИнтернетПочте();
	Контекст.Вставить("ТекущийПочтовыйЯщик", Парам01);
	ОчиститьПараметрыОтбора();
	ЗаголовкиПисем = ПолучитьЗаголовки();
	Контекст.ИнтернетПочта.УдалитьСообщения(ЗаголовкиПисем);
	Контекст.ИнтернетПочта.ОчиститьУдаленныеСообщения();

КонецПроцедуры

//Тогда в ящике 'SENT' есть сообщения
//@ВЯщикеЕстьСообщения(Парам01)
&НаКлиенте
Процедура ВЯщикеЕстьСообщения(Парам01) Экспорт

	Контекст.Вставить("ТекущийПочтовыйЯщик", Парам01);
	ЗаголовкиПисем = ПолучитьЗаголовки();
	ВалидироватьРезультатЗапросаПисем(ЗаголовкиПисем);

КонецПроцедуры

//Тогда в ящике 'SENT' есть новые сообщения
//@ВЯщикеЕстьНовыеСообщения(Парам01)
&НаКлиенте
Процедура ВЯщикеЕстьНовыеСообщения(Парам01) Экспорт

	Контекст.Вставить("ТекущийПочтовыйЯщик", Парам01);
	ДополнитьПараметрыОтбора("Новые", Истина);
	ЗаголовкиПисем = ПолучитьЗаголовки();
	ВалидироватьРезультатЗапросаПисем(ЗаголовкиПисем);

КонецПроцедуры

//Тогда в ящике 'SENT' есть сообщения с темой 'Тема'
//@ВЯщикеЕстьСообщенияСТемой(Парам01, Парам02)
&НаКлиенте
Процедура ВЯщикеЕстьСообщенияСТемой(Парам01, Парам02) Экспорт

	Контекст.Вставить("ТекущийПочтовыйЯщик", Парам01);
	ДополнитьПараметрыОтбора("Тема", Парам02);
	ЗаголовкиПисем = ПолучитьЗаголовки();
	ВалидироватьРезультатЗапросаПисем(ЗаголовкиПисем);

КонецПроцедуры

//Тогда в ящике 'SENT' есть сообщения с текстом 'Текст'
//@ВЯщикеЕстьСообщенияСТекстом(Парам01, Парам02)
&НаКлиенте
Процедура ВЯщикеЕстьСообщенияСТекстом(Парам01, Парам02) Экспорт

	Контекст.Вставить("ТекущийПочтовыйЯщик", Парам01);
	ДополнитьПараметрыОтбора("Текст", Парам02);
	ЗаголовкиПисем = ПолучитьЗаголовки();
	ВалидироватьРезультатЗапросаПисем(ЗаголовкиПисем);

КонецПроцедуры

//Тогда в ящике 'SENT' есть сообщения от 'Отправитель'
//@ВЯщикеЕстьСообщенияОт(Парам01, Парам02)
&НаКлиенте
Процедура ВЯщикеЕстьСообщенияОт(Парам01, Парам02) Экспорт

	Контекст.Вставить("ТекущийПочтовыйЯщик", Парам01);
	ДополнитьПараметрыОтбора("Отправитель", Парам02);
	ЗаголовкиПисем = ПолучитьЗаголовки();
	ВалидироватьРезультатЗапросаПисем(ЗаголовкиПисем);

КонецПроцедуры

//Тогда в ящике 'SENT' есть сообщения для 'Получатель'
//@ВЯщикеЕстьСообщенияДля(Парам01, Парам02)
&НаКлиенте
Процедура ВЯщикеЕстьСообщенияДля(Парам01, Парам02) Экспорт

	Контекст.Вставить("ТекущийПочтовыйЯщик", Парам01);
	ДополнитьПараметрыОтбора("Получатели", Парам02);
	ЗаголовкиПисем = ПолучитьЗаголовки();
	ВалидироватьРезультатЗапросаПисем(ЗаголовкиПисем);

КонецПроцедуры

//И темой сообщения 'Тема'
//@ТемойСообщения(Парам01)
&НаКлиенте
Процедура ТемойСообщения(Парам01) Экспорт

	ОтфильтроватьПисьмаПоПолю("Тема", Парам01);
	Ванесса.ПроверитьБольше(0, Контекст.ЗаголовкиПисем.Количество());

КонецПроцедуры

//И текстом сообщения 'Текст'
//@ТекстомСообщения(Парам01)
&НаКлиенте
Процедура ТекстомСообщения(Парам01) Экспорт

	ОтфильтроватьПисьмаПоТекстуСообщения(Парам01);
	Ванесса.ПроверитьБольше(0, Контекст.ЗаголовкиПисем.Количество());

КонецПроцедуры

//И текстом вложения сообщения 'Текст'
//@ТекстомВложенияСообщения(Парам01)
&НаКлиенте
Процедура ТекстомВложенияСообщения(Парам01) Экспорт

	ОтфильтроватьПисьмаПоТекстуВложенияСообщения(Парам01);
	Ванесса.ПроверитьБольше(0, Контекст.ЗаголовкиПисем.Количество());

КонецПроцедуры

//И сообщения от 'Отправитель'
//@СообщенияОт(Парам01)
&НаКлиенте
Процедура СообщенияОт(Парам01) Экспорт

	ОтфильтроватьПисьмаПоОтправителю(Парам01);
	Ванесса.ПроверитьБольше(0, Контекст.ЗаголовкиПисем.Количество());

КонецПроцедуры

//И сообщения для 'Получатель'
//@СообщенияДля(Парам01)
&НаКлиенте
Процедура СообщенияДля(Парам01) Экспорт

	ОтфильтроватьПисьмаПоПолучателю(Парам01);
	Ванесса.ПроверитьБольше(0, Контекст.ЗаголовкиПисем.Количество());

КонецПроцедуры

//И заголовком сообщения 'Заголовок'
//@ЗаголовкомСообщения(Парам01)
&НаКлиенте
Процедура ЗаголовкомСообщения(Парам01) Экспорт

	ОтфильтроватьПисьмаПоПолю("Заголовок", Парам01);
	Ванесса.ПроверитьБольше(0, Контекст.ЗаголовкиПисем.Количество());

КонецПроцедуры

//Тогда я отвечаю на это сообщение
//@ЯОтвечаюНаЭтоСообщение()
&НаКлиенте
Процедура ЯОтвечаюНаЭтоСообщение() Экспорт

	Ванесса.Проверить(Контекст.Свойство("ЗаголовкиПисем"),
	"Ответить на сообщение можно только после валидации результата запроса писем");

	Ванесса.ПроверитьБольше(0, Контекст.ЗаголовкиПисем.Количество(), "Ожидали, что список писем не пустой.");

	#Если Не ВебКлиент Тогда

	ЭтоСообщение = Контекст.ЗаголовкиПисем[0];

	ОтветНаСообщение = Новый ИнтернетПочтовоеСообщение;
	ОтветНаСообщение.Отправитель = ЭтоСообщение.Получатели[0];
	ОтветНаСообщение.Получатели.Добавить(ЭтоСообщение.ОбратныйАдрес[0].Адрес);
	ОтветНаСообщение.Тема = "Re: " + ЭтоСообщение.Тема;
	ОтветНаСообщение.УстановитьПолеЗаголовка(
	"In-Reply-To",
	ЭтоСообщение.ИдентификаторСообщения,
	СпособКодированияНеASCIIСимволовИнтернетПочтовогоСообщения.БезКодирования);

	Результат = Контекст.ИнтернетПочта.Послать(ОтветНаСообщение);

	#КонецЕсли

КонецПроцедуры

//Тогда я отключаюсь от почтового сервера
//@ЯОтключаюсьОтПочтовогоСервера(Парам01)
&НаКлиенте
Процедура ЯОтключаюсьОтПочтовогоСервера() Экспорт

	ОтключитьсяОтИнтернетПочты();

КонецПроцедуры
