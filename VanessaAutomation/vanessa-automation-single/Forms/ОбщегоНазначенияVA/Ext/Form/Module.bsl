#Область ОписаниеПеременных

&НаКлиенте
Перем Ванесса;

&НаКлиенте
Перем ЭтоLinux;

&НаКлиенте
Перем ЭтоWindowsXP;

&НаКлиенте
Перем WshShell;

&НаКлиенте
Перем КешПрочитатьПеременныеСреды, КешПолучитьСтруктуруПараметров, КешVAParams;

#КонецОбласти

#Область ЭкспортныеПроцедурыИФункции

// Делает первичную инициализацию модуля.
&НаКлиенте
Функция ИнициализацияФормы(ВладелецФормы) Экспорт
	Ванесса = ВладелецФормы;
КонецФункции	 

// Делает отключение модуля
&НаКлиенте
Функция ОтключениеМодуля() Экспорт
	Ванесса = Неопределено;
	КешДанныеПеревода = Неопределено;
	КешКлючевыеСлова = Неопределено;
	КешПрочитатьПеременныеСреды = Неопределено;
	КешПолучитьСтруктуруПараметров = Неопределено;
	КешVAParams = Неопределено;
КонецФункции	 

&НаКлиенте
Функция ЗначениеПараметраЗапуска(ИмяПараметра, Знач ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	// Проверка значения в переменных среды
	Если КешПрочитатьПеременныеСреды = Неопределено Тогда
		ПеременныеСреды = ПрочитатьПеременныеСреды();
		КешПрочитатьПеременныеСреды = ПеременныеСреды;
	Иначе	
		ПеременныеСреды = КешПрочитатьПеременныеСреды;
	КонецЕсли;	 
	ЗначениеПараметра = ПолучитьЗначениеПараметра(ПеременныеСреды, ИмяПараметра);

	Если ЗначениеПараметра <> Неопределено Тогда
		Возврат ЗначениеПараметра;
	КонецЕсли;

	// Проверка значения в параметрах запуска
	Если КешПолучитьСтруктуруПараметров = Неопределено Тогда
		СтруктураПараметров = ПолучитьСтруктуруПараметров(ПараметрЗапуска);
		КешПолучитьСтруктуруПараметров = СтруктураПараметров;
	Иначе	
		СтруктураПараметров = КешПолучитьСтруктуруПараметров;
	КонецЕсли;	 
	ЗначениеПараметра = ПолучитьЗначениеПараметра(СтруктураПараметров, ИмяПараметра);

	Если ЗначениеПараметра <> Неопределено Тогда
		Возврат ЗначениеПараметра;
	КонецЕсли;

	// Проверка значения в файле настроек
	ИмяФайлаНастроек = ПолучитьЗначениеПараметра(СтруктураПараметров, "VAParams");
	Если ИмяФайлаНастроек = Неопределено Тогда
		ИмяФайлаНастроек = ПолучитьЗначениеПараметра(СтруктураПараметров, "VBParams");
	КонецЕсли;

	Если ИмяФайлаНастроек <> Неопределено Тогда
		Если КешVAParams = Неопределено Тогда
			НастройкиИзФайла = ПрочитатьОбщиеНастройкиИзФайла(ИмяФайлаНастроек);
			КешVAParams = НастройкиИзФайла;
		Иначе	
			НастройкиИзФайла = КешVAParams;
		КонецЕсли;	 
		ЗначениеПараметра = ПолучитьЗначениеПараметра(НастройкиИзФайла, ИмяПараметра);
	КонецЕсли;
	
	Если ЗначениеПараметра = Неопределено Тогда
		ЗначениеПараметра = ЗначениеПоУмолчанию;
	КонецЕсли;

	Возврат ЗначениеПараметра;

КонецФункции

// Возвращает переменные операционной системы начинающиеся на "VANESSA_"
// 
// Возвращаемое значение:
//  Структура - 
//
&НаКлиенте
Функция ПрочитатьПеременныеСреды() Экспорт
	
	#Если ВебКлиент Тогда
		Возврат Новый Структура;		
	#КонецЕсли
	
	СтруктураПараметров = Новый Структура;
	СоответствиеПеременныхПути = Новый Соответствие;
	ПеременныеСреды = ПеременныеСреды();
	
	Для каждого КлючИЗначение Из ПеременныеСреды Цикл
		Если Лев(КлючИЗначение.Ключ, 8) = "VANESSA_" Тогда 
			СоответствиеПеременныхПути.Вставить(Сред(КлючИЗначение.Ключ, 9), КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	// чтение таких же переменных из ПараметрЗапуска
	ПараметрыЗапуска = ПолучитьСтруктуруПараметров(ПараметрЗапуска);
	Для Каждого ТекПараметрЗапуска Из ПараметрыЗапуска Цикл
		Ключ = ТекПараметрЗапуска.Ключ;
		Если ВРег(Лев(Ключ, 8)) = "VANESSA_" Тогда 
			Ключ = Сред(Ключ, 9);
			Значение = ТекПараметрЗапуска.Значение;
			СоответствиеПеременныхПути.Вставить(Ключ, Значение);
		КонецЕсли;
	КонецЦикла;	 
	
	Если СоответствиеПеременныхПути.Количество() = 0 Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;
	
	КоллекцияКоммандЗапуска = КоллекцияКомандЗапуска();
	
	Для каждого ЭлементСтруктуры Из КоллекцияКоммандЗапуска Цикл 
		Для каждого ЭлементПеременных Из СоответствиеПеременныхПути Цикл 
			Если НайтиКоманду(ЭлементСтруктуры.Значение, ЭлементПеременных.Ключ) Тогда 
				СтруктураПараметров.Вставить(ЭлементСтруктуры.Ключ, ЭлементПеременных.Значение);
				Прервать;
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиенте
Функция ПрочитатьОбщиеНастройкиИзФайла(ПолноеИмяФайла) Экспорт
	
	#Если НЕ ВебКлиент Тогда

	НастройкиJSON = Неопределено;

	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ПолноеИмяФайла);
	Попытка
		НастройкиJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();

		Возврат НастройкиJSON;
	Исключение
		ЧтениеJSON.Закрыть();
		ВызватьИсключение Локализовать("Не удалось прочитать файл настроек JSON.");
	КонецПопытки;

	Возврат НастройкиJSON;

	#КонецЕсли
КонецФункции

// Возвращает переменные операционной системы
// 
// Возвращаемое значение:
//  Соответствие - 
//
&НаКлиенте
Функция ПеременныеСреды() Экспорт
	
	#Если НЕ ВебКлиент Тогда
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	ПеременныеСреды = Новый Соответствие;
	Попытка
		Если ЭтоLinuxКлиент() Тогда
			КомандаСистемы("sh -c 'env > " + ИмяВременногоФайла + "'");
		Иначе
			ВыполнитьКомандуОСБезПоказаЧерногоОкна("set > """ + ИмяВременногоФайла + """");
		КонецЕсли;

		Чтение = Новый ЧтениеТекста(ИмяВременногоФайла, КодировкаТекста.UTF8);
		Стр = Чтение.ПрочитатьСтроку();
		Пока Стр <> Неопределено Цикл 
			// Найдем ключ и значение
			Индекс = Найти(Стр, "=");
			Если Индекс > 0 Тогда 
				Ключ = ВРег(Лев(Стр, Индекс - 1));
				Значение = Сред(Стр, Индекс + 1);
				ПеременныеСреды.Вставить(Ключ, Значение);
			КонецЕсли;
			Стр = Чтение.ПрочитатьСтроку();
		КонецЦикла;
	Исключение
		Возврат Новый Соответствие;
	КонецПопытки;
	
	Возврат ПеременныеСреды;
	
	#КонецЕсли
КонецФункции

// Устарела.26
&НаКлиенте
Функция КоллекцияКомандЗапуска() Экспорт
	
	КоллекцияКоманд = СтруктураПараметровЗапуска();
	КоллекцияКоманд.Вставить("StartFeaturePlayer", Новый Структура("Р, А", "StartFeaturePlayer", "startfeatureplayer"));
	КоллекцияКоманд.Вставить("АдресОтладчика", Новый Структура("Р, А", "АдресОтладчика", "testclientdebugaddress"));
	КоллекцияКоманд.Вставить("ЗагрузкаФичПриОткрытии", Новый Структура("Р, А", "ЗагрузкаФичПриОткрытии", "DownloadFeaturesOpen"));
	КоллекцияКоманд.Вставить("БезопасноеВыполнениеШагов", Новый Структура("Р, А", "БезопасноеВыполнениеШагов", "safeexecutionofsteps"));
	
	КоллекцияКоманд.Вставить("ГенерироватьУФ", Новый Структура("Р, А", "ГенерироватьУФ", "GenerateUF"));
	КоллекцияКоманд.Вставить("СоздаватьОбластиПриГенерацииКода", Новый Структура("Р, А", "СоздаватьОбластиПриГенерацииКода", "CreateRegionsOnCodeGeneration"));
	КоллекцияКоманд.Вставить("ВыводитьТекстМодуляВместоПерегенерацииEPF", Новый Структура("Р, А", "ВыводитьТекстМодуляВместоПерегенерацииEPF", "OutputModuleTextInsteadOfRegeneratingEPF"));
	КоллекцияКоманд.Вставить("ВерсияПлатформыДляГенерацииEPF", Новый Структура("Р, А", "ВерсияПлатформыДляГенерацииEPF", "platformversiongenerateepf"));
	
	КоллекцияКоманд.Вставить("ВыводитьВЛогВыполнениеШагов", Новый Структура("Р, А", "ВыводитьВЛогВыполнениеШагов", "logstepstotext"));
	КоллекцияКоманд.Вставить("ПодробныйЛогВыполненияСценариев", Новый Структура("Р, А", "ПодробныйЛогВыполненияСценариев", "fulllog"));
	КоллекцияКоманд.Вставить("ВыводитьЛогВКонсоль", Новый Структура("Р, А", "ВыводитьЛогВКонсоль", "outputloginconsole"));
	КоллекцияКоманд.Вставить("ИспользоватьПарсерGherkinИзКомпонентыVanessaExt", Новый Структура("Р, А", "ИспользоватьПарсерGherkinИзКомпонентыVanessaExt", "usethegherkinparserfromthevanessaextaddin"));
	КоллекцияКоманд.Вставить("ПоискФайловСПомощьюКомпонентыVanessaExt", Новый Структура("Р, А", "ПоискФайловСПомощьюКомпонентыVanessaExt", "SearchingForFilesUsingTheVanessaExtComponent"));
	КоллекцияКоманд.Вставить("ЗвуковоеОповещениеПриОкончанииВыполненияСценария", Новый Структура("Р, А", "ЗвуковоеОповещениеПриОкончанииВыполненияСценария", "soundnotificationwhenscriptends"));
	КоллекцияКоманд.Вставить("ПоказыватьОкноОстановкиВыполненияСценария", Новый Структура("Р, А", "ПоказыватьОкноОстановкиВыполненияСценария", "ShowWindowForStoppingScriptExecution"));
	КоллекцияКоманд.Вставить("ПоказыватьОкноОстановкиЗаписиДействийПользователя", Новый Структура("Р, А", "ПоказыватьОкноОстановкиЗаписиДействийПользователя", "ShowWindowToStopRecordingUserActions"));
	КоллекцияКоманд.Вставить("ОтображатьЗакладкиСверху", Новый Структура("Р, А", "ОтображатьЗакладкиСверху", "showbookmarkstop"));
	КоллекцияКоманд.Вставить("ПоказыватьРазличияВРедактореОтдельно", Новый Структура("Р, А", "ПоказыватьРазличияВРедактореОтдельно", "showdifferencesineditorseparately"));
	КоллекцияКоманд.Вставить("ВыгружатьСтатусВыполненияСценариевВФайл", 
		Новый Структура("Р, А", "ВыгружатьСтатусВыполненияСценариевВФайл", "createlogs"));
	КоллекцияКоманд.Вставить("ВыгрузитьPIDTestManager", Новый Структура("Р, А", "ВыгрузитьPIDTestManager", "returnpidoftestmanager"));
	КоллекцияКоманд.Вставить("ВыполнитьСценарии", Новый Структура("Р, А", "ВыполнитьСценарии", "vanessarun"));
	КоллекцияКоманд.Вставить("ВыполнитьСценарииСТекущегоШага", Новый Структура("Р, А", "ВыполнитьСценарииСТекущегоШага", "vanessarunfromthisstep"));
	КоллекцияКоманд.Вставить("ВыполнятьШагиАссинхронно", Новый Структура("Р, А", "ВыполнятьШагиАссинхронно", "makestepsasync"));
	КоллекцияКоманд.Вставить("ДанныеАллюрМеток", Новый Структура("Р, А", "ДанныеАллюрМеток", "DataAllureMarks"));
	КоллекцияКоманд.Вставить("НастройкиДругогоДвижкаTTS", Новый Структура("Р, А", "НастройкиДругогоДвижкаTTS", "SettingsOtherEngineTTS"));
	КоллекцияКоманд.Вставить("ДелатьЛогВыполненияСценариевВЖР", Новый Структура("Р, А", "ДелатьЛогВыполненияСценариевВЖР", "logtogr"));
	КоллекцияКоманд.Вставить("ДелатьЛогВыполненияСценариевВТекстовыйФайл", 
		Новый Структура("Р, А", "ДелатьЛогВыполненияСценариевВТекстовыйФайл", "logtotext"));
	КоллекцияКоманд.Вставить("ДелатьЛогОшибокВТекстовыйФайл", Новый Структура("Р, А", "ДелатьЛогОшибокВТекстовыйФайл", "logerrorstotext"));
	КоллекцияКоманд.Вставить("СобиратьДанныеОСостоянииАктивнойФормыПриОшибке", 
		Новый Структура("Р, А", "СобиратьДанныеОСостоянииАктивнойФормыПриОшибке", "getactiveformdataonerror"));
	КоллекцияКоманд.Вставить("СобиратьДанныеОСостоянииВсехФормПриОшибке", 
		Новый Структура("Р, А", "СобиратьДанныеОСостоянииВсехФормПриОшибке", "getallformsdataonerror"));
	КоллекцияКоманд.Вставить("СобиратьДанныеОСетевыхСоединениях", 
		Новый Структура("Р, А", "СобиратьДанныеОСетевыхСоединениях", "collectnetworkconnectiondata"));
	КоллекцияКоманд.Вставить("СобиратьДанныеОПроцессахОС", 
		Новый Структура("Р, А", "СобиратьДанныеОПроцессахОС", "collectdataoftheoperatingsystemprocesses"));
	КоллекцияКоманд.Вставить("СобиратьДанныеОЗначенияхПеременных", 
		Новый Структура("Р, А", "СобиратьДанныеОЗначенияхПеременных", "CollectDataOnVariableValues"));
	КоллекцияКоманд.Вставить("КомандаЗапускаБраузера", 
		Новый Структура("Р, А", "КомандаЗапускаБраузера", "browserlaunchcommand"));
	КоллекцияКоманд.Вставить("ИспользоватьБраузерПлюсWebSocket", 
		Новый Структура("Р, А", "ИспользоватьБраузерПлюсWebSocket", "usebrowserwebsocket"));
	КоллекцияКоманд.Вставить("ЭмулироватьДвиженияМышкиVanessaExt", 
		Новый Структура("Р, А", "ЭмулироватьДвиженияМышкиVanessaExt", "emulatemousemovementswithVanessaExt"));
	КоллекцияКоманд.Вставить("ЭмулироватьВводКлавиатурыVanessaExt", 
		Новый Структура("Р, А", "ЭмулироватьВводКлавиатурыVanessaExt", "emulatekeyboardinputwithVanessaExt"));
	КоллекцияКоманд.Вставить("СмещениеПоГоризонталиДвиженияМышкиVanessaExt", 
		Новый Структура("Р, А", "СмещениеПоГоризонталиДвиженияМышкиVanessaExt", "hrizontaloffset"));
	КоллекцияКоманд.Вставить("СмещениеПоВертикалиДвиженияМышкиVanessaExt", 
		Новый Структура("Р, А", "СмещениеПоВертикалиДвиженияМышкиVanessaExt", "verticaloffset"));
	КоллекцияКоманд.Вставить("КоличествоШаговПриДвиженииМышкиVanessaExt", 
		Новый Структура("Р, А", "КоличествоШаговПриДвиженииМышкиVanessaExt", "thenumberofstepswhenmovingthemouse"));
	КоллекцияКоманд.Вставить("ПаузаМеждуШагамиПриДвиженииМышкиVanessaExt", 
		Новый Структура("Р, А", "ПаузаМеждуШагамиПриДвиженииМышкиVanessaExt", "timeoutbetweenstepswhenmovingthemouse"));
	КоллекцияКоманд.Вставить("ПодсвечиватьКликМышкиВБраузереVanessaExt", 
		Новый Структура("Р, А", "ПодсвечиватьКликМышкиВБраузереVanessaExt", "hlightmouseclicksinbrowser"));
	КоллекцияКоманд.Вставить("ЦветПодсветкиКликаМышкиVanessaExt", 
		Новый Структура("Р, А", "ЦветПодсветкиКликаМышкиVanessaExt", "mouseclickhighlightcolor"));
	КоллекцияКоманд.Вставить("РадиусПодсветкиКликаМышкиVanessaExt", 
		Новый Структура("Р, А", "РадиусПодсветкиКликаМышкиVanessaExt", "mouseclickhighlightradius"));
	КоллекцияКоманд.Вставить("ДлительностьПодсветкиКликаМышкиVanessaExt", 
		Новый Структура("Р, А", "ДлительностьПодсветкиКликаМышкиVanessaExt", "mouseclickhighlightduration"));
	КоллекцияКоманд.Вставить("ТолщинаПодсветкиКликаМышкиVanessaExt", 
		Новый Структура("Р, А", "ТолщинаПодсветкиКликаМышкиVanessaExt", "mouseclickhighlightwidth"));
	КоллекцияКоманд.Вставить("ПрозрачностьПодсветкиКликаМышкиVanessaExt", 
		Новый Структура("Р, А", "ПрозрачностьПодсветкиКликаМышкиVanessaExt", "mouseclickhighlighttransparency"));
	КоллекцияКоманд.Вставить("ПоискКартинокСПомощьюКомпонентыVanessaExt", 
		Новый Структура("Р, А", "ПоискКартинокСПомощьюКомпонентыVanessaExt", "findingpicturesusingaddinvanessaext"));
	КоллекцияКоманд.Вставить("ПорогПоискаКартинки", 
		Новый Структура("Р, А", "ПорогПоискаКартинки", "PictureSearchThreshold"));
	КоллекцияКоманд.Вставить("ИгнорироватьОшибкиПоискаЭлементовВБраузере", 
		Новый Структура("Р, А", "ИгнорироватьОшибкиПоискаЭлементовВБраузере", "ignorebrowsersearcherrors"));
	КоллекцияКоманд.Вставить("ИспользоватьUIAutomation", 
		Новый Структура("Р, А", "ИспользоватьUIAutomation", "UseUIAutomation"));
	КоллекцияКоманд.Вставить("КоэффициентМасштабированияЭкрана", 
		Новый Структура("Р, А", "КоэффициентМасштабированияЭкрана", "scalefactor"));
	КоллекцияКоманд.Вставить("ДелатьОтчетВоВнутреннемФормате", Новый Структура("Р, А", "ДелатьОтчетВоВнутреннемФормате", "simplereport"));
	КоллекцияКоманд.Вставить("ДелатьОтчетВФорматеCucumberJson", Новый Структура("Р, А", "ДелатьОтчетВФорматеCucumberJson", "cucumbercreatereport"));
	КоллекцияКоманд.Вставить("ДелатьОтчетВФорматеjUnit", Новый Структура("Р, А", "ДелатьОтчетВФорматеjUnit", "junitcreatereport"));
	КоллекцияКоманд.Вставить("СкриншотыjUnit", Новый Структура("Р, А", "СкриншотыjUnit", "junitscreenshots"));
	КоллекцияКоманд.Вставить("ДелатьОтчетВФорматеАллюр", Новый Структура("Р, А", "ДелатьОтчетВФорматеАллюр", "allurecreatereport"));
	КоллекцияКоманд.Вставить("ДелатьОтчетВФорматеСППР", Новый Структура("Р, А", "ДелатьОтчетВФорматеСППР", "ModelingCreateReport"));
	КоллекцияКоманд.Вставить("ДелатьСкриншотПриВозникновенииОшибки", 
		Новый Структура("Р, А", "ДелатьСкриншотПриВозникновенииОшибки", "onerrorscreenshot"));
	КоллекцияКоманд.Вставить("ДелатьСообщенияТранслитом", Новый Структура("Р, А", "ДелатьСообщенияТранслитом", "translatemassage"));
	КоллекцияКоманд.Вставить("ДиапазонПортовTestclient", Новый Структура("Р, А", "ДиапазонПортовTestclient", "testclientports"));
	КоллекцияКоманд.Вставить("ЗакрыватьКлиентТестированияПринудительно", Новый Структура("Р, А", "ЗакрыватьКлиентТестированияПринудительно", "forceclosetestclient"));
	КоллекцияКоманд.Вставить("ОпределятьРеальныйПортНаКоторомЗапустилсяКлиентТестирования", Новый Структура("Р, А", "ОпределятьРеальныйПортНаКоторомЗапустилсяКлиентТестирования", "DetermineTheRealPortOnWhichTheTestingClientWasLaunched"));
	КоллекцияКоманд.Вставить("ПутьКadb", Новый Структура("Р, А", "ПутьКadb", "PathToadb"));
	КоллекцияКоманд.Вставить("ПовторноЗапускатьСеансКлиентаТестированияПриПодключенииЕслиНеНайденЕгоПроцесс", Новый Структура("Р, А", "ПовторноЗапускатьСеансКлиентаТестированияПриПодключенииЕслиНеНайденЕгоПроцесс", "starttestclientsessionagainonconnectionifitsprocessisnotfound"));
	КоллекцияКоманд.Вставить("ИнтервалЗапускаПроцессаКлиентаТестирования", Новый Структура("Р, А", "ИнтервалЗапускаПроцессаКлиентаТестирования", "testclientprocessstartinterval"));
	КоллекцияКоманд.Вставить("КаталогФайловВыводаСлужебныхСообщений", Новый Структура("Р, А", "КаталогФайловВыводаСлужебныхСообщений", "DirectoryFilesOutputServiceMessages"));
	КоллекцияКоманд.Вставить("МодальноеОкноПриЗапускеКлиентаТестированияЭтоОшибка", Новый Структура("Р, А", "МодальноеОкноПриЗапускеКлиентаТестированияЭтоОшибка", "modalwindowwhenstartingtestclientiserror"));
	КоллекцияКоманд.Вставить("ОтключитьЗапускРеглЗаданийВФайловойБазе", Новый Структура("Р, А", "ОтключитьЗапускРеглЗаданийВФайловойБазе", "DisableScheduledJobsExecutionForFileInfobase"));
	КоллекцияКоманд.Вставить("ВычислятьВыраженияВФигурныхСкобках", Новый Структура("Р, А", "ВычислятьВыраженияВФигурныхСкобках", "EvaluateExpressionsInCurlyBraces"));
	КоллекцияКоманд.Вставить("ТаймаутПередПринудительнымЗакрытиемКлиентаТестирования", Новый Структура("Р, А", "ТаймаутПередПринудительнымЗакрытиемКлиентаТестирования", "timeoutbeforeforciblyclosingtestclient"));
	КоллекцияКоманд.Вставить("ДобавлятьКИмениСценарияУсловияВыгрузки", 
		Новый Структура("Р, А", "ДобавлятьКИмениСценарияУсловияВыгрузки", "addtofeaturefilter"));
	КоллекцияКоманд.Вставить("ЗаписыватьВидеоВыполненияТестов", 
		Новый Структура("Р, А", "ЗаписыватьВидеоВыполненияТестов", "recordtestrunvideo"));
	КоллекцияКоманд.Вставить("КоличествоКадровВидеоВыполненияТестов", 
		Новый Структура("Р, А", "КоличествоКадровВидеоВыполненияТестов", "thenumberofframesofvideotestsession"));
	КоллекцияКоманд.Вставить("КомандаЗаписиВидеоВыполненияТестов", 
		Новый Структура("Р, А", "КомандаЗаписиВидеоВыполненияТестов", "testrecordingvideocommand"));
	КоллекцияКоманд.Вставить("КаталогДляЗаписиВидеоВыполненияТестов", 
		Новый Структура("Р, А", "КаталогДляЗаписиВидеоВыполненияТестов", "directoryforrecordingvideotestexecution"));
	КоллекцияКоманд.Вставить("ДобавлятьПриНакликиванииМетаИнформацию", 
		Новый Структура("Р, А", "ДобавлятьПриНакликиванииМетаИнформацию", "addmetainformationclicking"));
	КоллекцияКоманд.Вставить("ДополнительныеПараметры", Новый Структура("Р, А", "ДополнительныеПараметры", "dopparams"));
	КоллекцияКоманд.Вставить("ЗавершитьРаботуСистемы", Новый Структура("Р, А", "ЗавершитьРаботуСистемы", "vanessashutdown"));
	КоллекцияКоманд.Вставить("ЗагрузитьСценарии", Новый Структура("Р, А", "ЗагрузитьСценарии", "loadscenarios"));
	КоллекцияКоманд.Вставить("ЗакрытьTestClientПослеЗапускаСценариев", 
		Новый Структура("Р, А", "ЗакрытьTestClientПослеЗапускаСценариев", "closetestclient"));
	
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSOauthToken", Новый Структура("Р, А", "ЗаписьВидеоYandexTTSOauthToken", "yandexttsoauthtoken"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSГолос", Новый Структура("Р, А", "ЗаписьВидеоYandexTTSГолос", "yandexttsvoice"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSИдентификаторКаталога", 
		Новый Структура("Р, А", "ЗаписьВидеоYandexTTSИдентификаторКаталога", "yandexttsfolderId"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSApiKey", Новый Структура("Р, А", "ЗаписьВидеоYandexTTSApiKey", "yandexttsapikey"));
	
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSСкорость", Новый Структура("Р, А", "ЗаписьВидеоYandexTTSСкорость", "yandexttsspeed"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSЭмоция", Новый Структура("Р, А", "ЗаписьВидеоYandexTTSЭмоция", "yandexttsemotion"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSЯзык", Новый Структура("Р, А", "ЗаписьВидеоYandexTTSЯзык", "yandexttslanguage"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоYandexTTSВариантЗапроса", Новый Структура("Р, А", "ЗаписьВидеоYandexTTSВариантЗапроса", "yandexttsquerytype"));
	
	КоллекцияКоманд.Вставить("ЗаписьВидеоAmazonГолос", Новый Структура("Р, А", "ЗаписьВидеоAmazonГолос", "amazonttsvoice"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоAmazonДвижок", Новый Структура("Р, А", "ЗаписьВидеоAmazonДвижок", "amazonttsengine"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоAmazonЯзык", Новый Структура("Р, А", "ЗаписьВидеоAmazonЯзык", "amazonttslanguage"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоAmazonРегион", Новый Структура("Р, А", "ЗаписьВидеоAmazonРегион", "amazonttsregion"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоAmazonКлючДоступа", Новый Структура("Р, А", "ЗаписьВидеоAmazonКлючДоступа", "amazonttskey"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоAmazonСекретныйКлюч", Новый Структура("Р, А", "ЗаписьВидеоAmazonСекретныйКлюч", "amazonttssecretkey"));
	
	КоллекцияКоманд.Вставить("ЗаписьВидеоГромкостьМузыки", Новый Структура("Р, А", "ЗаписьВидеоГромкостьМузыки", "musicvolume"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоГруппаШаговКакШаг", Новый Структура("Р, А", "ЗаписьВидеоГруппаШаговКакШаг", "groupofstepsasastep"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоДелатьНаложениеTTS", Новый Структура("Р, А", "ЗаписьВидеоДелатьНаложениеTTS", "dotts"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоДобавлятьСубтитры", Новый Структура("Р, А", "ЗаписьВидеоДобавлятьСубтитры", "addsubtitles"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоИмяTTS", Новый Структура("Р, А", "ЗаписьВидеоИмяTTS", "ttsvoice"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКаталогДляВременныхФайлов", 
		Новый Структура("Р, А", "ЗаписьВидеоКаталогДляВременныхФайлов", "tempfolderforvideo"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКаталогМузыки", Новый Структура("Р, А", "ЗаписьВидеоКаталогМузыки", "musicpath"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКоличествоКадров", Новый Структура("Р, А", "ЗаписьВидеоКоличествоКадров", "fps"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКомандаConvert", Новый Структура("Р, А", "ЗаписьВидеоКомандаConvert", "convertcomand"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКомандаFfmpeg", Новый Структура("Р, А", "ЗаписьВидеоКомандаFfmpeg", "ffmpegcomand"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКомандаНачатьЗаписьВидео", Новый Структура("Р, А", "ЗаписьВидеоКомандаНачатьЗаписьВидео", "comandrecvideo"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКэшВидеоВставок", Новый Структура("Р, А", "ЗаписьВидеоКэшВидеоВставок", "videocachepath"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКэшироватьВидеоВставки", Новый Структура("Р, А", "ЗаписьВидеоКэшироватьВидеоВставки", "cachevideo"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКэшироватьФайлыTTS", Новый Структура("Р, А", "ЗаписьВидеоКэшироватьФайлыTTS", "cachettsfiles"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоКэшФайловTTS", Новый Структура("Р, А", "ЗаписьВидеоКэшФайловTTS", "ttsfilescache"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоОтключитьМасштабированиеШаговПоВремени", 
		Новый Структура("Р, А", "ЗаписьВидеоОтключитьМасштабированиеШаговПоВремени", "disablescalingofsteps"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоОтключитьСлайдСЗаголовкомФичи", 
		Новый Структура("Р, А", "ЗаписьВидеоОтключитьСлайдСЗаголовкомФичи", "turnofffeaturetitleslide"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоОтключитьСлайдСценария", Новый Структура("Р, А", "ЗаписьВидеоОтключитьСлайдСценария", "turnoffscenarioslide"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоОтключитьСлайдФинал", Новый Структура("Р, А", "ЗаписьВидеоОтключитьСлайдФинал", "turnofffinalslide"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы", 
		Новый Структура("Р, А", "ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы", "movemouse"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм", 
		Новый Структура("Р, А", "ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм", "showframe"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПодсвечиватьНажатияМышки", 
		Новый Структура("Р, А", "ЗаписьВидеоПодсвечиватьНажатияМышки", "highlightmouseclicks"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПроцентУскорения", Новый Структура("Р, А", "ЗаписьВидеоПроцентУскорения", "accelerationpercentage"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПутьКДвижкуTTS", Новый Структура("Р, А", "ЗаписьВидеоПутьКДвижкуTTS", "audioenginetts"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоСкоростьПроизношения", Новый Структура("Р, А", "ЗаписьВидеоСкоростьПроизношения", "speedofspeech"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоСкрытьСлужебныеОкна", Новый Структура("Р, А", "ЗаписьВидеоСкрытьСлужебныеОкна", "hideservicewindows"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоСловарьЗамен", Новый Структура("Р, А", "ЗаписьВидеоСловарьЗамен", "changewordslib"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоСловарьЗаменСписок", Новый Структура("Р, А", "ЗаписьВидеоСловарьЗаменСписок", "changewordsliblist"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоТипОзвучкиTTS", Новый Структура("Р, А", "ЗаписьВидеоТипОзвучкиTTS", "ttstype"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоФайлВодянойЗнак", Новый Структура("Р, А", "ЗаписьВидеоФайлВодянойЗнак", "watermarkfile"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоФайлКурсораМышки", Новый Структура("Р, А", "ЗаписьВидеоФайлКурсораМышки", "mousecurfile"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоФормироватьИнструкциюТипHTML", 
		Новый Структура("Р, А", "ЗаписьВидеоФормироватьИнструкциюТипHTML", "instructiontypehtml"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоФормироватьИнструкциюТипMarkdown", 
		Новый Структура("Р, А", "ЗаписьВидеоФормироватьИнструкциюТипMarkdown", "instructiontypemarkdown"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЭмулироватьДвиженияМышкиSikuliX", 
		Новый Структура("Р, А", "ЗаписьВидеоЭмулироватьДвиженияМышкиSikuliX", "emulatemousemovement"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПутьКОбработкеДвижкаTTS", 
		Новый Структура("Р, А", "ЗаписьВидеоПутьКОбработкеДвижкаTTS", "pathprocessingenginetts"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЗаменитьСлайдЗаголовок", 
		Новый Структура("Р, А", "ЗаписьВидеоЗаменитьСлайдЗаголовок", "changefeaturetitleslide"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоДобавитьМузыкуКСлайдуЗаголовок", 
		Новый Структура("Р, А", "ЗаписьВидеоДобавитьМузыкуКСлайдуЗаголовок", "addmusictofeaturetitleslide"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПутьКСлайдуЗаголовок", 
		Новый Структура("Р, А", "ЗаписьВидеоПутьКСлайдуЗаголовок", "featuretitleslidepath"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЗаменитьСлайдФинал", 
		Новый Структура("Р, А", "ЗаписьВидеоЗаменитьСлайдФинал", "changefinalslide"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоДобавитьМузыкуКСлайдуФинал", 
		Новый Структура("Р, А", "ЗаписьВидеоДобавитьМузыкуКСлайдуФинал", "addmusictofinalslide"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоПутьКСлайдуФинал", 
		Новый Структура("Р, А", "ЗаписьВидеоПутьКСлайдуФинал", "finalslidepath"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоФормироватьИнструкциюТипВидео", 
		Новый Структура("Р, А", "ЗаписьВидеоФормироватьИнструкциюТипВидео", "instructiontypevideo"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоИнструмент", Новый Структура("Р, А", "ЗаписьВидеоИнструмент", "videocapturetool"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЭкранВысота", Новый Структура("Р, А", "ЗаписьВидеоЭкранВысота", "screenheight"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЭкранШирина", Новый Структура("Р, А", "ЗаписьВидеоЭкранШирина", "screenwidth"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЭкранСлева", Новый Структура("Р, А", "ЗаписьВидеоЭкранСлева", "screenleft"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЭкранСверху", Новый Структура("Р, А", "ЗаписьВидеоЭкранСверху", "screentop"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоСберTTSClientID", Новый Структура("Р, А", "ЗаписьВидеоСберTTSClientID", "sberttsclientid"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоСберTTSClientSecret", Новый Структура("Р, А", "ЗаписьВидеоСберTTSClientSecret", "sberttsclientsecret"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоСберTTSГолос", Новый Структура("Р, А", "ЗаписьВидеоСберTTSГолос", "sberttsvoice"));
	КоллекцияКоманд.Вставить("ЗаписьВидеоЭмулироватьВводСКлавиатуры", 
		Новый Структура("Р, А", "ЗаписьВидеоЭмулироватьВводСКлавиатуры", "emulatekeyboardinput"));
	КоллекцияКоманд.Вставить("ЗапускатьКлиентТестированияСМаксимизированнымОкном", 
		Новый Структура("Р, А", "ЗапускатьКлиентТестированияСМаксимизированнымОкном", "runtestclientwithmaximizedwindow"));
	КоллекцияКоманд.Вставить("ЗапускатьТестКлиентВРежимеОтладки", Новый Структура("Р, А", "ЗапускатьТестКлиентВРежимеОтладки", "testclientdebug"));
	КоллекцияКоманд.Вставить("ИмяКаталогаЛогОшибок", Новый Структура("Р, А", "ИмяКаталогаЛогОшибок", "texterrorslogname"));
	КоллекцияКоманд.Вставить("ИмяСборки", Новый Структура("Р, А", "ИмяСборки", "buildname"));
	КоллекцияКоманд.Вставить("ИмяТекущейСборки", Новый Структура("Р, А", "ИмяТекущейСборки", "buildname"));
	КоллекцияКоманд.Вставить("ИмяФайлаPIDTestManager", Новый Структура("Р, А", "ИмяФайлаPIDTestManager", "filenamepidtestmanager"));
	КоллекцияКоманд.Вставить("ИмяФайлаВнешнихКомандФреймворка", Новый Структура("Р, А", "ИмяФайлаВнешнихКомандФреймворка", "fileofcommand"));
	КоллекцияКоманд.Вставить("ИмяФайлаЛогВыполненияСценариев", Новый Структура("Р, А", "ИмяФайлаЛогВыполненияСценариев", "textlogname"));
	КоллекцияКоманд.Вставить("ИскатьЭлементыФормыПоИмени", Новый Структура("Р, А", "ИскатьЭлементыФормыПоИмени", "searchformelementsbyname"));
	КоллекцияКоманд.Вставить("ИнтервалВыполненияШагаЗаданныйПользователем", Новый Структура("Р, А", "ИнтервалВыполненияШагаЗаданныйПользователем", "SpacingStepSpecifiedUser"));
	КоллекцияКоманд.Вставить("ИспользоватьSikuliXСервер", Новый Структура("Р, А", "ИспользоватьSikuliXСервер", "usesikulixserver"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиAllure", Новый Структура("Р, А", "КаталогВыгрузкиAllure", "allurepath"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиAllureБазовый", Новый Структура("Р, А", "КаталогВыгрузкиAllureБазовый", "allurepathbase"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиCucumberJson", Новый Структура("Р, А", "КаталогВыгрузкиCucumberJson", "cucumberreportpath"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиСППР", Новый Структура("Р, А", "КаталогВыгрузкиСППР", "modelingreportpath"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиjUnit", Новый Структура("Р, А", "КаталогВыгрузкиjUnit", "junitpath"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиИнструкцийHTML", Новый Структура("Р, А", "КаталогВыгрузкиИнструкцийHTML", "htmlpath"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиИнструкцийMarkdown", Новый Структура("Р, А", "КаталогВыгрузкиИнструкцийMarkdown", "markdownpath"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиИнструкцийВидео", Новый Структура("Р, А", "КаталогВыгрузкиИнструкцийВидео", "videopath"));
	КоллекцияКоманд.Вставить("КаталогВыгрузкиСкриншотов", Новый Структура("Р, А", "КаталогВыгрузкиСкриншотов", "outputscreenshot"));
	КоллекцияКоманд.Вставить("КаталогиБиблиотек", Новый Структура("Р, А", "КаталогиБиблиотек", "librarycatalogs"));
	КоллекцияКоманд.Вставить("КаталогИнструментов", Новый Структура("Р, А", "КаталогИнструментов", "instrpath"));
	КоллекцияКоманд.Вставить("КаталогиСкриптовSikuliX", Новый Структура("Р, А", "КаталогиСкриптовSikuliX", "sikulixscriptpath"));
	КоллекцияКоманд.Вставить("КаталогДляГенерацииКартинок", Новый Структура("Р, А", "КаталогДляГенерацииКартинок", "pathforpicturegeneration"));
	КоллекцияКоманд.Вставить("КаталогИсполняемогоФайла", Новый Структура("Р, А", "КаталогИсполняемогоФайла", "pathtoplatform"));
	КоллекцияКоманд.Вставить("КаталогОтносительноКоторогоНадоСтроитьИерархию", 
		Новый Структура("Р, А", "КаталогОтносительноКоторогоНадоСтроитьИерархию", "directorytobuildhierarchy"));
	КоллекцияКоманд.Вставить("КаталогПроекта", Новый Структура("Р, А", "КаталогПроекта", "projectpath"));
	КоллекцияКоманд.Вставить("КаталогФич", Новый Структура("Р, А", "КаталогФич", "featurepath"));
	КоллекцияКоманд.Вставить("КлиентыТестирования", Новый Структура("Р, А", "КлиентыТестирования", "testclienttable"));
	КоллекцияКоманд.Вставить("КлючиОтладки", Новый Структура("Р, А", "КлючиОтладки", "testclientdebugkeys"));
	КоллекцияКоманд.Вставить("КоличествоПопытокВыполненияДействия", 
		Новый Структура("Р, А", "КоличествоПопытокВыполненияДействия", "numberofattemptstoperformanaction"));
	КоллекцияКоманд.Вставить("КоличествоСекундПоискаОкна", Новый Структура("Р, А", "КоличествоСекундПоискаОкна", "timetofindwindow"));
	КоллекцияКоманд.Вставить("КомандаОткрытияФичиВТекстовомРедакторе", 
		Новый Структура("Р, А", "КомандаОткрытияФичиВТекстовомРедакторе", "commandtoopenfeatureintexteditor"));
	КоллекцияКоманд.Вставить("КомандаСделатьСкриншот", Новый Структура("Р, А", "КомандаСделатьСкриншот", "commandscreenshot"));
	КоллекцияКоманд.Вставить("ИспользоватьКомпонентуVanessaExt", Новый Структура("Р, А", "ИспользоватьКомпонентуVanessaExt", "useaddine"));
	КоллекцияКоманд.Вставить("ИспользоватьВнешнююКомпонентуДляСкриншотов", 
		Новый Структура("Р, А", "ИспользоватьВнешнююКомпонентуДляСкриншотов", "useaddinforscreencapture"));
	КоллекцияКоманд.Вставить("СпособСнятияСкриншотовВнешнейКомпонентой",
		 Новый Структура("Р, А", "СпособСнятияСкриншотовВнешнейКомпонентой", "screencaptureaddinmethod"));
	КоллекцияКоманд.Вставить("НомерСтрокиДляЗапускаСТекущегоШагаСценария", 
		Новый Структура("Р, А", "НомерСтрокиДляЗапускаСТекущегоШагаСценария", "stepnumber"));
	КоллекцияКоманд.Вставить("ОбновлятьДеревоПриНачалеВыполненияСценария", 
		Новый Структура("Р, А", "ОбновлятьДеревоПриНачалеВыполненияСценария", "updatetreewhenscenariostarts"));
	КоллекцияКоманд.Вставить("ОбновлятьСтатистикуВДереве", Новый Структура("Р, А", "ОбновлятьСтатистикуВДереве", "updatestatistics"));
	КоллекцияКоманд.Вставить("ОстановкаПриВозникновенииОшибки", Новый Структура("Р, А", "ОстановкаПриВозникновенииОшибки", "stoponerror"));
	КоллекцияКоманд.Вставить("ПаузаПриОткрытииОкна", Новый Структура("Р, А", "ПаузаПриОткрытииОкна", "pauseonwindowopening"));
	КоллекцияКоманд.Вставить("ПоказыватьНомерСтрокиДереваПриВозникновенииОшибки", 
		Новый Структура("Р, А", "ПоказыватьНомерСтрокиДереваПриВозникновенииОшибки", "showrownumberonerror"));
	КоллекцияКоманд.Вставить("ПриоритетНастроекПользователя", Новый Структура("Р, А", "ПриоритетНастроекПользователя", "priorityofusersettings"));
	КоллекцияКоманд.Вставить("ПриравниватьPendingКFailed", Новый Структура("Р, А", "ПриравниватьPendingКFailed", "pendingequalfailed"));
	КоллекцияКоманд.Вставить("РазличатьBrokenИFailedПоКлючевомуСловуТогда", Новый Структура("Р, А", "РазличатьBrokenИFailedПоКлючевомуСловуТогда", "distinguishbrokenorfailedbythenkeyword"));
	КоллекцияКоманд.Вставить("ВыполнятьSleepЧерезPing", Новый Структура("Р, А", "ВыполнятьSleepЧерезPing", "dosleepusingping"));
	КоллекцияКоманд.Вставить("ЗапрещатьПерезаписыватьПеременные", Новый Структура("Р, А", "ЗапрещатьПерезаписыватьПеременные", "banoverwritingvariables"));
	КоллекцияКоманд.Вставить("ОбновлятьТаблицыФормыПриПолученииЗначения", Новый Структура("Р, А", "ОбновлятьТаблицыФормыПриПолученииЗначения", "updateformtableswhengettingvalue"));
	КоллекцияКоманд.Вставить("ПолучатьМакетыСПомощьюРасширенияVAExtension", Новый Структура("Р, А", "ПолучатьМакетыСПомощьюРасширенияVAExtension", "getlayoutsusingextensionvaextension"));
	КоллекцияКоманд.Вставить("ЗаменятьТабыНаПробелы", Новый Структура("Р, А", "ЗаменятьТабыНаПробелы", "replacetabswithspaces"));
	КоллекцияКоманд.Вставить("ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", 
		Новый Структура("Р, А", "ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", "logpath"));
	КоллекцияКоманд.Вставить("СниматьСкриншотКаждогоОкна1С", Новый Структура("Р, А", "СниматьСкриншотКаждогоОкна1С", "onerrorscreenshoteverywindow"));
	КоллекцияКоманд.Вставить("АвтонумерацияШагов", Новый Структура("Р, А", "АвтонумерацияШагов", "autonumberingofsteps"));
	КоллекцияКоманд.Вставить("ТекстовыеИнструкцииГруппаШаговКакШаг", Новый Структура("Р, А", "ТекстовыеИнструкцииГруппаШаговКакШаг", "TextStepGroupAsStep"));
	КоллекцияКоманд.Вставить("ДобавлятьИмяФичиВТекстовуюИнструкцию", Новый Структура("Р, А", "ДобавлятьИмяФичиВТекстовуюИнструкцию", "AddFeatureNameToTextInstruction"));
	КоллекцияКоманд.Вставить("ДобавлятьИмяСценарияВТекстовуюИнструкцию", Новый Структура("Р, А", "ДобавлятьИмяСценарияВТекстовуюИнструкцию", "AddScenarioNameToTextInstruction"));
	КоллекцияКоманд.Вставить("СтилиHTML", Новый Структура("Р, А", "СтилиHTML", "htmlstyles"));
	КоллекцияКоманд.Вставить("СоздаватьИнструкциюHTML", Новый Структура("Р, А", "СоздаватьИнструкциюHTML", "htmlcreate"));
	КоллекцияКоманд.Вставить("СоздаватьИнструкциюMarkdown", Новый Структура("Р, А", "СоздаватьИнструкциюMarkdown", "markdowncreate"));
	КоллекцияКоманд.Вставить("СоздаватьИнструкциюВидео", Новый Структура("Р, А", "СоздаватьИнструкциюВидео", "videocreate"));
	КоллекцияКоманд.Вставить("ОзвучиватьВыполнениеСценария", Новый Структура("Р, А", "ОзвучиватьВыполнениеСценария", "soundscenarioexecution"));
	КоллекцияКоманд.Вставить("СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки", 
		Новый Структура("Р, А", "СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки", "createsubfolderforbuild"));
	КоллекцияКоманд.Вставить("СписокТеговИсключение", Новый Структура("Р, А", "СписокТеговИсключение", "ignoretags"));
	КоллекцияКоманд.Вставить("СписокСценариевДляВыполнения", Новый Структура("Р, А", "СписокСценариевДляВыполнения", "scenariofilter"));
	КоллекцияКоманд.Вставить("СписокТеговОтбор", Новый Структура("Р, А", "СписокТеговОтбор", "filtertags"));
	КоллекцияКоманд.Вставить("ТаймаутДляАсинхронныхШагов", Новый Структура("Р, А", "ТаймаутДляАсинхронныхШагов", "timeoutforasynchronoussteps"));
	КоллекцияКоманд.Вставить("ТаймаутЗапуска1С", Новый Структура("Р, А", "ТаймаутЗапуска1С", "testclienttimeout"));
	КоллекцияКоманд.Вставить("ТегTreeВключенПоУмолчанию", Новый Структура("Р, А", "ТегTreeВключенПоУмолчанию", "thetreetagisenabledbydefault"));
	КоллекцияКоманд.Вставить("УровеньОтчета1", Новый Структура("Р, А", "УровеньОтчета1", "reportlevel1"));
	КоллекцияКоманд.Вставить("УровеньОтчета2", Новый Структура("Р, А", "УровеньОтчета2", "reportlevel2"));
	КоллекцияКоманд.Вставить("УровеньОтчета3", Новый Структура("Р, А", "УровеньОтчета3", "reportlevel3"));
	КоллекцияКоманд.Вставить("ГруппировкаTestSuites", Новый Структура("Р, А", "ГруппировкаTestSuites", "testsuites"));
	КоллекцияКоманд.Вставить("ПрикладыватьКОтчетуAllureЖурналРегистрацииВыполненияСценария", Новый Структура("Р, А", "ПрикладыватьКОтчетуAllureЖурналРегистрацииВыполненияСценария", "attacheventlogtotheallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьКОтчетуAllureДанныеОЗначенияхПеременных", Новый Структура("Р, А", "ПрикладыватьКОтчетуAllureДанныеОЗначенияхПеременных", "attachvariablestotheallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьФайлыMxlКОтчетуAllure", Новый Структура("Р, А", "ПрикладыватьФайлыMxlКОтчетуAllure", "attachmxlfilestoallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьФайлыXlsxКОтчетуAllure", Новый Структура("Р, А", "ПрикладыватьФайлыXlsxКОтчетуAllure", "attachxlsxfilestoallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьФайлыMxlСохраненныеВФорматеHTMLКОтчетуAllure", Новый Структура("Р, А", "ПрикладыватьФайлыMxlСохраненныеВФорматеHTMLКОтчетуAllure", "attachmxlfilessavedinhtmlformattoallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьДополнительныеДанныеПриСравненииЗначенияСЭталономAllure", Новый Структура("Р, А", "ПрикладыватьДополнительныеДанныеПриСравненииЗначенияСЭталономAllure", "attachadditionaldatawhencomparingvaluewithreferenceallure"));
	КоллекцияКоманд.Вставить("ПодставлятьВОтчетеAllureЗначенияПеременных", Новый Структура("Р, А", "ПодставлятьВОтчетеAllureЗначенияПеременных", "setvariablevaluesinstepsallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьКОтчетуAllureДанныеОСостоянииАктивнойФормы", Новый Структура("Р, А", "ПрикладыватьКОтчетуAllureДанныеОСостоянииАктивнойФормы", "attachactiveformdatatotheallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьКОтчетуAllureДанныеОСостоянииВсехФорм", Новый Структура("Р, А", "ПрикладыватьКОтчетуAllureДанныеОСостоянииВсехФорм", "attachallformsdatatotheallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьКОтчетуAllureДанныеОСетевыхСоединениях", Новый Структура("Р, А", "ПрикладыватьКОтчетуAllureДанныеОСетевыхСоединениях", "attachnetworkconnectiondatatotheallurereport"));
	КоллекцияКоманд.Вставить("ПрикладыватьКОтчетуAllureДанныеОПроцессахОС", Новый Структура("Р, А", "ПрикладыватьКОтчетуAllureДанныеОПроцессахОС", "attachdataoftheoperatingsystemprocessestotheallurereport"));
	КоллекцияКоманд.Вставить("ТегиПропускающиеСценарийAllure", Новый Структура("Р, А", "ТегиПропускающиеСценарийAllure", "tagsskippingscript"));
	КоллекцияКоманд.Вставить("ЯзыкГенератораGherkin", Новый Структура("Р, А", "ЯзыкГенератораGherkin", "gherkinlanguage"));
	КоллекцияКоманд.Вставить("ПоставщикПользовательскихНастроек", Новый Структура("Р, А", "ПоставщикПользовательскихНастроек", "usersettingsprovider"));
	КоллекцияКоманд.Вставить("АдресПользовательскихНастроек", Новый Структура("Р, А", "АдресПользовательскихНастроек", "addressofcustomsettings"));
	КоллекцияКоманд.Вставить("ИспользоватьРедакторVanessaEditor", Новый Структура("Р, А", "ИспользоватьРедакторVanessaEditor", "usevanessaeditor"));
	КоллекцияКоманд.Вставить("ТемаРедактораVanessaEditor", Новый Структура("Р, А", "ТемаРедактораVanessaEditor", "vanessaeditortheme"));
	КоллекцияКоманд.Вставить("ПоказыватьМиниатюруКода", Новый Структура("Р, А", "ПоказыватьМиниатюруКода", "showcodeminiature"));
	КоллекцияКоманд.Вставить("ПроверкаСинтаксисаВРедакторе", Новый Структура("Р, А", "ПроверкаСинтаксисаВРедакторе", "syntaxcheckingineditor"));
	КоллекцияКоманд.Вставить("ОтображениеТабуляцииИПробелов", Новый Структура("Р, А", "ОтображениеТабуляцииИПробелов", "displayingtabsandspaces"));
	КоллекцияКоманд.Вставить("ПриНажатииЭскейпВРедактореЗакрытьФорму", Новый Структура("Р, А", "ПриНажатииЭскейпВРедактореЗакрытьФорму", "OnClickingEscapeInTheEditorCloseTheForm"));
	КоллекцияКоманд.Вставить("ИспользоватьДанныеТекущейФормыПриПодбореШагов", Новый Структура("Р, А", "ИспользоватьДанныеТекущейФормыПриПодбореШагов", "usecurrentformdatawhenselectingsteps"));
	КоллекцияКоманд.Вставить("ПоказыватьСтрокиПодсценариевVanessaEdittor", Новый Структура("Р, А", "ПоказыватьСтрокиПодсценариевVanessaEdittor", "showsubscenariolines"));
	КоллекцияКоманд.Вставить("ПоказыватьЗначенияПеременныхВСтрокахРедактора", Новый Структура("Р, А", "ПоказыватьЗначенияПеременныхВСтрокахРедактора", "ShowVariableValuesInEditorLines"));
	КоллекцияКоманд.Вставить("ОткрыватьНачальнуюСтраницуПриЗапуске", Новый Структура("Р, А", "ОткрыватьНачальнуюСтраницуПриЗапуске", "OpenStartPageAtStartup"));
	
	КоллекцияКоманд.Вставить("МетаданныеБиблиотек", Новый Структура("Р, А", "МетаданныеБиблиотек", "stepsfrommetadata"));
	
	КоллекцияКоманд.Вставить("КаталогКешОзвучкиДляИнтерактивнойСправки", Новый Структура("Р, А", "КаталогКешОзвучкиДляИнтерактивнойСправки", "VoiceActingCacheDirectoryForOnlineHelp"));
	КоллекцияКоманд.Вставить("СоздаватьФайлыОзвучкиДляСправки", Новый Структура("Р, А", "СоздаватьФайлыОзвучкиДляСправки", "CreateVoiceoversForOnlineHelp"));
	КоллекцияКоманд.Вставить("ПодключатьГорячуюКлавишуДляПолученияСправкиОбЭлементе", Новый Структура("Р, А", "ПодключатьГорячуюКлавишуДляПолученияСправкиОбЭлементе", "ConnectAHotkeyToGetHelpAboutCurrentItem"));
	КоллекцияКоманд.Вставить("ЗакрыватьСценарийИнтерактивнойСправкиПослеВыполнения", Новый Структура("Р, А", "ЗакрыватьСценарийИнтерактивнойСправкиПослеВыполнения", "CloseInteractiveHelpScriptAfterExecution"));
	КоллекцияКоманд.Вставить("ПоказыватьПомощникПриПервомЗапуске", Новый Структура("Р, А", "ПоказыватьПомощникПриПервомЗапуске", "ShowHelperOnFirstLaunch"));

	КоллекцияКоманд.Вставить("ОбучениеЗапуститьУрок", Новый Структура("Р, А", "ОбучениеЗапуститьУрок", "LearningRunLesson"));
	КоллекцияКоманд.Вставить("ОбучениеВидео", Новый Структура("Р, А", "ОбучениеВидео", "LearningVideo"));
	КоллекцияКоманд.Вставить("ОбучениеPDF", Новый Структура("Р, А", "ОбучениеPDF", "LearningPDF"));
	КоллекцияКоманд.Вставить("ОбучениеMD", Новый Структура("Р, А", "ОбучениеMD", "LearningMD"));
	
	// Удалить. Обратная совместимость
	КоллекцияКоманд.Вставить("КаталогOutputAllure", Новый Структура("Р, А", "КаталогOutputAllure", "allurepath"));
	КоллекцияКоманд.Вставить("КаталогOutputAllureБазовый", Новый Структура("Р, А", "КаталогOutputAllureБазовый", "allurepathbase"));
	КоллекцияКоманд.Вставить("КаталогOutputCucumberJson", Новый Структура("Р, А", "КаталогOutputCucumberJson", "cucumberreportpath"));
	КоллекцияКоманд.Вставить("КаталогOutputjUnit", Новый Структура("Р, А", "КаталогOutputjUnit", "junitpath"));
	КоллекцияКоманд.Вставить("КаталогOutputИнструкцияHTML", Новый Структура("Р, А", "КаталогOutputИнструкцияHTML", "htmlpath"));
	КоллекцияКоманд.Вставить("КаталогOutputИнструкцияMarkdown", Новый Структура("Р, А", "КаталогOutputИнструкцияMarkdown", "markdownpath"));
	КоллекцияКоманд.Вставить("КаталогOutputИнструкцияВидео", Новый Структура("Р, А", "КаталогOutputИнструкцияВидео", "videopath"));
	КоллекцияКоманд.Вставить("КаталогOutputСкриншоты", Новый Структура("Р, А", "КаталогOutputСкриншоты", "outputscreenshot"));
	// Конец Удалить
	
	Возврат КоллекцияКоманд;
	
КонецФункции

// Выполняет команду системы, при этом на экране не будет показано окно cmd
// Использует WshShell.
//
// Параметры:
//  СтрокаКоманды		 - Строка - выполняемая команда
//  ЖдатьОкончания		 - Число  - флаг ожидания окончания выполнения команды:
//
// Возвращаемое значение:
//   - Результат выполнения скрипта. 0 - если не было ошибок.
//
&НаКлиенте
Функция ВыполнитьКомандуОСБезПоказаЧерногоОкна(Знач ТекстКоманды, ЖдатьОкончания = -1) Экспорт
	
	#Если НЕ ВебКлиент Тогда
		
	ТекстКоманды = СтрЗаменить(ТекстКоманды, "%", "%%");
		
	Если ЭтоLinuxКлиент() Тогда
			
		КомандаСистемы(ТекстКоманды);
		Возврат 0;
		
	КонецЕсли;
		
	// если ЖдатьОкончания = -1, тогда будет ожидание окончания работы приложения
	
	ИмяВременногоФайлаКоманды = ПолучитьИмяВременногоФайла("bat");
	
	// эти две строки нужны для записи файла без BOM - начало
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайлаКоманды, КодировкаТекста.ANSI, , Ложь); 
	ЗТ.Закрыть();
	// эти две строки нужны для записи файла без BOM - окончание
	
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайлаКоманды, КодировкаТекста.UTF8, , Истина); 
	Если ЭтоWindowsXP = Неопределено Тогда
		СистемнаяИнформация = Новый СистемнаяИнформация;
		ЭтоWindowsXP = ЭтоWindowsXP(СистемнаяИнформация);
	КонецЕсли;	 
	Если НЕ ЭтоWindowsXP Тогда
		ЗТ.ЗаписатьСтроку("chcp 65001"); 
	КонецЕсли;	 
	ЗТ.ЗаписатьСтроку(ТекстКоманды); 
	ЗТ.Закрыть();
	
	Если WshShell = Неопределено Тогда
		WshShell = ПолучитьWshShell();
		// Далее переменная WshShell будет закеширована, чтобы не создавать ComObject каждый раз
	КонецЕсли;	 
	Рез = WshShell.Run("""" + ИмяВременногоФайлаКоманды + """", 0, ЖдатьОкончания);
	
	Если ЖдатьОкончания = -1 И НЕ ЗапрещеныСинхронныеВызовы Тогда
		// иначе удалять нельзя
		Попытка
			УдалитьФайлыКомандаСистемы(ИмяВременногоФайлаКоманды);
		Исключение
			ЗаписатьЛогВЖРОшибка("VanessaAutomation.УдалениеВременногоФайла", ПодставитьПараметрыВСтроку(
				Локализовать("Не получилось удалить файл %1"),
				ИмяВременногоФайлаКоманды
			));
		КонецПопытки;
	КонецЕсли;	 
	
	Возврат Рез;
	
	#КонецЕсли
КонецФункции	

// Удалить. Настройки
//
&НаКлиенте
Функция СтруктураПараметровЗапуска() Экспорт
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("StartFeaturePlayer", Ложь);
	ПараметрыЗапуска.Вставить("КаталогФич", "");
	ПараметрыЗапуска.Вставить("КаталогиБиблиотек", Новый Массив);
	ПараметрыЗапуска.Вставить("СписокТеговИсключение", Новый Массив);
	ПараметрыЗапуска.Вставить("СписокСценариевДляВыполнения", Новый Массив);
	ПараметрыЗапуска.Вставить("СписокТеговОтбор", Новый Массив);
	ПараметрыЗапуска.Вставить("ВыгрузитьPIDTestManager", Ложь);
	ПараметрыЗапуска.Вставить("КаталогИсполняемогоФайла", "");
	ПараметрыЗапуска.Вставить("ИмяФайлаPIDTestManager", "");
	ПараметрыЗапуска.Вставить("ИмяФайлаВнешнихКомандФреймворка", "");
	ПараметрыЗапуска.Вставить("ПриравниватьPendingКFailed", Истина);
	ПараметрыЗапуска.Вставить("РазличатьBrokenИFailedПоКлючевомуСловуТогда", Ложь);
	ПараметрыЗапуска.Вставить("ВыполнятьSleepЧерезPing", Ложь);
	ПараметрыЗапуска.Вставить("ЗапрещатьПерезаписыватьПеременные", Ложь);
	ПараметрыЗапуска.Вставить("ОбновлятьТаблицыФормыПриПолученииЗначения", Ложь);
	ПараметрыЗапуска.Вставить("ПолучатьМакетыСПомощьюРасширенияVAExtension", Ложь);
	ПараметрыЗапуска.Вставить("ЗаменятьТабыНаПробелы", Ложь);
	ПараметрыЗапуска.Вставить("КоличествоСекундПоискаОкна", "");
	ПараметрыЗапуска.Вставить("КоличествоПопытокВыполненияДействия", "");
	ПараметрыЗапуска.Вставить("ОстановкаПриВозникновенииОшибки", Ложь);
	ПараметрыЗапуска.Вставить("ПоказыватьНомерСтрокиДереваПриВозникновенииОшибки", Ложь);
	ПараметрыЗапуска.Вставить("ДелатьСообщенияТранслитом", Ложь);
	ПараметрыЗапуска.Вставить("АвтонумерацияШагов", Истина);
	ПараметрыЗапуска.Вставить("ТекстовыеИнструкцииГруппаШаговКакШаг", Истина);
	ПараметрыЗапуска.Вставить("ДобавлятьИмяФичиВТекстовуюИнструкцию", Ложь);
	ПараметрыЗапуска.Вставить("ДобавлятьИмяСценарияВТекстовуюИнструкцию", Ложь);
	ПараметрыЗапуска.Вставить("СоздаватьИнструкциюHTML", Ложь);
	ПараметрыЗапуска.Вставить("СтилиHTML", "");
	ПараметрыЗапуска.Вставить("СоздаватьИнструкциюMarkdown", Ложь);
	ПараметрыЗапуска.Вставить("СоздаватьИнструкциюВидео", Ложь);
	ПараметрыЗапуска.Вставить("ОзвучиватьВыполнениеСценария", Ложь);
	ПараметрыЗапуска.Вставить("ДелатьЛогВыполненияСценариевВЖР", Истина);
	ПараметрыЗапуска.Вставить("ДелатьЛогВыполненияСценариевВТекстовыйФайл", Ложь);
	ПараметрыЗапуска.Вставить("ВыводитьВЛогВыполнениеШагов", Ложь);
	ПараметрыЗапуска.Вставить("ПодробныйЛогВыполненияСценариев", Ложь);
	ПараметрыЗапуска.Вставить("ВыводитьЛогВКонсоль", Ложь);
	ПараметрыЗапуска.Вставить("ИспользоватьПарсерGherkinИзКомпонентыVanessaExt", Истина);
	ПараметрыЗапуска.Вставить("ПоискФайловСПомощьюКомпонентыVanessaExt", Истина);
	ПараметрыЗапуска.Вставить("ЗвуковоеОповещениеПриОкончанииВыполненияСценария", Истина);
	ПараметрыЗапуска.Вставить("ПоказыватьОкноОстановкиВыполненияСценария", Истина);
	ПараметрыЗапуска.Вставить("ПоказыватьОкноОстановкиЗаписиДействийПользователя", Истина);
	ПараметрыЗапуска.Вставить("ОтображатьЗакладкиСверху", Ложь);
	ПараметрыЗапуска.Вставить("ПоказыватьРазличияВРедактореОтдельно", Истина);
	ПараметрыЗапуска.Вставить("ДелатьЛогОшибокВТекстовыйФайл", Ложь);
	ПараметрыЗапуска.Вставить("СобиратьДанныеОСостоянииАктивнойФормыПриОшибке", Ложь);
	ПараметрыЗапуска.Вставить("СобиратьДанныеОСостоянииВсехФормПриОшибке", Ложь);
	ПараметрыЗапуска.Вставить("СобиратьДанныеОСетевыхСоединениях", Ложь);
	ПараметрыЗапуска.Вставить("СобиратьДанныеОПроцессахОС", Ложь);
	ПараметрыЗапуска.Вставить("СобиратьДанныеОЗначенияхПеременных", Ложь);
	ПараметрыЗапуска.Вставить("КомандаЗапускаБраузера", "");
	ПараметрыЗапуска.Вставить("ИспользоватьБраузерПлюсWebSocket", Ложь);
	ПараметрыЗапуска.Вставить("ЭмулироватьДвиженияМышкиVanessaExt", Ложь);
	ПараметрыЗапуска.Вставить("ЭмулироватьВводКлавиатурыVanessaExt", Ложь);
	ПараметрыЗапуска.Вставить("СмещениеПоГоризонталиДвиженияМышкиVanessaExt", 0);
	ПараметрыЗапуска.Вставить("СмещениеПоВертикалиДвиженияМышкиVanessaExt", 0);
	ПараметрыЗапуска.Вставить("КоличествоШаговПриДвиженииМышкиVanessaExt", 150);
	ПараметрыЗапуска.Вставить("ПаузаМеждуШагамиПриДвиженииМышкиVanessaExt", 3);
	ПараметрыЗапуска.Вставить("ПодсвечиватьКликМышкиВБраузереVanessaExt", Ложь);
	ПараметрыЗапуска.Вставить("ЦветПодсветкиКликаМышкиVanessaExt", 255);
	ПараметрыЗапуска.Вставить("РадиусПодсветкиКликаМышкиVanessaExt", 30);
	ПараметрыЗапуска.Вставить("ДлительностьПодсветкиКликаМышкиVanessaExt", 12);
	ПараметрыЗапуска.Вставить("ТолщинаПодсветкиКликаМышкиVanessaExt", 12);
	ПараметрыЗапуска.Вставить("ПрозрачностьПодсветкиКликаМышкиVanessaExt", 127);
	ПараметрыЗапуска.Вставить("ПоискКартинокСПомощьюКомпонентыVanessaExt", Истина);
	ПараметрыЗапуска.Вставить("ПорогПоискаКартинки", 0.99);
	ПараметрыЗапуска.Вставить("ИгнорироватьОшибкиПоискаЭлементовВБраузере", Ложь);
	ПараметрыЗапуска.Вставить("ИспользоватьUIAutomation", Ложь);
	ПараметрыЗапуска.Вставить("КоэффициентМасштабированияЭкрана", 1);
	ПараметрыЗапуска.Вставить("ИмяФайлаЛогВыполненияСценариев", "");
	ПараметрыЗапуска.Вставить("ИмяКаталогаЛогОшибок", "");
	ПараметрыЗапуска.Вставить("ЗакрытьTestClientПослеЗапускаСценариев", Ложь);
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиИнструкцийHTML", "");
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиИнструкцийMarkdown", "");
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиИнструкцийВидео", "");
	ПараметрыЗапуска.Вставить("ДелатьОтчетВоВнутреннемФормате", Ложь);
	ПараметрыЗапуска.Вставить("ДелатьОтчетВФорматеАллюр", Ложь);
	ПараметрыЗапуска.Вставить("ДелатьОтчетВФорматеСППР", Ложь);
	ПараметрыЗапуска.Вставить("КаталогИнструментов", "");
	ПараметрыЗапуска.Вставить("КаталогПроекта", "");
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиAllure", "");
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиAllureБазовый", "");
	ПараметрыЗапуска.Вставить("ДелатьОтчетВФорматеjUnit", Ложь);
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиjUnit", "");
	ПараметрыЗапуска.Вставить("СкриншотыjUnit", Ложь);
	ПараметрыЗапуска.Вставить("ДелатьОтчетВФорматеCucumberJson", Ложь);
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиCucumberJson", "");
	ПараметрыЗапуска.Вставить("ДобавлятьКИмениСценарияУсловияВыгрузки", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписыватьВидеоВыполненияТестов", Ложь);
	ПараметрыЗапуска.Вставить("КоличествоКадровВидеоВыполненияТестов", 5);
	ПараметрыЗапуска.Вставить("КомандаЗаписиВидеоВыполненияТестов", "ffmpeg");
	ПараметрыЗапуска.Вставить("КаталогДляЗаписиВидеоВыполненияТестов", "");
	ПараметрыЗапуска.Вставить("ИмяСборки", "");
	ПараметрыЗапуска.Вставить("СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки", Ложь);
	ПараметрыЗапуска.Вставить("ВыгружатьСтатусВыполненияСценариевВФайл", Ложь);
	ПараметрыЗапуска.Вставить("ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", "");
	ПараметрыЗапуска.Вставить("ВыполнитьСценарии", Ложь);
	ПараметрыЗапуска.Вставить("ВыполнитьСценарииСТекущегоШага", Ложь);
	ПараметрыЗапуска.Вставить("НомерСтрокиДляЗапускаСТекущегоШагаСценария", "");
	ПараметрыЗапуска.Вставить("ЗагрузитьСценарии", Ложь);
	ПараметрыЗапуска.Вставить("ЗавершитьРаботуСистемы", Ложь);
	ПараметрыЗапуска.Вставить("ДелатьСкриншотПриВозникновенииОшибки", Ложь);
	ПараметрыЗапуска.Вставить("СниматьСкриншотКаждогоОкна1С", Ложь);
	ПараметрыЗапуска.Вставить("КомандаСделатьСкриншот", "");
	ПараметрыЗапуска.Вставить("КаталогВыгрузкиСкриншотов", "");
	ПараметрыЗапуска.Вставить("ИспользоватьКомпонентуVanessaExt", Ложь);
	ПараметрыЗапуска.Вставить("ИспользоватьВнешнююКомпонентуДляСкриншотов", Ложь);
	ПараметрыЗапуска.Вставить("СпособСнятияСкриншотовВнешнейКомпонентой", 0);
	ПараметрыЗапуска.Вставить("ЗапускатьТестКлиентВРежимеОтладки", Ложь);
	ПараметрыЗапуска.Вставить("КлючиОтладки", "");
	ПараметрыЗапуска.Вставить("АдресОтладчика", "");
	ПараметрыЗапуска.Вставить("ВыполнятьШагиАссинхронно", Ложь);
	ПараметрыЗапуска.Вставить("ПриоритетНастроекПользователя", Ложь);
	
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКомандаНачатьЗаписьВидео", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоФайлКурсораМышки", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКаталогДляВременныхФайлов", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоФайлВодянойЗнак", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКомандаFfmpeg", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКомандаConvert", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКаталогМузыки", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоГромкостьМузыки", "0.10");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоДелатьНаложениеTTS", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоТипОзвучкиTTS", 1);
	
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSЯзык", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSГолос", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSЭмоция", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSСкорость", "1.1");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSИдентификаторКаталога", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSApiKey", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSOauthToken", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоYandexTTSВариантЗапроса", "");
	
	ПараметрыЗапуска.Вставить("ЗаписьВидеоAmazonГолос", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоAmazonДвижок", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоAmazonЯзык", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоAmazonРегион", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоAmazonКлючДоступа", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоAmazonСекретныйКлюч", "");
	
	ПараметрыЗапуска.Вставить("ЗаписьВидеоСберTTSClientID", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоСберTTSClientSecret", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоСберTTSГолос", "");
		
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПутьКДвижкуTTS", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоИмяTTS", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоСловарьЗамен", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоСловарьЗаменСписок", Неопределено);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоИнструмент", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЭкранШирина", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЭкранВысота", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЭкранСлева", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЭкранСверху", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКоличествоКадров", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоГруппаШаговКакШаг", Истина);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоОтключитьМасштабированиеШаговПоВремени", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПодсвечиватьНажатияМышки", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоОтключитьСлайдСЗаголовкомФичи", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоОтключитьСлайдСценария", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоОтключитьСлайдФинал", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЭмулироватьВводСКлавиатуры", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоСкрытьСлужебныеОкна", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоСкоростьПроизношения", "1");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКэшироватьФайлыTTS", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКэшФайловTTS", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКэшироватьВидеоВставки", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоКэшВидеоВставок", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоДобавлятьСубтитры", Истина);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПроцентУскорения", 25);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоФормироватьИнструкциюТипВидео", Истина);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоФормироватьИнструкциюТипHTML", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоФормироватьИнструкциюТипMarkdown", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЭмулироватьДвиженияМышкиSikuliX", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПутьКОбработкеДвижкаTTS", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЗаменитьСлайдЗаголовок", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоДобавитьМузыкуКСлайдуЗаголовок", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПутьКСлайдуЗаголовок", "");
	ПараметрыЗапуска.Вставить("ЗаписьВидеоЗаменитьСлайдФинал", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоДобавитьМузыкуКСлайдуФинал", Ложь);
	ПараметрыЗапуска.Вставить("ЗаписьВидеоПутьКСлайдуФинал", "");
	
	ПараметрыЗапуска.Вставить("ГенерироватьУФ", Истина);
	ПараметрыЗапуска.Вставить("СоздаватьОбластиПриГенерацииКода", Истина);
	ПараметрыЗапуска.Вставить("ВыводитьТекстМодуляВместоПерегенерацииEPF", Ложь);
	ПараметрыЗапуска.Вставить("ВерсияПлатформыДляГенерацииEPF", "");
	
	ПараметрыЗапуска.Вставить("ДополнительныеПараметры", Неопределено);
	
	ПараметрыЗапуска.Вставить("КлиентыТестирования", Неопределено);
	ПараметрыЗапуска.Вставить("ТаймаутЗапуска1С", "25");
	ПараметрыЗапуска.Вставить("ДиапазонПортовTestclient", "");
	ПараметрыЗапуска.Вставить("ЗакрыватьКлиентТестированияПринудительно", Истина);
	ПараметрыЗапуска.Вставить("ОпределятьРеальныйПортНаКоторомЗапустилсяКлиентТестирования", Ложь);
	ПараметрыЗапуска.Вставить("ПутьКadb", "");
	ПараметрыЗапуска.Вставить("ПовторноЗапускатьСеансКлиентаТестированияПриПодключенииЕслиНеНайденЕгоПроцесс", Ложь);
	ПараметрыЗапуска.Вставить("ИнтервалЗапускаПроцессаКлиентаТестирования", 100);
	ПараметрыЗапуска.Вставить("КаталогФайловВыводаСлужебныхСообщений", "");
	ПараметрыЗапуска.Вставить("ТаймаутПередПринудительнымЗакрытиемКлиентаТестирования", 10);
	ПараметрыЗапуска.Вставить("МодальноеОкноПриЗапускеКлиентаТестированияЭтоОшибка", Истина);
	ПараметрыЗапуска.Вставить("ОтключитьЗапускРеглЗаданийВФайловойБазе", Ложь);
	ПараметрыЗапуска.Вставить("ВычислятьВыраженияВФигурныхСкобках", Ложь);
	
	ПараметрыЗапуска.Вставить("ТаймаутДляАсинхронныхШагов", "0");
	ПараметрыЗапуска.Вставить("БезопасноеВыполнениеШагов", Ложь);
	ПараметрыЗапуска.Вставить("КомандаОткрытияФичиВТекстовомРедакторе", "");
	ПараметрыЗапуска.Вставить("КаталогОтносительноКоторогоНадоСтроитьИерархию", "");
	ПараметрыЗапуска.Вставить("УровеньОтчета1", "");
	ПараметрыЗапуска.Вставить("УровеньОтчета2", "");
	ПараметрыЗапуска.Вставить("УровеньОтчета3", "");
	ПараметрыЗапуска.Вставить("ГруппировкаTestSuites", "");
	ПараметрыЗапуска.Вставить("ПрикладыватьКОтчетуAllureЖурналРегистрацииВыполненияСценария", Ложь);
	ПараметрыЗапуска.Вставить("ПрикладыватьКОтчетуAllureДанныеОЗначенияхПеременных", Истина);
	ПараметрыЗапуска.Вставить("ПрикладыватьФайлыMxlКОтчетуAllure", Истина);
	ПараметрыЗапуска.Вставить("ПрикладыватьФайлыXlsxКОтчетуAllure", Истина);
	ПараметрыЗапуска.Вставить("ПрикладыватьФайлыMxlСохраненныеВФорматеHTMLКОтчетуAllure", Истина);
	ПараметрыЗапуска.Вставить("ПрикладыватьДополнительныеДанныеПриСравненииЗначенияСЭталономAllure", Ложь);
	ПараметрыЗапуска.Вставить("ПодставлятьВОтчетеAllureЗначенияПеременных", Истина);
	ПараметрыЗапуска.Вставить("ПрикладыватьКОтчетуAllureДанныеОСостоянииАктивнойФормы", Ложь);
	ПараметрыЗапуска.Вставить("ПрикладыватьКОтчетуAllureДанныеОСостоянииВсехФорм", Ложь);
	ПараметрыЗапуска.Вставить("ПрикладыватьКОтчетуAllureДанныеОСетевыхСоединениях", Ложь);
	ПараметрыЗапуска.Вставить("ПрикладыватьКОтчетуAllureДанныеОПроцессахОС", Ложь);
	ПараметрыЗапуска.Вставить("ТегиПропускающиеСценарийAllure", "");
	
	ПараметрыЗапуска.Вставить("ИспользоватьSikuliXСервер", Ложь);
	ПараметрыЗапуска.Вставить("КаталогиСкриптовSikuliX", "");
	ПараметрыЗапуска.Вставить("КаталогДляГенерацииКартинок", "");
	
	ПараметрыЗапуска.Вставить("ИскатьЭлементыФормыПоИмени", Ложь);
	ПараметрыЗапуска.Вставить("ИнтервалВыполненияШагаЗаданныйПользователем", 0);
	
	ПараметрыЗапуска.Вставить("ДобавлятьПриНакликиванииМетаИнформацию", Ложь);
	ПараметрыЗапуска.Вставить("ЗапускатьКлиентТестированияСМаксимизированнымОкном", Истина);
	ПараметрыЗапуска.Вставить("ОбновлятьСтатистикуВДереве", Истина);
	ПараметрыЗапуска.Вставить("ОбновлятьДеревоПриНачалеВыполненияСценария", Истина);
	ПараметрыЗапуска.Вставить("ПаузаПриОткрытииОкна", "0");
	ПараметрыЗапуска.Вставить("ТегTreeВключенПоУмолчанию", Истина);
	ПараметрыЗапуска.Вставить("ДанныеАллюрМеток", Новый Массив);
	ПараметрыЗапуска.Вставить("НастройкиДругогоДвижкаTTS", Неопределено);
	
	ПараметрыЗапуска.Вставить("ЯзыкГенератораGherkin", "ru");
	ПараметрыЗапуска.Вставить("ПоставщикПользовательскихНастроек", "NotUse");
	ПараметрыЗапуска.Вставить("АдресПользовательскихНастроек", "");
	
	ПараметрыЗапуска.Вставить("ИспользоватьРедакторVanessaEditor", Истина);
	ПараметрыЗапуска.Вставить("ТемаРедактораVanessaEditor", "vs");
	ПараметрыЗапуска.Вставить("ИспользоватьДанныеТекущейФормыПриПодбореШагов", Ложь);
	ПараметрыЗапуска.Вставить("ПоказыватьСтрокиПодсценариевVanessaEdittor", Истина);
	ПараметрыЗапуска.Вставить("ПоказыватьЗначенияПеременныхВСтрокахРедактора", Истина);
	ПараметрыЗапуска.Вставить("ОткрыватьНачальнуюСтраницуПриЗапуске", Истина);
	ПараметрыЗапуска.Вставить("ПоказыватьМиниатюруКода", Истина);
	ПараметрыЗапуска.Вставить("ПроверкаСинтаксисаВРедакторе", Истина);
	ПараметрыЗапуска.Вставить("ОтображениеТабуляцииИПробелов", 0);
	ПараметрыЗапуска.Вставить("ПриНажатииЭскейпВРедактореЗакрытьФорму", Истина);
	
	ПараметрыЗапуска.Вставить("МетаданныеБиблиотек", Новый СписокЗначений);
		
	ПараметрыЗапуска.Вставить("КаталогКешОзвучкиДляИнтерактивнойСправки", "");
	ПараметрыЗапуска.Вставить("СоздаватьФайлыОзвучкиДляСправки", Ложь);
	ПараметрыЗапуска.Вставить("ПодключатьГорячуюКлавишуДляПолученияСправкиОбЭлементе", Истина);
	ПараметрыЗапуска.Вставить("ЗакрыватьСценарийИнтерактивнойСправкиПослеВыполнения", Истина);
	ПараметрыЗапуска.Вставить("ПоказыватьПомощникПриПервомЗапуске", Истина);
	
	ПараметрыЗапуска.Вставить("ОбучениеЗапуститьУрок", Истина);
	ПараметрыЗапуска.Вставить("ОбучениеВидео", Истина);
	ПараметрыЗапуска.Вставить("ОбучениеPDF", Истина);
	ПараметрыЗапуска.Вставить("ОбучениеMD", Истина);
	
	// Удалить.
	ПараметрыЗапуска.Вставить("КаталогOutputAllure", "");
	ПараметрыЗапуска.Вставить("КаталогOutputAllureБазовый", "");
	ПараметрыЗапуска.Вставить("КаталогOutputjUnit", "");
	ПараметрыЗапуска.Вставить("КаталогOutputCucumberJson", "");
	ПараметрыЗапуска.Вставить("КаталогOutputИнструкцияHTML", "");
	ПараметрыЗапуска.Вставить("КаталогOutputИнструкцияMarkdown", "");
	ПараметрыЗапуска.Вставить("КаталогOutputИнструкцияВидео", "");
	ПараметрыЗапуска.Вставить("КаталогOutputСкриншоты", "");
	
	// Конец Удалить
	
	Возврат ПараметрыЗапуска;
	
КонецФункции

&НаКлиенте
Функция КешПараметровЗапуска() Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("КешПрочитатьПеременныеСреды", КешПрочитатьПеременныеСреды);
	Структура.Вставить("КешПолучитьСтруктуруПараметров", КешПолучитьСтруктуруПараметров);
	Структура.Вставить("КешVAParams", КешVAParams);
	Возврат Структура;
	
КонецФункции	

&НаКлиенте
Функция УстановитьКеш(КешПараметровЗапуска) Экспорт
	
	КешПрочитатьПеременныеСреды = КешПараметровЗапуска.КешПрочитатьПеременныеСреды;
	КешПолучитьСтруктуруПараметров = КешПараметровЗапуска.КешПолучитьСтруктуруПараметров;
	КешVAParams = КешПараметровЗапуска.КешVAParams;
	
КонецФункции

#КонецОбласти

#Область ОбработкаСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗапрещеныСинхронныеВызовы = ЗапрещеныСинхронныеВызовы();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьЗначениеПараметра(СтруктураПараметров, ИмяПараметра)
	
	Если СтруктураПараметров = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли СтруктураПараметров.Свойство(ИмяПараметра) Тогда
		Возврат ЗначениеСтрокиВБулево(СтруктураПараметров[ИмяПараметра]);
	ИначеЕсли СтруктураПараметров.Свойство(ВРег(ИмяПараметра)) Тогда 
		Возврат ЗначениеСтрокиВБулево(СтруктураПараметров[ВРег(ИмяПараметра)]);
	Иначе	
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции	

&НаКлиенте
Функция ПолучитьСтруктуруПараметров(Знач СтрокаПараметров)
	
	Результат = Новый Структура;
	
	МассивПараметров = РазложитьСтрокуВМассивПодстрок(СтрокаПараметров, ";");
	Для каждого ЭлементМассива Из МассивПараметров Цикл
		Позиция = Найти(ЭлементМассива, "=");
		Если Позиция > 0 Тогда
			Ключ     = Лев(ЭлементМассива, Позиция - 1);
			Значение = Сред(ЭлементМассива, Позиция + 1);
			Попытка
				Результат.Вставить(Ключ, Значение);
			Исключение
			КонецПопытки;
		Иначе
			Если НЕ ПустаяСтрока(ЭлементМассива) Тогда 
				Попытка
					Результат.Вставить(ЭлементМассива, Истина);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция НайтиКоманду(КоллекцияКоманды, КомандаЗапускаНРег)
	Если ТипЗнч(КоллекцияКоманды) = Тип("Структура") Тогда
		Для каждого КлючЗначение Из КоллекцияКоманды Цикл
			Если НРег(КлючЗначение.Значение) = НРег(КомандаЗапускаНРег) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	 
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция Локализовать(Сообщение)
	
	Если Ванесса = Неопределено Тогда
		Возврат Сообщение;
	КонецЕсли;	
	
	Возврат Ванесса.Локализовать(Сообщение);
	
КонецФункции	

&НаКлиенте
Функция ЭтоLinuxКлиент()
	
	Если ЭтоLinux <> Неопределено Тогда
		Возврат ЭтоLinux; 
	КонецЕсли;	 
	
	Значение = Ложь;
	СисИнфо = Новый СистемнаяИнформация;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86 
		ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64
		ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.MacOS_x86
		ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.MacOS_x86_64 Тогда 
		Значение = Истина;
	КонецЕсли;
	
	Возврат Значение;
КонецФункции	 

&НаКлиенте
Функция ЭтоWindowsXP(СистемнаяИнформация)
	Если Найти(НРег(СистемнаяИнформация.ВерсияОС), НРег("Windows XP")) > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;	 
КонецФункции	 

&НаСервереБезКонтекста
Функция ЗапрещеныСинхронныеВызовы()
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Версия1БольшеИлиРавно = ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, "8.3.5.1383");
	
	Рез = Версия1БольшеИлиРавно 
		И Вычислить("Метаданные.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент <> Метаданные.СвойстваОбъектов.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент.Использовать");
	
	Возврат Рез;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(Версия1, Версия2)
	
	Массив1 = РазложитьСтрокуВМассивПодстрок(Версия1, ".");
	Массив2 = РазложитьСтрокуВМассивПодстрок(Версия2, ".");
	
	Версия1БольшеИлиРавно = Истина;
	Для Ккк = 0 По Массив1.Количество() - 1 Цикл
		Элем1 = Массив1.Получить(Ккк);
		Элем2 = Массив2.Получить(Ккк);
		
		Если Число(Элем2) > Число(Элем1) Тогда
			Возврат Ложь;
		ИначеЕсли Число(Элем2) < Число(Элем1) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Версия1БольшеИлиРавно;
КонецФункции

// Аналог СтрРазделить() для старых версий платформы
// Описание параметров аналогично описанию параметров для СтрРазделить()
&НаКлиентеНаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, 
		ЕстьПоддержкаФункцияРазложитьСтрокуВМассивПодстрок = Ложь)
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;

	Если ЕстьПоддержкаФункцияРазложитьСтрокуВМассивПодстрок И СтрДлина(Разделитель) = 1 Тогда
		Если ПропускатьПустыеСтроки = Истина Тогда
			Возврат Вычислить("СтрРазделить(Строка,Разделитель,Ложь)");
		Иначе
			Возврат Вычислить("СтрРазделить(Строка,Разделитель,Истина)");
		КонецЕсли;	 
	КонецЕсли;	 
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Функция ПолучитьWshShell()

	Если WshShell = Неопределено Тогда
		Попытка
			WshShell = Новый COMОбъект("WScript.Shell");
		Исключение
			ВызватьИсключение Локализовать("Не удалось подключить COM объект <WScript.Shell>");
		КонецПопытки;
	КонецЕсли;
	
	Возврат WshShell;

КонецФункции

&НаКлиенте
Процедура УдалитьФайлыКомандаСистемы(Знач ИмяФайла) Экспорт
	#Если НЕ ВебКлиент Тогда
		
	Если НЕ ЗапрещеныСинхронныеВызовы Тогда
		УдалитьФайлы(ИмяФайла);
	ИначеЕсли ЗапрещеныСинхронныеВызовы И ВозможнаОптимизацияРаботыСФайлами Тогда
		УдалитьФайлыСервер(ИмяФайла);
	Иначе
		Если ЭтоLinux Тогда 
			ИмяФайла = СтрЗаменить(ИмяФайла, "\", "/");
			КомандаСистемы("rm -Rf """ + ИмяФайла + """");
		Иначе 
			ИмяФайла = СтрЗаменить(ИмяФайла, "/", "\");
			ВыполнитьКомандуОСБезПоказаЧерногоОкна("DEL /Q """ + ИмяФайла + """");
		КонецЕсли;
	КонецЕсли;
	
	#КонецЕсли
КонецПроцедуры

//Записывает произвольное событие в журнал регистрации с типом "Ошибка"
&НаКлиенте
Процедура ЗаписатьЛогВЖРОшибка(Знач ИмяСобытия, Знач Стр)
	ЗаписатьЛогВЖРОшибкаСервер(ИмяСобытия, Стр);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРОшибкаСервер(ИмяСобытия, Стр)
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , Стр);
КонецПроцедуры

// Аналог СтрШаблон. 
&НаКлиенте
Функция ПодставитьПараметрыВСтроку(Знач Стр, Парам1 = Неопределено,
                                             Парам2 = Неопределено,
                                             Парам3 = Неопределено,
                                             Парам4 = Неопределено,
                                             Парам5 = Неопределено,
                                             Парам6 = Неопределено,
                                             Парам7 = Неопределено,
											 Парам8 = Неопределено,
											 Парам9 = Неопределено) Экспорт
											 
											 
	Если Парам1 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%1",Парам1);
	КонецЕсли;	 											 
	Если Парам2 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%2",Парам2);
	КонецЕсли;	 											 
	Если Парам3 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%3",Парам3);
	КонецЕсли;	 											 
	Если Парам4 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%4",Парам4);
	КонецЕсли;	 											 
	Если Парам5 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%5",Парам5);
	КонецЕсли;	 											 
	Если Парам6 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%6",Парам6);
	КонецЕсли;	 											 
	Если Парам7 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%7",Парам7);
	КонецЕсли;
	Если Парам8 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%8",Парам8);
	КонецЕсли;
	Если Парам9 <> Неопределено Тогда
		Стр = СтрЗаменить(Стр,"%9",Парам9);
	КонецЕсли;
	
	Возврат Стр;
КонецФункции	 

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеСтрокиВБулево(Значение)
	
	Если ТипЗнч(Значение) = Тип("Булево") Тогда
	    Возврат Значение;	
	КонецЕсли;
	
	Если ТипЗнч(Значение) = Тип("Строка") Тогда 
		Если НРег(Значение) = "истина"
			Или Значение = "1"
			Или НРег(Значение) = "true" Тогда 
			Результат = Истина;
		ИначеЕсли НРег(Значение) = "ложь"
			Или Значение = "0"
			Или НРег(Значение) = "false" Тогда 
			Результат = Ложь;
		Иначе 
			Результат = СокрЛП(Значение);
		КонецЕсли;
	ИначеЕсли ТипЗнч(Значение) = Тип("Число") Тогда 
		Результат = Значение;
	ИначеЕсли ТипЗнч(Значение) = Тип("Структура") Тогда
		Результат = Значение;
	ИначеЕсли ТипЗнч(Значение) = Тип("Массив") Тогда
		МассивПараметров = Новый Массив;
		Если ТипЗнч(Значение) = Тип("Строка") Тогда 
			МассивПараметров = РазложитьСтрокуВМассивПодстрок(Значение, ",");
		ИначеЕсли ТипЗнч(Значение) = Тип("Массив") Тогда
			МассивПараметров = Значение;
		КонецЕсли;
		Результат = МассивПараметров;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьФайлыСервер(ИмяФайла)
	УдалитьФайлы(ИмяФайла);
КонецПроцедуры 

#КонецОбласти
