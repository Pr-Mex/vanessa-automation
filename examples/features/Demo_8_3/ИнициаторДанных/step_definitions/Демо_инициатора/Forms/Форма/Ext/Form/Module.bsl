#Область ОписаниеПеременных

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

#КонецОбласти 

#Область ПрограммныйИнтерфейс

#Область СобытияСценариев

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции

#КонецОбласти

#Область Шаги

#Область СозданиеОбъектов

&НаКлиенте
//И я создаю записи регистра сведений "ЧерныйСписокКонтрагентов" по таблице:
//@ЯСоздаюЗаписиРегистраСведенийПоТаблице(Парам01,ТабПарам)
Функция ЯСоздаюЗаписиРегистраСведенийПоТаблице(ИмяРегистра, ТабПарам) Экспорт
	Инициатор().СоздатьЗаписиРегистраСведенийПоТаблицеГеркина(ИмяРегистра, ТабПарам);
КонецФункции

&НаКлиенте
//И я нахожу или создаю группу объекта "Справочники.Контрагенты" с именем "ГруппаКонтрагентов"
//@ЯНахожуИлиСоздаюГруппуОбъектаСИменем(Парам01,Парам02)
Функция ЯНахожуИлиСоздаюГруппуОбъектаСИменем(ИмяМенеджера, ИмяПеременной) Экспорт
	УИД = ИдентификаторСсылки(ИмяПеременной);	
	Инициатор().СоздатьСсылкуСИменем(ИмяМенеджера, ИмяПеременной, УИД, Истина);		
КонецФункции

&НаКлиенте
//И я нахожу или создаю объект "Справочники.Контрагенты" с именем "Контрагент"
//@ЯНахожуИлиСоздаюОбъектСИменем(Парам01,Парам02)
Функция ЯНахожуИлиСоздаюОбъектСИменем(ИмяМенеджера, ИмяПеременной) Экспорт
	УИД = ИдентификаторСсылки(ИмяПеременной);	
	Инициатор().СоздатьСсылкуСИменем(ИмяМенеджера, ИмяПеременной, УИД);

КонецФункции

&НаКлиенте
//И я нахожу или создаю объект "Документы.ПоступлениеТоваров" с именем "ДокПТУ1" на дату 01.02.2020
//@ЯНахожуИлиСоздаюОбъектСИменемНаДату(Парам01,Парам02,Парам03)
Функция ЯНахожуИлиСоздаюОбъектСИменемНаДату(ИмяМенеджера,ИмяПеременной,День) Экспорт
	УИД = ИдентификаторСсылки(ИмяПеременной);	
	Инициатор().СоздатьСсылкуСИменем(ИмяМенеджера, ИмяПеременной, УИД, День, Истина);

КонецФункции

#КонецОбласти 

#Область Очистка

&НаКлиенте
//И я очищаю сохраняемый контекст
//@ЯОчищаюСохраняемыйКонтекст()
Функция ЯОчищаюСохраняемыйКонтекст() Экспорт
	КонтекстСохраняемый.Очистить();	
КонецФункции

&НаКлиенте
//И Я удаляю непосредственно объекты "Документы.ПоступлениеТоваров"
//@ЯУдаляюНепосредственноОбъекты(Парам01)
Функция ЯУдаляюНепосредственноОбъекты(ИмяМенеджера) Экспорт
	Инициатор().УдалитьОбъектыБезКонтроляСсылок(ИмяМенеджера);
КонецФункции

&НаКлиенте
//И Я удаляю записи регистра сведений "ЧерныйСписокКонтрагентов" с отбором по контрагенту "Контрагент"
//@ЯУдаляюЗаписиРегистраСведенийСОтборомПоКонтрагенту(Парам01,Парам02)
Функция ЯУдаляюЗаписиРегистраСведенийСОтборомПоКонтрагенту(ИмяРегистра,ИмяПеременной) Экспорт
	КонтрагентСсылка = Инициатор().ЗначениеПеременной(ИмяПеременной);
	УдалитьЗаписиРегистраСОтборомПоКонтрагентунаСервере(ИмяРегистра,КонтрагентСсылка);
КонецФункции

&НаКлиенте
//Дано Я удаляю объекты сценариев
//@ЯУдаляюОбъектыСценариев()
Функция ЯУдаляюОбъектыСценариев() Экспорт
	Инициатор().ОткатитьИзменения();
	
КонецФункции

#КонецОбласти 

#Область Заполнение

&НаКлиенте
//И я заполняю реквизиты объекта "Контрагент" по таблице:
//@ЯЗаполняюРеквизитыОбъектаПоТаблице(Парам01,ТабПарам)
Функция ЯЗаполняюРеквизитыОбъектаПоТаблице(ИмяПеременной,ТабПарам) Экспорт
	Инициатор().ЗагрузитьТаблицуРеквизитовОбъекта(ИмяПеременной,ТабПарам);
КонецФункции

&НаКлиенте
//И я заполняю табличную часть "Товары" объекта "ДокПТУ1" по таблице:
//@ЯЗаполняюТабличнуюЧастьОбъектаПоТаблице(Парам01,Парам02,ТабПарам)
Функция ЯЗаполняюТабличнуюЧастьОбъектаПоТаблице(ИмяТЧ,ИмяПеременной,ТабПарам) Экспорт
	Инициатор().ЗагрузитьТабличнуюЧастьОбъекта(ИмяТЧ,ИмяПеременной,ТабПарам);	
КонецФункции

&НаКлиенте
//И я устанавливаю константу "ОрганизацияПоУмолчанию" в значение переменной "Организация"
//@ЯУстанавливаюКонстантуВЗначениеПеременной(Парам01,Парам02)
Функция ЯУстанавливаюКонстантуВЗначениеПеременной(ИмяКонстанты, ИмяПеременной) Экспорт
	Инициатор = Инициатор();
	ЗначениеКУстановке = Инициатор.ЗначениеПеременной(ИмяПеременной);
	Инициатор.УстановитьКонстанту(ИмяКонстанты, ЗначениеКУстановке);	
КонецФункции

&НаКлиенте
//Тогда я записываю документ "ДокПТУ1" в режиме "Проведение"
//@ЯЗаписываюДокументВРежиме(Парам01,Парам02)
Функция ЯЗаписываюДокументВРежиме(ИмяПеременной,Режим) Экспорт
	Инициатор().РезультатЗаписиДокумента(ИмяПеременной,Режим);	
КонецФункции

#КонецОбласти 

#Область Проверки

&НаКлиенте
//Когда я проверяю проверку заполнения объекта "ДокПТУ1"
//@ЯПроверяюПроверкуЗаполненияОбъекта(Парам01)
Функция ЯПроверяюПроверкуЗаполненияОбъекта(ИмяПеременной) Экспорт
	ПроверкаЗаполненияПройдена = Инициатор().ПроверкаЗаполненияПройдена(ИмяПеременной);	
	Ванесса.ПроверитьИстину(ПроверкаЗаполненияПройдена);
КонецФункции

&НаКлиенте
//И я проверяю реквизиты объекта "ДокПТУ1" по таблице:
//@ЯПроверяюРеквизитыОбъектаПоТаблице(Парам01,ТабПарам)
Функция ЯПроверяюРеквизитыОбъектаПоТаблице(ИмяПеременной,ТабПарам) Экспорт
	Инициатор().ПроверитьРеквизитыОбъекта(ИмяПеременной,ТабПарам);	
КонецФункции

&НаКлиенте
//И Я проверяю, что движения документа "ДокПТУ1" по регистру "Запасы" идентичны таблице:
//@ЯПроверяюЧтоДвиженияДокументаПоРегиструИдентичныТаблице(Парам01,Парам02,ТабПарам)
Функция ЯПроверяюЧтоДвиженияДокументаПоРегиструИдентичныТаблице(ИмяПеременной,ВидРегистра,ТабПарам) Экспорт
	Инициатор().ПроверитьДвиженияПоРегистру(ИмяПеременной, ВидРегистра, ТабПарам);
КонецФункции

#КонецОбласти 

#КонецОбласти 

#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюТабличнуюЧастьОбъектаПоТаблице(Парам01,ТабПарам)","ЯЗаполняюТабличнуюЧастьОбъектаПоТаблице","И я заполняю табличную часть объекта ""ДокПТУ1"" по таблице:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОтменяюПроведениеДокумента(Парам01)","ЯОтменяюПроведениеДокумента","И я отменяю проведение документа ""ДокПТУ1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюЗаписиСОтборомПоКонтрагенту(Парам01,Парам02)","ЯУдаляюЗаписиСОтборомПоКонтрагенту","И Я удаляю записи регистра сведений ""ЧерныйСписокКонтрагентов"" с отбором по контрагенту ""Контрагент""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОчищаюСохраняемыйКонтекст()","ЯОчищаюСохраняемыйКонтекст","И я очищаю сохраняемый контекст","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюГруппуОбъектаСИменем(Парам01,Парам02)","ЯСоздаюГруппуОбъектаСИменем","И я создаю группу объекта ""Справочники.Контрагенты"" с именем ""ГруппаКонтрагентов""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюОбъектСИменем(Парам01,Парам02)","ЯСоздаюОбъектСИменем","И я создаю объект ""Справочники.Контрагенты"" с именем ""Контрагент""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюОбъектСИменемНаДату(Парам01,Парам02,Парам03)","ЯСоздаюОбъектСИменемНаДату","И я создаю объект ""Документы.ПоступлениеТоваров"" с именем ""ДокПТУ1"" на дату 01.02.2020","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПровожуДокумент(Парам01)","ЯПровожуДокумент","И я провожу документ ""ДокПТУ1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНахожуИлиСоздаюЗаписиРегистраСведенийПоТаблице(Парам01,ТабПарам)","ЯНахожуИлиСоздаюЗаписиРегистраСведенийПоТаблице","И я нахожу или создаю записи регистра сведений ""ЧерныйСписокКонтрагентов"" по таблице:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНахожуИлиСоздаюГруппуОбъектаСИменем(Парам01,Парам02)","ЯНахожуИлиСоздаюГруппуОбъектаСИменем","И я нахожу или создаю группу объекта ""Справочники.Контрагенты"" с именем ""ГруппаКонтрагентов""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНахожуИлиСоздаюОбъектСИменем(Парам01,Парам02)","ЯНахожуИлиСоздаюОбъектСИменем","И я нахожу или создаю объект ""Справочники.Контрагенты"" с именем ""Контрагент""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюРеквизитыОбъектаПоТаблице(Парам01,ТабПарам)","ЯЗаполняюРеквизитыОбъектаПоТаблице","И я заполняю реквизиты объекта ""Контрагент"" по таблице:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУстанавливаюКонстантуВЗначениеПеременной(Парам01,Парам02)","ЯУстанавливаюКонстантуВЗначениеПеременной","И я устанавливаю константу ""ОрганизацияПоУмолчанию"" в значение переменной ""Организация""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюНепосредственноОбъекты(Парам01)","ЯУдаляюНепосредственноОбъекты","И Я удаляю непосредственно объекты ""Документы.ПоступлениеТоваров""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюЗаписиРегистраСведенийСОтборомПоКонтрагенту(Парам01,Парам02)","ЯУдаляюЗаписиРегистраСведенийСОтборомПоКонтрагенту","И Я удаляю записи регистра сведений ""ЧерныйСписокКонтрагентов"" с отбором по контрагенту ""Контрагент""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНахожуИлиСоздаюОбъектСИменемНаДату(Парам01,Парам02,Парам03)","ЯНахожуИлиСоздаюОбъектСИменемНаДату","И я нахожу или создаю объект ""Документы.ПоступлениеТоваров"" с именем ""ДокПТУ1"" на дату 01.02.2020","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюТабличнуюЧастьОбъектаПоТаблице(Парам01,Парам02,ТабПарам)","ЯЗаполняюТабличнуюЧастьОбъектаПоТаблице","И я заполняю табличную часть ""Товары"" объекта ""ДокПТУ1"" по таблице:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПроверяюПроверкуЗаполненияОбъекта(Парам01)","ЯПроверяюПроверкуЗаполненияОбъекта","Когда я проверяю проверку заполнения объекта ""ДокПТУ1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаписываюДокументВРежиме(Парам01,Парам02)","ЯЗаписываюДокументВРежиме","Тогда я записываю документ ""ДокПТУ1"" в режиме ""Проведение""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПроверяюРеквизитыОбъектаПоТаблице(Парам01,ТабПарам)","ЯПроверяюРеквизитыОбъектаПоТаблице","И я проверяю реквизиты объекта ""ДокПТУ1"" по таблице:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПроверяюЧтоДвиженияДокументаПоРегиструИдентичныТаблице(Парам01,Парам02,ТабПарам)","ЯПроверяюЧтоДвиженияДокументаПоРегиструИдентичныТаблице","И Я проверяю, что движения документа ""ДокПТУ1"" по регистру ""Запасы"" идентичны таблице:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюЗаписиРегистраСведенийПоТаблице(Парам01,ТабПарам)","ЯСоздаюЗаписиРегистраСведенийПоТаблице","И я создаю записи регистра сведений ""ЧерныйСписокКонтрагентов"" по таблице:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюОбъектыСценариев()","ЯУдаляюОбъектыСценариев","Дано Я удаляю объекты сценариев","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция КэшКлиент()
	
	Если НЕ КонтекстСохраняемый.Свойство("КэшКлиент") Тогда
		КонтекстСохраняемый.Вставить("КэшКлиент", Новый Структура);		
	КонецЕсли; 	
	
	Возврат КонтекстСохраняемый.КэшКлиент;
	
КонецФункции

&НаКлиенте
Функция Инициатор()
	Возврат Ванесса.ИнициаторДанных();	
КонецФункции

&НаКлиенте
Функция ИдентификаторСсылки(ИмяПеременной)
	
	Кэш = КэшКлиент();
	Если НЕ Кэш.Свойство("ИдентификаторыСсылок") Тогда
		ИдентификаторыСсылок = Новый Соответствие;
		ИдентификаторыСсылок.Вставить("ГруппаКонтрагентов", "b3d775a4-d01b-11ea-8919-9cb6d01cce84");
		ИдентификаторыСсылок.Вставить("Контрагент", "b3d775a8-d01b-11ea-8919-9cb6d01cce84");
		ИдентификаторыСсылок.Вставить("Организация", "b3d775a6-d01b-11ea-8919-9cb6d01cce84");
		ИдентификаторыСсылок.Вставить("Товар1", "b3d775a9-d01b-11ea-8919-9cb6d01cce84");
		ИдентификаторыСсылок.Вставить("ДокПТУ1", "");
		
		Кэш.Вставить("ИдентификаторыСсылок", ИдентификаторыСсылок);
	КонецЕсли; 
	
	Результат = Кэш.ИдентификаторыСсылок.Получить(ИмяПеременной);
	Если Результат = Неопределено Тогда
		ВызватьИсключение "Не задан GUID для переменной " + ИмяПеременной;		
	КонецЕсли; 	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УдалитьЗаписиРегистраСОтборомПоКонтрагентунаСервере(Знач ИмяРегистра, Знач КонтрагентСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	*
		|ИЗ
		|	РегистрСведений."+ ИмяРегистра +" КАК Запись
		|ГДЕ
		|	Запись.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", КонтрагентСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();	
	Пока Выборка.Следующий() Цикл
		мз = РегистрыСведений[ИмяРегистра].СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(мз, Выборка);
		мз.Удалить();		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти
