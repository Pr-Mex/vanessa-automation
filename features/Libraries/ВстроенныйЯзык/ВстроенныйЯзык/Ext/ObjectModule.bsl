//начало текста модуля

Перем Ванесса;


// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 

// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;



Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции


Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);
	
	ДобавитьШагВМассивТестов(ВсеТесты,"ВыражениеВнутреннегоЯзыкаИстинно(Парам01)","ВыражениеВнутреннегоЯзыкаИстинно","И выражение внутреннего языка ""Контекст.КоличествоФинальное - Контекст.КоличествоНачальное = 1"" Истинно");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюЗначениеВыраженияВПеременную(Парам01,Парам02)","ЯЗапоминаюЗначениеВыраженияВПеременную","И Я запоминаю значение выражения ""Ванесса.ПолучитьМассивPIDОкон1С().Количество()"" в переменную ""ИмяПеременной""");

	Возврат ВсеТесты;
КонецФункции


Процедура ПередНачаломСценария() Экспорт
КонецПроцедуры


Процедура ПередОкончаниемСценария() Экспорт
КонецПроцедуры



//И выражение внутреннего языка "Контекст.КоличествоНачальноеПлюсОдин - Контекст.КоличествоНачальное = 1" Истинно
//@ВыражениеВнутреннегоЯзыкаИстинно(Парам01)
Процедура ВыражениеВнутреннегоЯзыкаИстинно(Выражение) Экспорт
	ЗначениеВыражения = Вычислить(Выражение);
	Если ЗначениеВыражения <> Истина Тогда
		ТекстСообщения = Ванесса.ПолучитьТекстСообщенияПользователю("Выражение <%1> оказалось равно <%2>, а ожидали <%3>.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Выражение);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%2",ЗначениеВыражения);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%3",Строка(Истина));
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
КонецПроцедуры


//И Я запоминаю выражение внутреннего языка "Ванесса.ПолучитьМассивPIDОкон1С().Количество()" в переменную "КоличествоНачальноеПлюсОдинВторойРаз"
//@ЯЗапоминаюЗначениеВыраженияВПеременную(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеВыраженияВПеременную(Выражение,ИмяПеременной) Экспорт
	ЗначениеВыражения = Вычислить(Выражение);
	Контекст.Вставить(ИмяПеременной,ЗначениеВыражения);
КонецПроцедуры

//окончание текста модуля
