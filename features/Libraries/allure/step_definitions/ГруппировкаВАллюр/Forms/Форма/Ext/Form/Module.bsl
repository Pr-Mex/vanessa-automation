
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;

&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;
	
	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);
	
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ЯУстанавливаюНазваниеФичи(Парам01)",
		"ЯУстанавливаюНазваниеФичи",
		"И Я устанавливаю название фичи 'Моя дивная чудная галактика'",
		"Задает для сценария название фичи в отчете Allure",
		"Прочее.Allure");
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ЯУстанавливаюНазваниеЭпика(Парам01)",
		"ЯУстанавливаюНазваниеЭпика",
		"Когда Я устанавливаю название эпика 'Моя дивная чудная вселенная'",
		"Задает для сценария название эпика в отчете Allure",
		"Прочее.Allure");
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ЯУстанавливаюНазваниеИстории(Парам01)",
		"ЯУстанавливаюНазваниеИстории",
		"И Я устанавливаю название истории 'Мой дивный чудный мир'",
		"Задает для сценария название истории в отчете Allure",
		"Прочее.Allure");
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ЯУстанавливаюМеткеЗначение(Парам01, Парам02)",
		"ЯУстанавливаюМеткеЗначение",
		"И Я устанавливаю метке 'Метка' значение 'Значение'",
		"Добавляет к сценарию произвольную метку со значением в отчет Allure",
		"Прочее.Allure");
	
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ЯУстанавливаюОписаниеСценарияДляОтчетаAllure(Парам01)",
		"ЯУстанавливаюОписаниеСценарияДляОтчетаAllure",
		"И я устанавливаю описание сценария для отчета Allure 'Описание'",
		"Устанавливает описания сценария в отчете Allure",
		"Прочее.Allure");

	Возврат ВсеТесты;
	
КонецФункции

// Делает отключение модуля
Процедура ОтключениеМодуля() Экспорт
	
	Ванесса = Неопределено;
	Контекст = Неопределено;
	КонтекстСохраняемый = Неопределено;
	
КонецПроцедуры

&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции

&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И Я устанавливаю название фичи 'Моя дивная чудная галактика'
//@ЯУстанавливаюНазваниеФичи(Парам01)
Функция ЯУстанавливаюНазваниеФичи(Парам01) Экспорт
		ЯУстанавливаюМеткеЗначение("feature", Парам01);
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
КонецФункции

&НаКлиенте
//Когда Я устанавливаю название эпика 'Моя дивная чудная вселенная'
//@ЯУстанавливаюНазваниеЭпика(Парам01)
Функция ЯУстанавливаюНазваниеЭпика(Парам01) Экспорт
	ЯУстанавливаюМеткеЗначение("epic", Парам01);
	//ВызватьИсключение "Не реализовано.";
КонецФункции

&НаКлиенте
//И Я устанавливаю название истории 'Мой дивный чудный мир'
//@ЯУстанавливаюНазваниеИстории(Парам01)
Функция ЯУстанавливаюНазваниеИстории(Парам01) Экспорт
	ЯУстанавливаюМеткеЗначение("story", Парам01);

	//ВызватьИсключение "Не реализовано.";
КонецФункции


&НаКлиенте
//И Я устанавливаю метке 'Метка' значение 'Значение'
//@ЯУстанавливаюМеткеЗначение(Парам01, Парам02)
Функция ЯУстанавливаюМеткеЗначение(Метка, Значение) Экспорт
	СостояниеVanessaAutomation = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	РезультатПрохожденияТестовВСценарии = СостояниеVanessaAutomation["ТекущийСценарий"].РезультатПрохожденияТестовСценария;
	Если НЕ РезультатПрохожденияТестовВСценарии.Свойство("СписокМеток") Тогда
		РезультатПрохожденияТестовВСценарии.Вставить("СписокМеток", Новый СписокЗначений);
	КонецЕсли;
	
	РезультатПрохожденияТестовВСценарии["СписокМеток"].Добавить(Метка, Значение);
	
КонецФункции

&НаКлиенте
//И я устанавливаю описание сценария для отчета Allure "Описание"
//@ЯУстанавливаюОписаниеСценарияДляОтчетаAllure(Парам01)
Функция ЯУстанавливаюОписаниеСценарияДляОтчетаAllure(Описание) Экспорт
	СостояниеVanessaAutomation = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	РезультатПрохожденияТестовВСценарии = СостояниеVanessaAutomation["ТекущийСценарий"].РезультатПрохожденияТестовСценария;
	РезультатПрохожденияТестовВСценарии.Вставить("ОписаниеСценарияAllure", Описание);
КонецФункции
