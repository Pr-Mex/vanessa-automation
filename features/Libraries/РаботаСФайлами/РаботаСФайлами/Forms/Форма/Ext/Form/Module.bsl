
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОчищаюКаталог(Парам01)","ЯОчищаюКаталог","И я очищаю каталог ""ИмяКаталога""","Очищает указанный каталог","Файлы");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюКаталог(Парам01)","ЯСоздаюКаталог","И я создаю каталог ""ИмяКаталога""","Создает каталог с указанным именем, если его нет, а также все его подкаталоги.","Файлы");
	
	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я очищаю каталог "ИмяКаталога"
//@ЯОчищаюКаталог(Парам01)
Процедура ЯОчищаюКаталог(ИмяКаталога) Экспорт
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(ИмяКаталога) Тогда
		ТекстСообщения = "Каталог <%1> не найден.";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",ИмяКаталога); 
		ВызватьИсключение Ванесса.ПолучитьТекстСообщенияПользователю(ТекстСообщения);
	КонецЕсли;	 
	
	Ванесса.ОчиститьСодержимоеКаталога(ИмяКаталога);
КонецПроцедуры

&НаКлиенте
//И я создаю каталог "ИмяКаталога"
//@ЯСоздаюКаталог(Парам01)
Процедура ЯСоздаюКаталог(ИмяКаталога) Экспорт
	Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяКаталога) Тогда
		Возврат;
	КонецЕсли;	 
	
	Массив = Новый Массив;
	Массив.Добавить(ИмяКаталога);
	
	Файл = Новый Файл(ИмяКаталога);
	ТекРодитель = Файл.Путь;
	Пока Истина Цикл
		Если Не ЗначениеЗаполнено(ТекРодитель) Тогда
			Прервать;
		КонецЕсли;	 
		
		Массив.Добавить(ТекРодитель);
		
		Файл = Новый Файл(ТекРодитель);
		
		Если НРег(ТекРодитель) = НРег(Файл.Путь) Тогда
			Прервать;
		КонецЕсли;	 
		
		ТекРодитель = Файл.Путь;
	КонецЦикла;	
	
	Для Ккк = 0 По Массив.Количество()-1 Цикл
		ТекРодитель = Массив[Массив.Количество()-1-Ккк];
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(ТекРодитель) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(ТекРодитель);
		КонецЕсли;	 
	КонецЦикла;	
	
	
	Ванесса.СоздатьКаталогКомандаСистемы(ИмяКаталога);
КонецПроцедуры
