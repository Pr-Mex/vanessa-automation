//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯДобавляюВСлужебныеФайлыАвтоинструкции(Парам01)","ЯДобавляюВСлужебныеФайлыАвтоинструкции","Дано я добавляю в служебные файлы автоинструкции ""Support\Instructions\Temp\ФичаВызывающаяОшибку.feature""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУбедилсяЧтоСлужебныеФайлыФичиУдалены()","ЯУбедилсяЧтоСлужебныеФайлыФичиУдалены","Дано я убедился, что служебные файлы фичи удалены");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯДобавляюПустуюСтроку()","ЯДобавляюПустуюСтроку","И я добавляю пустую строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКНачалуСтрочки()","ЯПерехожуКНачалуСтрочки","И я перехожу к началу строчки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРазворачиваюАктивноеОкноНаПолныйЭкран()","ЯРазворачиваюАктивноеОкноНаПолныйЭкран","И я разворачиваю активное окно на полный экран");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКЗакладкеГенераторEPF()","ЯПерехожуКЗакладкеГенераторEPF","И я перехожу к закладке Генератор EPF");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯИзменяюФлагГенерироватьУправляемуюФорму()","ЯИзменяюФлагГенерироватьУправляемуюФорму","И я изменяю флаг Генерировать управляемую форму");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯИзменяюФлагСоздаватьОбластиПриГенерацииКода()","ЯИзменяюФлагСоздаватьОбластиПриГенерацииКода","И я изменяю флаг Создавать области при генерации кода");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопкуСоздатьИОбновитьШаблоныОбработок()","ЯНажимаюНаКнопкуСоздатьИОбновитьШаблоныОбработок","И я нажимаю на кнопку Создать и обновить шаблоны обработок");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	//Контекст.Вставить("ИмяEPF",Ванесса.Объект.КаталогИнструментов + "\features\Support\Instructions\Temp\step_definitions\ФичаВызывающаяОшибку.epf");
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	//ЯУбедилсяЧтоСлужебныеФайлыФичиУдалены();
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано я добавляю в служебные файлы автоинструкции "Support\Instructions\Temp\ФичаСВызывающаяОшибку.feature"
//@ЯДобавляюВСлужебныеФайлыАвтоинструкции(Парам01)
Процедура ЯДобавляюВСлужебныеФайлыАвтоинструкции(ЧастьПути) Экспорт
	Если Не Контекст.Свойство("МассивСлужебныхФайловФичи") Тогда
		Контекст.Вставить("МассивСлужебныхФайловФичи",Новый Массив);
	КонецЕсли;	 
	
	МассивСлужебныхФайловФичи = Контекст.МассивСлужебныхФайловФичи;
	МассивСлужебныхФайловФичи.Добавить(Ванесса.Объект.КаталогИнструментов + "\features\" + ЧастьПути);
	
КонецПроцедуры

&НаКлиенте
//Дано я убедился, что служебные файлы фичи удалены
//@ЯУбедилсяЧтоСлужебныеФайлыФичиУдалены()
Процедура ЯУбедилсяЧтоСлужебныеФайлыФичиУдалены() Экспорт
	Если Контекст.Свойство("МассивСлужебныхФайловФичи") Тогда
		Для Каждого ИмяФайла Из Контекст.МассивСлужебныхФайловФичи Цикл
			Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайла);
		КонецЦикла;	
	КонецЕсли;	 
КонецПроцедуры


&НаКлиенте
//И я разворачиваю активное окно на полный экран
//@ЯРазворачиваюАктивноеОкноНаПолныйЭкран()
Процедура ЯРазворачиваюАктивноеОкноНаПолныйЭкран() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\MoveActiveWindowFullScreen.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <MoveActiveWindowFullScreen>");
КонецПроцедуры

&НаКлиенте
//И я перехожу к закладке Генератор EPF
//@ЯПерехожуКЗакладкеГенераторEPF()
Процедура ЯПерехожуКЗакладкеГенераторEPF() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\ClickGeneratorEPF.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <ClickGeneratorEPF>");
КонецПроцедуры

&НаКлиенте
//И я изменяю флаг Генерировать управляемую форму
//@ЯИзменяюФлагГенерироватьУправляемуюФорму()
Процедура ЯИзменяюФлагГенерироватьУправляемуюФорму() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\ClickFlagGenUF.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <ClickFlagGenUF>");
КонецПроцедуры

&НаКлиенте
//И я изменяю флаг Создавать области при генерации кода
//@ЯИзменяюФлагСоздаватьОбластиПриГенерацииКода()
Процедура ЯИзменяюФлагСоздаватьОбластиПриГенерацииКода() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\ClickFlagMakeOblast.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <ClickFlagMakeOblast>");
КонецПроцедуры

&НаКлиенте
//И я нажимаю на кнопку Создать и обновить шаблоны обработок
//@ЯНажимаюНаКнопкуСоздатьИОбновитьШаблоныОбработок()
Процедура ЯНажимаюНаКнопкуСоздатьИОбновитьШаблоныОбработок() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\GenerateEPF.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <GenerateEPF>");
КонецПроцедуры

&НаКлиенте
//И я добавляю пустую строку
//@ЯДобавляюПустуюСтроку()
Процедура ЯДобавляюПустуюСтроку() Экспорт
	Ванесса.Шаг("И я набираю текст ""#enter""");
КонецПроцедуры

&НаКлиенте
//И я перехожу к началу строчки
//@ЯПерехожуКНачалуСтрочки()
Процедура ЯПерехожуКНачалуСтрочки() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\TypeHome.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <TypeHome>");
КонецПроцедуры
