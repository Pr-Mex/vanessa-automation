
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson(Парам01)","ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson","И в каталоге файлов ошибок в json формате появился 1 файл json","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВКаталогеСкриншотовПоявилосьФайла(Парам01)","ВКаталогеСкриншотовПоявилосьФайла","И в каталоге скриншотов появилось 2 файла","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И в каталоге файлов ошибок в json формате появился 1 файл json
//@ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson(Парам01)
Процедура ВКаталогеФайловОшибокВJsonФорматеПоявилсяФайлJson(ДолжноБытьФайлов) Экспорт
	КолФайлов = 0;
	БылФайлJson = Ложь;
	
	МасссивНайденныхФайлов = Новый Массив;
	
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	Ванесса.НайтиФайлыКомандаСистемы(Контекст.КаталогОшибок,СписокКаталогов,СписокФайлов,Истина);
	Для Каждого ЭлемФайл Из СписокФайлов Цикл
		ПолноеИмя = ЭлемФайл.Значение.ПолноеИмя;
		МасссивНайденныхФайлов.Добавить(ПолноеИмя);
		
		Контекст.Вставить("НайденноеИмяОшибкиJson",ПолноеИмя);
		
		Если Найти(НРег(ПолноеИмя),".json") > 0 Тогда
			БылФайлJson = Истина;
			КолФайлов = КолФайлов + 1;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	 
	
	Если Не БылФайлJson Тогда
		ТекстСообщения = "В каталоге %1 не найдено ни одного файла json.";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Контекст.КаталогОшибок);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	Если КолФайлов <> ДолжноБытьФайлов Тогда
		ТекстСообщения = "Найдено %1, а должно быть %2 файлов json.";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",КолФайлов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%2",ДолжноБытьФайлов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	Контекст.Вставить("МасссивНайденныхФайлов",МасссивНайденныхФайлов);
КонецПроцедуры

&НаКлиенте
//И в каталоге скриншотов появилось 2 файла
//@ВКаталогеСкриншотовПоявилосьФайла(Парам01)
Процедура ВКаталогеСкриншотовПоявилосьФайла(ДолжноБытьФайлов) Экспорт
	КолФайлов = 0;
	БылФайл = Ложь;
	
	МасссивНайденныхФайлов = Новый Массив;
	
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	Ванесса.НайтиФайлыКомандаСистемы(Контекст.КаталогВыгрузкиСкриншотов,СписокКаталогов,СписокФайлов,Истина);
	Для Каждого ЭлемФайл Из СписокФайлов Цикл
		ПолноеИмя = ЭлемФайл.Значение.ПолноеИмя;
		МасссивНайденныхФайлов.Добавить(ПолноеИмя);
		
		Контекст.Вставить("НайденноеИмяОшибкиJson",ПолноеИмя);
		
		Если Найти(НРег(ПолноеИмя),".png") > 0 Тогда
			БылФайл = Истина;
			КолФайлов = КолФайлов + 1;
		КонецЕсли;	 
	КонецЦикла;	 
	
	Если Не БылФайл Тогда
		ТекстСообщения = "В каталоге %1 не найдено ни одного файла скриншотов.";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Контекст.КаталогВыгрузкиСкриншотов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	Если КолФайлов <> ДолжноБытьФайлов Тогда
		ТекстСообщения = "Найдено %1, а должно быть %2 файлов скриншотов.";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",КолФайлов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%2",ДолжноБытьФайлов);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	Контекст.Вставить("МасссивНайденныхФайлов",МасссивНайденныхФайлов);
КонецПроцедуры
