
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСбросилФлагВТестируемомЭкземпляре(Парам01)","ЯСбросилФлагВТестируемомЭкземпляре","И я сбросил флаг в тестируемом экземпляре ""ПроисходилЗапускTescClient""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУбедилсяЧтоФлагСнят(Парам01)","ЯУбедилсяЧтоФлагСнят","И я убедился, что флаг ""ПроисходилЗапускTescClient"" снят","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	Если Контекст.Свойство("ОткрытаяФормаVanessaBehavoir") Тогда
		Если Контекст.ОткрытаяФормаVanessaBehavoir.Открыта() Тогда
			Контекст.ОткрытаяФормаVanessaBehavoir.Закрыть();
		КонецЕсли;  
	КонецЕсли;  
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я сбросил флаг в тестируемом экземпляре "ПроисходилЗапускTescClient"
//@ЯСбросилФлагВТестируемомЭкземпляре(Парам01)
Процедура ЯСбросилФлагВТестируемомЭкземпляре(ИмяФлага) Экспорт
	Контекст.ОткрытаяФормаVanessaBehavoir[ИмяФлага] = Ложь;
КонецПроцедуры

&НаКлиенте
//И я убедился, что флаг "ПроисходилЗапускTescClient" снят
//@ЯУбедилсяЧтоФлагСнят(Парам01)
Процедура ЯУбедилсяЧтоФлагСнят(ИмяФлага) Экспорт
	Если Контекст.ОткрытаяФормаVanessaBehavoir[ИмяФлага] <> Ложь Тогда
		ТекстСообщения = "В тестируемом экземлпяре VB флаг <%1> оказался равен Истина. А ожидали значение Ложь";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",ИмяФлага);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
КонецПроцедуры
