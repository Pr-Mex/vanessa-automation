
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВКаталогеСуществуетФайлВида(Парам01,Парам02)","ВКаталогеСуществуетФайлВида","И в каталоге ""$КаталогОшибок$"" существует файл вида ""ТестПрикрепленияФайлаУникальный_*.txt""","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И в каталоге "$КаталогОшибок$" существует файл вида "ТестПрикрепленияФайлаУникальный_*.txt"
//@ВКаталогеСуществуетФайлВида(Парам01,Парам02)
Процедура ВКаталогеСуществуетФайлВида(ИмяКаталога,Знач ПереданноеИмяФайла) Экспорт
	ПереданноеИмяФайла = НРег(ПереданноеИмяФайла);
	//ИмяКаталога = Ванесса.ПолучитьЗначениеИзКонтекстаЕслиЭтоВозможно(ИмяКаталога);
	
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	Ванесса.НайтиФайлыКомандаСистемы(ИмяКаталога,СписокКаталогов,СписокФайлов,Ложь);
	
	Нашли = Ложь;
	Для Каждого Элем Из СписокФайлов Цикл
		ИмяНайденногоФайла = Нрег(Элем.Значение.Имя);
		Если Ванесса.СтрокаСоответствуетШаблону(ИмяНайденногоФайла,ПереданноеИмяФайла) Тогда
			Нашли = Истина;
		КонецЕсли;	 
	КонецЦикла;	 
	
	Если НЕ Нашли Тогда
		ВызватьИсключение "Не нашли файл <" + ПереданноеИмяФайла + ">.";
	КонецЕсли;	 
КонецПроцедуры
