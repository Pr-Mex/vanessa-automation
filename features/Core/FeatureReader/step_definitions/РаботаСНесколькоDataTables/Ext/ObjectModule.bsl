//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////


// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 

// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 

// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;


// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыполняюШагКоторыйБудетПриниматьТриТаблицыВВидеПараметров(ТабПарам1,ТабПарам2,ТабПарам3)","ЯВыполняюШагКоторыйБудетПриниматьТриТаблицыВВидеПараметров","Когда я выполняю шаг, который будет принимать три таблицы в виде параметров:","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПеременнойКонтекстБудeтТриПереданныхТаблицы()","ВПеременнойКонтекстБудeтТриПереданныхТаблицы","Тогда в переменной контекст будeт три переданных таблицы","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеНомерБудетКолонки(Парам01,Парам02)","ВТаблицеНомерБудетКолонки","И     в таблице номер 1 будет 2 колонки","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеНомерБудетСтроки(Парам01,Парам02)","ВТаблицеНомерБудетСтроки","И     в таблице номер 1 будет 2 строки","","");

	Возврат ВсеТесты;
КонецФункции
	
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	Возврат ПолучитьМакет(ИмяМакета);
КонецФункции
	

// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////


// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры


// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

Функция ПолучитьКоличествоКолонокТаблицы(Структура)
	Возврат Структура.Количество();
КонецФункции	

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////


//Когда я выполняю шаг, который будет принимать три таблицы в виде параметров:
//@ЯВыполняюШагКоторыйБудетПриниматьТриТаблицыВВидеПараметров(ТабПарам1,ТабПарам2,ТабПарам3)
Процедура ЯВыполняюШагКоторыйБудетПриниматьТриТаблицыВВидеПараметров(ТабПарам1,ТабПарам2,ТабПарам3) Экспорт
	Массив = Новый Массив;
	Массив.Добавить(ТабПарам1);
	Массив.Добавить(ТабПарам2);
	Массив.Добавить(ТабПарам3);
	
	Контекст.Вставить("МассивТаблиц",Массив);
КонецПроцедуры


//Тогда в переменной контекст будeт три переданных таблицы
//@ВПеременнойКонтекстБудeтТриПереданныхТаблицы()
Процедура ВПеременнойКонтекстБудeтТриПереданныхТаблицы() Экспорт
	Если Контекст.МассивТаблиц.Количество() <> 3 Тогда
		ТекстСообщения = "Ожидали получить 3 таблицы в массиве. А получили %1 таблиц.";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Контекст.МассивТаблиц.Количество());
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
КонецПроцедуры



//И     в таблице номер 1 будет 2 колонки
//@ВТаблицеНомерБудетКолонки(Парам01,Парам02)
Процедура ВТаблицеНомерБудетКолонки(НомерТаблицы,КоличествоКолонок) Экспорт
	КоличествоКолонокТаблицы = ПолучитьКоличествоКолонокТаблицы(Контекст.МассивТаблиц[НомерТаблицы-1][0]);
	Если КоличествоКолонокТаблицы <> КоличествоКолонок Тогда
		ТекстСообщения = "Ожидали в таблице №%1 получить %2 колонок. А получили %3";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",НомерТаблицы);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%2",КоличествоКолонок);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%3",КоличествоКолонокТаблицы);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
КонецПроцедуры

Процедура ВТаблицеНомерБудетСтроки(НомерТаблицы,КоличествоСтрок) Экспорт
	Если Контекст.МассивТаблиц[НомерТаблицы-1].Количество() <> КоличествоСтрок Тогда
		ТекстСообщения = "Ожидали в таблице №%1 получить %2 строк. А получили %3";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",НомерТаблицы);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%2",КоличествоСтрок);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%3",Контекст.МассивТаблиц[НомерТаблицы-1].Количество());
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
КонецПроцедуры


//окончание текста модуля  
