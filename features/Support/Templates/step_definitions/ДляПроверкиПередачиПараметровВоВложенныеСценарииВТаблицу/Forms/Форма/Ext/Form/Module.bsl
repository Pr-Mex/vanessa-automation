//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСохраняюВКонтекстЗначениеТаблицыВПеременную(Парам01,ТабПарам)","ЯСохраняюВКонтекстЗначениеТаблицыВПеременную","Когда я сохраняю в контекст значение таблицы в переменную   ""СлужебнаяТаблица""  ");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВКонтекстеВСлужебнойТаблицеБудетПараметр(Парам01)","ВКонтекстеВСлужебнойТаблицеБудетПараметр","Тогда в контексте в служебной таблице будет параметр   ""111""  ");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда я сохраняю в контекст значение таблицы в переменную   "СлужебнаяТаблица"  
//@ЯСохраняюВКонтекстЗначениеТаблицыВПеременную(Парам01,ТабПарам)
Процедура ЯСохраняюВКонтекстЗначениеТаблицыВПеременную(ИмяПеременной,ТабПарам) Экспорт
	Контекст.Вставить(ИмяПеременной,ТабПарам);
КонецПроцедуры

&НаКлиенте
//Тогда в контексте в служебной таблице будет параметр   "111"  
//@ВКонтекстеВСлужебнойТаблицеБудетПараметр(Парам01)
Процедура ВКонтекстеВСлужебнойТаблицеБудетПараметр(Значение) Экспорт
	ТабПарам = Контекст.СлужебнаяТаблица;
	Если ТабПарам[1].Кол2 <> Значение Тогда
		ТекстСообщения = "Ожидали найти в таблице <%1>, а получили <%2>";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Значение);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%2",ТабПарам[1].Кол2);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
КонецПроцедуры

//окончание текста модуля
