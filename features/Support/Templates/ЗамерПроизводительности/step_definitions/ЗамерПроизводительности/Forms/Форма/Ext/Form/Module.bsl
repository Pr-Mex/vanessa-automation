
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ПараметрРавен(Парам01,Парам02)",
		"ПараметрРавен","Тогда Параметр ""ВыполнятьЗамер"" равен ""Ложь""",
		"",
		"");
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ПараметрУстановленВЗначение(Парам01,Парам02)",
		"ПараметрУстановленВЗначение",
		"Допустим Параметр ""АдресОтладчика"" установлен в значение ""http://localhost:1550""",
		"",
		"");
		
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ПараметрНеСуществует(Парам01)",
		"ПараметрНеСуществует",
		"Допустим Параметр ""ДополнительныеПараметры.ВыполнятьЗамер"" не существует",
		"",
		"");

	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ЯОчищаюПараметры()",
		"ЯОчищаюПараметры",
		"И Я очищаю параметры",
		"",
		"");


		
	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции

#КонецОбласти


///////////////////////////////////////////////////
// Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И Параметр ""ВыполнятьЗамер"" не существует
//@ПараметрНеСуществует(Парам01)
Функция ПараметрНеСуществует(ИмяПараметра) Экспорт

	Попытка
		Значение = ЗначениеПараметра(ИмяПараметра);
		ВызватьИсключение "Пробросим в исключение";	
	Исключение	
		Если Найти(ОписаниеОшибки(), "не обнаружено") = 0 Тогда 
			ВызватьИсключение "Ожидалось, что параметра нет";				
		КонецЕсли;	
	КонецПопытки;	
	
КонецФункции


&НаКлиенте
//И Я Удаляю Параметры
//@ЯОчищаюПараметры()
Функция ЯОчищаюПараметры() Экспорт
	
	Ванесса.Объект.ДополнительныеПараметры.Удалить("ВыполнятьЗамер");	

КонецФункции



&НаКлиенте
//Тогда Параметр "ВыполнятьЗамер" равен "Ложь"
//@ПараметрРавен(Парам01,Парам02)
Функция ПараметрРавен(ИмяПараметра, ОжидаемоеЗначение) Экспорт
	
	ЗначениеПараметра = ЗначениеПараметра(ИмяПараметра);
	
	Если НЕ Строка(ЗначениеПараметра) = ОжидаемоеЗначение Тогда
		ВызватьИсключение "Параметр не равен значению";
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
//Допустим Параметр "АдресОтладчика" установлен в значение "http://localhost:1550"
//@ПараметрУстановленВЗначение(Парам01,Парам02)
Функция ПараметрУстановленВЗначение(ИмяПараметра, УстанавливаемоеЗначение) Экспорт

	Выполнить("Ванесса.Объект" + ЦепочкаПараметоров(ИмяПараметра) + " = УстанавливаемоеЗначение" );

КонецФункции


&НаКлиенте
Функция ЗначениеПараметра(ИмяПараметра)
	
	Возврат Вычислить("Ванесса.Объект" + ЦепочкаПараметоров(ИмяПараметра));
	
КонецФункции

&НаКлиенте
Функция ЦепочкаПараметоров(ИмяПараметра)
	
	ЦепочкаПараметоров = "";
	
	ПараметрыОбъекта = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(ИмяПараметра, ".");
	
	Для Каждого ПараметрБезТочки Из ПараметрыОбъекта Цикл 
		ЦепочкаПараметоров = ЦепочкаПараметоров + "[""" + ПараметрБезТочки + """]";
	КонецЦикла;	
	
	Возврат ЦепочкаПараметоров;
	
КонецФункции	
