//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВызываюКонструкторЗапросаСОбработкойРезультата()","ЯВызываюКонструкторЗапросаСОбработкойРезультата","И я вызываю конструктор запроса с обработкой результата");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКЗакладкеТаблицыИПоля()","ЯПерехожуКЗакладкеТаблицыИПоля","И я перехожу к закладке Таблицы и поля");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКВеткеДерева(Парам01)","ЯПерехожуКВеткеДерева","И я перехожу к ветке дерева ""Документы""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКСтрокеДерева(Парам01)","ЯПерехожуКСтрокеДерева","И я перехожу к строке дерева ""Ссылка""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыбираюТекущуюСтроку()","ЯВыбираюТекущуюСтроку","И я выбираю текущую строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКЗакладкеУсловия()","ЯПерехожуКЗакладкеУсловия","И я перехожу к закладке Условия");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКЛевойЧастиУсловийЗапроса()","ЯПерехожуКЛевойЧастиУсловийЗапроса","И я перехожу к левой части условий запроса");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРаскрываюВеткуДерева()","ЯРаскрываюВеткуДерева","И я раскрываю ветку дерева");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуОККонструктораЗапросов()","ЯНажимаюКнопкуОККонструктораЗапросов","И я нажимаю кнопку ОК конструктора запросов");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯДобавляюСтрокуПослеТекста(Парам01)","ЯДобавляюСтрокуПослеТекста","И я добавляю строку после текста ""ВыборкаДетальныеЗаписи.Следующий()""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуВКонецМодуля()","ЯПерехожуВКонецМодуля","И я перехожу в конец модуля");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	Контекст.Вставить("ИмяEPF",Ванесса.Объект.КаталогИнструментов + "\features\Support\Instructions\Temp\step_definitions\РаботаСТаймером.epf");
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я вызываю конструктор запроса с обработкой результата
//@ЯВызываюКонструкторЗапросаСОбработкойРезультата()
Процедура ЯВызываюКонструкторЗапросаСОбработкойРезультата() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\CallQueryConstructWithResult.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <CallQueryConstructWithResult>");
КонецПроцедуры

&НаКлиенте
//И я перехожу к закладке Таблицы и поля
//@ЯПерехожуКЗакладкеТаблицыИПоля()
Процедура ЯПерехожуКЗакладкеТаблицыИПоля() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\IGoToTablesAndFields.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <IGoToTablesAndFields>");
КонецПроцедуры

&НаКлиенте
//И я перехожу к ветке дерева "Документы"
//@ЯПерехожуКВеткеДерева(Парам01)
Процедура ЯПерехожуКВеткеДерева(Стр) Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\CtrlF.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <CtrlF>");
	
	Ванесса.Шаг("И я набираю текст '" + Стр + "'");
	
	Ванесса.Шаг("И я набираю текст ""#enter""");
	
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\CtrlPlus.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <CtrlPlus>");
КонецПроцедуры

&НаКлиенте
//И я перехожу к строке "Документ1" дерева
//@ЯПерехожуКСтрокеДерева(Парам01)
Процедура ЯПерехожуКСтрокеДерева(Стр) Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\CtrlF.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <CtrlF>");
	
	Ванесса.Шаг("И я набираю текст '" + Стр + "'");
	
	Ванесса.Шаг("И я набираю текст ""#enter""");
КонецПроцедуры

&НаКлиенте
//И я выбираю текущую строку
//@ЯВыбираюТекущуюСтроку()
Процедура ЯВыбираюТекущуюСтроку() Экспорт
	Ванесса.Шаг("И я набираю текст ""#enter""");
КонецПроцедуры

&НаКлиенте
//И я перехожу к закладке Условия
//@ЯПерехожуКЗакладкеУсловия()
Процедура ЯПерехожуКЗакладкеУсловия() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\IGoToConditions.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <IGoToConditions>");
КонецПроцедуры

&НаКлиенте
//И я перехожу к левой части условий запроса
//@ЯПерехожуКЛевойЧастиУсловийЗапроса()
Процедура ЯПерехожуКЛевойЧастиУсловийЗапроса() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\IGoToLeftSideOfConditions.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <IGoToLeftSideOfConditions>");
КонецПроцедуры

&НаКлиенте
//И я нажимаю кнопку ОК конструктора запросов
//@ЯНажимаюКнопкуОККонструктораЗапросов()
Процедура ЯНажимаюКнопкуОККонструктораЗапросов() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\IPressOkInQueryConstruct.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <IPressOkInQueryConstruct>");
КонецПроцедуры

&НаКлиенте
//И я добавляю строку после текста "ВыборкаДетальныеЗаписи.Следующий()"
//@ЯДобавляюСтрокуПослеТекста(Парам01)
Процедура ЯДобавляюСтрокуПослеТекста(Стр) Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\CtrlF.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <CtrlF>");
	
	Ванесса.Шаг("И я набираю текст '" + Стр + "'");
	
	Ванесса.Шаг("И я набираю текст ""#enter""");
	
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\PressEndEnter.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <PressEndEnter>");
	
КонецПроцедуры


&НаКлиенте
//И я перехожу в конец модуля
//@ЯПерехожуВКонецМодуля()
Процедура ЯПерехожуВКонецМодуля() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\GoToEndOfModule.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <GoToEndOfModule>");
КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//И я раскрываю ветку дерева
//@ЯРаскрываюВеткуДерева()
Процедура ЯРаскрываюВеткуДерева() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + "\tools\Sikuli\CtrlPlus.sikuli");
	Ванесса.ПроверитьРавенство(Результат, 0 , "Произошло выполнение скрипта <CtrlPlus>");
КонецПроцедуры
