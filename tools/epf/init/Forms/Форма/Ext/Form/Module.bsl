&НаКлиенте
Функция ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров, ИмяПараметра)
	Если СтруктураПараметров.Свойство(ИмяПараметра) Тогда
		Возврат СтруктураПараметров[ИмяПараметра];
	Иначе	
		Возврат Неопределено;
	КонецЕсли;	 
КонецФункции	

&НаСервере 
Функция ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams,VBParamsДвоичныеДанные)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	
	ПараметрыУФ            = Новый Структура;
	ПараметрыУФ.Вставить("VBParamsДвоичныеДанные",VBParamsДвоичныеДанные);
	
	Рез = ОбъектСервер.ПрочитатьСтруктуруИзJSONФайла(VBParams,ПараметрыУФ);
	
	Возврат Рез;
	
КонецФункции	


&НаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
		
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Функция ВыполнитьКомандуОСБезПоказаЧерногоОкна(ТекстКоманды, ЖдатьОкончания = -1) Экспорт
	
	//если ЖдатьОкончания = -1, тогда будет ожидания окончания работы приложения
	ИмяВременногоФайлаКоманды = ПолучитьИмяВременногоФайла("bat");
	// 
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайлаКоманды, КодировкаТекста.ANSI, , Ложь); 
	ЗТ.Закрыть();
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайлаКоманды, КодировкаТекста.UTF8, , Истина); 
	ЗТ.ЗаписатьСтроку("chcp 65001"); 
	ЗТ.ЗаписатьСтроку(ТекстКоманды); 
	ЗТ.Закрыть();
	
	WshShell	= Новый COMОбъект("WScript.Shell");
	Рез			= WshShell.Run("""" + ИмяВременногоФайлаКоманды + """", 0, ЖдатьОкончания);
	WshShell	= Неопределено;
	
	Возврат Рез;
	
КонецФункции	

&НаКлиенте
Функция ПреобразоватьПутьСТочкамиКНормальномуПути(ОригСтр)
	ИмяВременногоФайлаЛог     = ПолучитьИмяВременногоФайла("txt");
	
	Команда = "@echo on
				|for %%f in ( """ + ОригСтр + """ ) do set fullname=%%~ff
				|echo %fullname% > " + ИмяВременногоФайлаЛог;
				
	ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда);
	
	Рез = ОригСтр;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяВременногоФайлаЛог,"UTF-8");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если СокрЛП(Стр) = "" Тогда
			Продолжить;
		КонецЕсли;	 
		
		
		Рез = СокрЛП(Стр);
		
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат Рез;
	
КонецФункции	

&НаКлиенте
Процедура ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтруктураПараметров)
	МассивКлючей = Новый Массив;
	
	Для каждого ПараметрБилда Из СтруктураПараметров Цикл
		Если Лев(ПараметрБилда.Значение,1) = "." Тогда
			МассивКлючей.Добавить(ПараметрБилда.Ключ);
		КонецЕсли;	 
	КонецЦикла;
	
	Для каждого Ключ Из МассивКлючей Цикл
		Было  = СтруктураПараметров[Ключ];
		Стало = ПреобразоватьПутьСТочкамиКНормальномуПути(СтруктураПараметров[Ключ]);
		ТекстСообщения = "Было=%1, Стало=%2";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Было);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%2",Стало);
		Сообщить(ТекстСообщения);
		
		СтруктураПараметров.Вставить(Ключ,Стало);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПараметров(Стр)
	Результат = Новый Структура;
	
	Массив = РазложитьСтрокуВМассивПодстрок(Стр,";");
	Для каждого Элем Из Массив Цикл
		Поз = Найти(Элем,"=");
		Если Поз > 0 Тогда
			Ключ     = Лев(Элем,Поз-1);
			Значение = Сред(Элем,Поз+1);
			Попытка
				Результат.Вставить(Ключ,Значение);
			Исключение
				ТекстСообщения = "Не смог получить значение из строки запуска: %1";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Ключ);
				Сообщить(ТекстСообщения);
			КонецПопытки;
		Иначе
			Если НЕ ПустаяСтрока(Элем) Тогда 
				Попытка
					Результат.Вставить(Элем,Истина);
				Исключение
					ТекстСообщения = "Не смог получить значение из строки запуска: %1";
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",Элем);
					Сообщить(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Результат;
КонецФункции	

&НаСервереБезКонтекста
Процедура УстановитьКонстаты(Стр)
	Константы.ПутьКVanessaAutomation.Установить(Стр);
	//Константы.СлужебныйСчетчик.Установить(0);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьОкно1С()
	ЗавершитьРаботуСистемы(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтрЗапуска = СокрЛП(ПараметрЗапуска);
	
	Если СтрЗапуска = "" Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураПараметров = ПолучитьСтруктуруПараметров(СтрЗапуска);
	ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтруктураПараметров);
	
	VBParams = ПолучитьЗначениеПереданногоПараметра(СтруктураПараметров,"VBParams");
	
	
	//Предупреждение("VBParams="+VBParams);
	
	VBParamsДвоичныеДанные = Новый ДвоичныеДанные(VBParams);
	ПараметрыФайла = ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams,VBParamsДвоичныеДанные);
	ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(ПараметрыФайла);
	
	УстановитьКонстаты(ПараметрыФайла.ПутьКVanessaAutomation);
	
	//Отказ = Истина;
	ЗавершитьРаботуСистемы(Ложь);
	
	//ПодключитьОбработчикОжидания("ЗакрытьОкно1С",1,Истина);
КонецПроцедуры

