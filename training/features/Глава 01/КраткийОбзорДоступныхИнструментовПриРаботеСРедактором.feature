# language: ru



Функционал: Интерактивная справка. Краткий обзор доступных инструментов при работе с редактором

Сценарий: Краткий обзор доступных инструментов при работе с редактором

	* Привет! В этом уроке я расскажу тебе про то, какие дополнительные инструменты доступны при разработке сценария тестирования. Давай откроем второй экземпляр Ванессы в режиме обучения.
		И я открываю Vanessa Automation в режиме обучения
		И я делаю клик по элементу формы 'ЭтотСеанс' 'Запуск сценариев' 'TabItem' UI Automation
	
	* Отлично. Смотри. Дополнительные инструменты находятся тут.
		И я запоминаю ID элемента формы Vanessa Automation с именем "ГруппаVanessaEditorИнструменты" в переменную "Id_ГруппаVanessaEditorИнструменты"
		И Я делаю подсветку кнопки VA с именем "ГруппаVanessaEditorИнструменты" и переход к ней "Дополнительные инструменты"
		И я перемещаю мышь в центр экрана
	
	* Пункт меню - {ЗаголовокЭлементаVA("VanessaEditorДобавитьИзвестныйШаг")}. Он открывает новое окно в котором содержится список всех доступных в данный момент шагов для написания сценариев.
		И Я делаю подсветку элемента формы VA по имени и клик по нему "VanessaEditorДобавитьИзвестныйШаг" "Библиотека шагов"

	* Более подробную информацию о библиотеке шагов смотри в соответствующем уроке посвященном библиотеке шагов.
	
	* Пока закроем это окно и движимся дальше
		И я запоминаю элемент UI Automation в переменную "IDКнопки"
			| 'Имя'                   | 'Значение'      |
			| 'ProcessId'             | 'ЭтотСеанс'     |
			| 'LegacyIAccessibleHelp' | 'Закрыть форму' |

		И я делаю клик в поле "$IDКнопки$" UI Automation
		И пауза 1
		
	* Следующим идёт пункт {ЗаголовокЭлементаVA("VanessaEditorИсследовательФормы")}. Этот инструмент позволяет получить подробную информацию по состоянию формы клиента тестирования, о том какие есть пол^я в его формах и прочую информацию.
		И я делаю клик в поле "$Id_ГруппаVanessaEditorИнструменты$" UI Automation
		И пауза 1
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorИсследовательФормы" "Исследователь формы"
		
	* Мы подробнее поговорим о нём в соответствующем уроке.
	
	* Далее идут пункты {ЗаголовокЭлементаVA("VanessaEditorЗапомнитьСостояниеФормыTestClient")} и {ЗаголовокЭлементаVA("VanessaEditorЗабытьСостояниеФормыTestClient")}
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorЗапомнитьСостояниеФормыTestClient" "Запомнить состояние формы"
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorЗабытьСостояниеФормыTestClient" "Забыть состояние формы"

	* Эти опции используются когда нужно понять что изменилось в форме за определенный промежуток времени.
	* Об этом приёме будет рассказано в блоке про приёмы работы при написании тестов.

	* Далее идут {ЗаголовокЭлементаVA("VanessaEditorСохранитьСостояниеТекущейФормыКлиентаТестированияВФайл")} и {ЗаголовокЭлементаVA("VanessaEditorСохранитьСостояниеВсехФормКлиентаТестированияВФайл")}
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorСохранитьСостояниеТекущейФормыКлиентаТестированияВФайл" "Сохранить состояние формы"
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorСохранитьСостояниеВсехФормКлиентаТестированияВФайл" "Сохранить состояние всех форм"

	* Эти команды позволяет сохранить данные о состоянии форм клиента тестирования в файл в формате mxl.
	* Мы будем говорить об этой возможности в разделе Приёмы работы - расследование причин падения тестов.

	* Далее идёт три команды
	* {ЗаголовокЭлементаVA("VanessaEditorПолучитьИзмененияФормыGherkin")}
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorПолучитьИзмененияФормыGherkin" "Состояние всей формы в виде шагов"
	* {ЗаголовокЭлементаVA("VanessaEditorПолучитьСостояниеТекущегоЭлементаФормы")}
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorПолучитьСостояниеТекущегоЭлементаФормы" "Получить состояние текущего элемента"
	* {ЗаголовокЭлементаVA("VanessaEditorДобавитьПроверкуСообщенийПользователя")}
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorДобавитьПроверкуСообщенийПользователя" "Получить проверку сообщений пользователя"
	* Эти команды позволяют быстро получить проверочные шаги для текущей формы клиента тестирования.	
	* Об этом мы будем говорить подробнее в разделе "Как проверить состояние формы"

	* Далее идёт команда {ЗаголовокЭлементаVA("VanessaEditorПоказатьСкрытьТаблоПеременных")}
		И Я делаю подсветку элемента формы VA по имени и клик по нему "VanessaEditorПоказатьСкрытьТаблоПеременных" "Табло переменных"

	* Она управляет видимостью панели, позволяющей посмотреть текущее состояние переменных и отредактировать их, если нужно.
		И я запоминаю родителя элемента "Контекст имя" с типом "" процесса "ЭтотСеанс" в переменную "IDТаблицы" UI Automation
		И я запоминаю элемент UI Automation в переменную "IDКнопкиЗакрыть"
			| 'Имя'                   | 'Значение'                 |
			| 'ProcessId'             | 'ЭтотСеанс'                |
			| 'LegacyIAccessibleHelp' | 'Закрыть табло переменных' |

		И я делаю эффект затемнения у элементов формы UI Automation "ЭтотСеанс"
			| 'Имя/ID'            | 'Тип' |
			| '$IDТаблицы$'       | ''    |
			| '$IDКнопкиЗакрыть$' | ''    |
		
			| 'text' | 'Табло переменных' |

	* Мы поговорим об этом подробнее в разделе посвященному работе с табло переменных.
		И я запоминаю элемент UI Automation в переменную "IDКнопки"
			| 'Имя'                   | 'Значение'                 |
			| 'ProcessId'             | 'ЭтотСеанс'                |
			| 'LegacyIAccessibleHelp' | 'Закрыть табло переменных' |
		И я делаю клик по элементу "$IDКнопки$" UI Automation
		И пауза 1

	* Далее идёт команда {ЗаголовокЭлементаVA("VanessaEditorОткрытьИнструментПодготовкаИЗагрузкаДанных")}
		И я запоминаю ID элемента формы Vanessa Automation с именем "ГруппаVanessaEditorИнструменты" в переменную "Id_ГруппаVanessaEditorИнструменты"
		И я делаю клик в поле "$Id_ГруппаVanessaEditorИнструменты$" UI Automation
		И пауза 1
		И Я делаю подсветку элемента формы VA по имени и клик по нему "VanessaEditorОткрытьИнструментПодготовкаИЗагрузкаДанных" "Подготовка и загрузка данных"

	* Данный инструмент управляет созданием тестовых данных для работы сценариев.
	* Мы поговорим о нём подробнее в разделе посвященном созданию тестовых данных.
		И я запоминаю элемент UI Automation в переменную "IDКнопкиЗакрыть"
			| 'Имя'                   | 'Значение'      |
			| 'ProcessId'             | 'ЭтотСеанс'     |
			| 'LegacyIAccessibleHelp' | 'Закрыть форму' |
		И я делаю клик по элементу "$IDКнопкиЗакрыть$" UI Automation
		И пауза 1


	* Далее идет команда {ЗаголовокЭлементаVA("VanessaEditorСравнитьСДругимФичаФайлом")}
		И я запоминаю ID элемента формы Vanessa Automation с именем "ГруппаVanessaEditorИнструменты" в переменную "Id_ГруппаVanessaEditorИнструменты"
		И я делаю клик в поле "$Id_ГруппаVanessaEditorИнструменты$" UI Automation
		И пауза 1
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorСравнитьСДругимФичаФайлом" "Сравнить с другим фича файлом"
	* Она позволяет показать в редакторе сравнение текста данного фича файла с другим файлом. Это может быть полезно, когда нужно быстро посмотреть изменения относительно другого файла.


	* Далее идет команда {ЗаголовокЭлементаVA("VanessaEditorПоказатьОтчетAllure")}
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorПоказатьОтчетAllure" "Показать отчет Allure"
	* Это нужно, когда требуется посмотреть результат локального запуска тестов в виде отчета Allure.
	* Мы поговорим об этом в разделе, посвященному отчету Allure.

	* И нам осталось рассмотреть ещё одну команду - {ЗаголовокЭлементаVA("VanessaEditorОзвучитьТекущуюСтрокуРедактора")} 
		И Я делаю подсветку элемента формы VA по имени "VanessaEditorОзвучитьТекущуюСтрокуРедактора" "Озвучить текущую строку"
	* Она часто используется при создании авто документации в формате видео файлов.
	* Об этом мы поговорим в разделе посвященному созданию автоинструкций.

	
	* На этом всё, переходи к следующему уроку интерактивной справки.



