#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтборПоСостояниюАктивно = Истина;
	ОбновлениеТаблицыЗавершено = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	ОбновлениеТаблицыЗавершено = Ложь;
	АктивныеФонововые = АктивныеФонововые();
	ОбновлениеТаблицыЗавершено = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АктивныеФонововые()
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураОтбора = Новый Структура();
	
	МассивСостояний = Новый Массив;
	
	Если ОтборПоСостояниюЗавершено Тогда
		МассивСостояний.Добавить(СостояниеФоновогоЗадания.Завершено);
	КонецЕсли;	 
	
	Если ОтборПоСостояниюЗавершеноАварийно Тогда
		МассивСостояний.Добавить(СостояниеФоновогоЗадания.ЗавершеноАварийно);
	КонецЕсли;	 
	
	Если ОтборПоСостояниюОтменено Тогда
		МассивСостояний.Добавить(СостояниеФоновогоЗадания.Отменено);
	КонецЕсли;	 
	
	Если ОтборПоСостояниюАктивно Тогда
		МассивСостояний.Добавить(СостояниеФоновогоЗадания.Активно);
	КонецЕсли;	 
	
	СтруктураОтбора.Вставить("Состояние",МассивСостояний);
	
	Если ОтборИсключитьРегламентныеЗадания Тогда
		СтруктураОтбора.Вставить("РегламентноеЗадание",	Неопределено);
	КонецЕсли;	 
	
	Результат = Новый Массив;
	МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(СтруктураОтбора);
	Для Каждого ТекЗадание Из МассивФоновыхЗаданий Цикл
		Попытка
			ДанныеФоновогоЗадания = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ТекЗадание.УникальныйИдентификатор);
			Если ДанныеФоновогоЗадания = Неопределено Тогда
				ЗаписьЖурналаРегистрации("ФоновоеЗаданиеНеНайдено", УровеньЖурналаРегистрации.Ошибка,,,
					СтрШаблон("Наименование: <%1>, УникальныйИдентификатор: <%2>.", ТекЗадание.Наименование, ТекЗадание.УникальныйИдентификатор));
			Иначе
				Результат.Добавить(ТекЗадание);
			КонецЕсли;	 
		Исключение
			ЗаписьЖурналаРегистрации("ФоновоеЗаданиеНеНайдено", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	МассивФоновыхЗаданий = Результат;
	
	ТаблицаФоновыхСервер = РеквизитФормыВЗначение("ТаблицаФоновых");
	ТаблицаФоновыхСервер.Очистить();
	
	Массив = Новый Массив;
	Для Каждого ФоновоеЗадание Из МассивФоновыхЗаданий Цикл
		СтрокаТаблицаФоновыхСервер = ТаблицаФоновыхСервер.Добавить();
		СтрокаТаблицаФоновыхСервер.Наименование = ФоновоеЗадание.Наименование;
		СтрокаТаблицаФоновыхСервер.Начало = ФоновоеЗадание.Начало;
		СтрокаТаблицаФоновыхСервер.Конец = ФоновоеЗадание.Конец;
		СтрокаТаблицаФоновыхСервер.Ключ = ФоновоеЗадание.Ключ;
		СтрокаТаблицаФоновыхСервер.Состояние = ФоновоеЗадание.Состояние;
		СтрокаТаблицаФоновыхСервер.ИмяМетода = ФоновоеЗадание.ИмяМетода;
		СтрокаТаблицаФоновыхСервер.УникальныйИдентификатор = ФоновоеЗадание.УникальныйИдентификатор;
		СтрокаТаблицаФоновыхСервер.ИнформацияОбОшибке = ФоновоеЗадание.ИнформацияОбОшибке;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ТаблицаФоновыхСервер,"ТаблицаФоновых");
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции	 

#КонецОбласти