#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВывестиДанные(Команда)
	Окна = ПолучитьОкна();
	Результат = Новый Массив;
	
	Для Каждого ТекОкно Из Окна Цикл
		Если ТекОкно.Заголовок = ЗначениеЗаголовокОкна Тогда
			Если ТекОкно.Содержимое.Количество() > 0 Тогда
				ВывестиДанныеФормы(ТекОкно.Содержимое[0]);
				Прервать;
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЦикла;
	
	ВыражениеВычислено = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ВычислитьВыражение(Команда)
	
	Если Найти(ЗначениеВыражение, "_ТекущееОкно.") > 0 Тогда
		ТекстВыражения = "ЗначениеРезультат = " + СтрЗаменить(ЗначениеВыражение, "_ТекущееОкно.", "ТекОкно.Содержимое[0].");
	Иначе	
		ТекстВыражения = "ЗначениеРезультат = " + СтрЗаменить(ЗначениеВыражение, "_CurrentWindow.", "ТекОкно.Содержимое[0].");
	КонецЕсли;	 
	
	Окна = ПолучитьОкна();
	
	Для Каждого ТекОкно Из Окна Цикл
		Если ТекОкно.Заголовок = ЗначениеЗаголовокОкна Тогда
			Если ТекОкно.Содержимое.Количество() > 0 Тогда
				Выполнить(ТекстВыражения);
				Прервать;
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЦикла;
	
	ВыражениеВычислено = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыражение(Команда)
	
	Если Найти(ЗначениеВыражение, "_ТекущееОкно.") > 0 Тогда
		ТекстВыражения = СтрЗаменить(ЗначениеВыражение, "_ТекущееОкно.", "ТекОкно.Содержимое[0].");
	Иначе	
		ТекстВыражения = СтрЗаменить(ЗначениеВыражение, "_CurrentWindow.", "ТекОкно.Содержимое[0].");
	КонецЕсли;	 
	
	Окна = ПолучитьОкна();
	
	Для Каждого ТекОкно Из Окна Цикл
		Если ТекОкно.Заголовок = ЗначениеЗаголовокОкна Тогда
			Если ТекОкно.Содержимое.Количество() > 0 Тогда
				Выполнить(ТекстВыражения);
				Прервать;
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЦикла;
	
	ВыражениеВычислено = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВывестиДанныеФормы(ДанныеФормы)
	Результат = "";
	
	// Реквизиты объекта
	Попытка
		ТекИмяФормы = ДанныеФормы.ИмяФормы;
		ТипОбъекта = Неопределено;
		ВидОбъекта = Неопределено;
		ТипВидОбъектаИзИмениФормы(ТекИмяФормы, ТипОбъекта, ВидОбъекта);
		ДобавлялисьСтроки = Ложь;
		
		РеквизитыОбъекта = РеквизитыОбъекта(ТипОбъекта, ВидОбъекта);
		
		Для Каждого ТекИмяРеквизита Из РеквизитыОбъекта Цикл
			Попытка
				Значение = Строка(ДанныеФормы.Объект[ТекИмяРеквизита]);
				Результат = Результат + "Объект." + ТекИмяРеквизита + ":" + Значение + Символы.ПС;
				ДобавлялисьСтроки = Истина;
			Исключение
				//Сообщить("Ошибка: " + ТекИмяРеквизита);
			КонецПопытки;
		КонецЦикла;	
		
		Если ДобавлялисьСтроки Тогда
			Результат = Результат + Символы.ПС;
		КонецЕсли;	 
	Исключение
	КонецПопытки;
	
	
	// Реквизиты формы
	ДобавлялисьСтроки = Ложь;
	ИменаРеквизитовФормы = ИменаРеквизитовФормы();
	Для Каждого ТекИмяРеквизита Из ИменаРеквизитовФормы Цикл
		Попытка
			Значение = Строка(ДанныеФормы[ТекИмяРеквизита]);
			Результат = Результат + ТекИмяРеквизита + ":" + Значение + Символы.ПС;
			ДобавлялисьСтроки = Истина;
		Исключение
			//Сообщить("Ошибка: " + ТекИмяРеквизита);
		КонецПопытки;
	КонецЦикла;	
	
	Если ДобавлялисьСтроки Тогда
		Результат = Результат + Символы.ПС;
	КонецЕсли;	 

	Попытка
		
		Если ТипЗнч(ДанныеФормы.ТекущийЭлемент) = Тип("ТаблицаФормы") Тогда
			// Реквизиты текущего элемента таблица
			ИменаРеквизитыТаблицы = ИменаРеквизитовТаблицы();
			Для Каждого ТекИмяРеквизита Из ИменаРеквизитыТаблицы Цикл
				Попытка
					Значение = Строка(ДанныеФормы.ТекущийЭлемент[ТекИмяРеквизита]);
					Результат = Результат + "ТекущийЭлемент." + ТекИмяРеквизита + ":" + Значение + Символы.ПС;
				Исключение
					//Сообщить("Ошибка: " + ТекИмяРеквизита);
				КонецПопытки;
			КонецЦикла;	
		ИначеЕсли ТипЗнч(ДанныеФормы.ТекущийЭлемент) = Тип("ПолеФормы") Тогда
			// Реквизиты текущего элемента поле формы
			ИменаРеквизитыПолеФормы = ИменаРеквизитыПолеФормы();
			Для Каждого ТекИмяРеквизита Из ИменаРеквизитыПолеФормы Цикл
				Попытка
					Значение = Строка(ДанныеФормы.ТекущийЭлемент[ТекИмяРеквизита]);
					Результат = Результат + "ТекущийЭлемент." + ТекИмяРеквизита + ":" + Значение + Символы.ПС;
				Исключение
					//Сообщить("Ошибка: " + ТекИмяРеквизита);
				КонецПопытки;
			КонецЦикла;	
		КонецЕсли;	 
	Исключение
		
	КонецПопытки;
	
	ЗначениеРезультат = Результат;
КонецПроцедуры 

&НаКлиенте
Функция ИменаРеквизитовФормы()
	Массив = Новый Массив;
	Массив.Добавить("АвтоЗаголовок");
	Массив.Добавить("АвтоНавигационнаяСсылка");
	Массив.Добавить("АвтоматическоеСохранениеДанныхВНастройках");
	Массив.Добавить("ВертикальнаяПрокрутка");
	Массив.Добавить("ВертикальноеПоложениеПодчиненных");
	Массив.Добавить("ВертикальныйИнтервал");
	Массив.Добавить("ВладелецФормы");
	Массив.Добавить("ВыравниваниеЭлементовИЗаголовков");
	Массив.Добавить("Высота");
	Массив.Добавить("ГоризонтальноеПоложениеПодчиненных");
	Массив.Добавить("ГоризонтальныйИнтервал");
	Массив.Добавить("Группировка");
	Массив.Добавить("Доступность");
	Массив.Добавить("Заголовок");
	Массив.Добавить("ЗакрыватьПриВыборе");
	Массив.Добавить("ЗакрыватьПриЗакрытииВладельца");
	Массив.Добавить("ИмяФормы");
	Массив.Добавить("ИспользуемыйСерверФормы");
	Массив.Добавить("КлючНазначенияИспользования");
	Массив.Добавить("КлючСохраненияПоложенияОкна");
	Массив.Добавить("КлючУникальности");
	Массив.Добавить("КоманднаяПанель");
	Массив.Добавить("Команды");
	Массив.Добавить("Масштаб");
	Массив.Добавить("МодальныйРежим");
	Массив.Добавить("Модифицированность");
	Массив.Добавить("НавигационнаяСсылка");
	Массив.Добавить("Окно");
	Массив.Добавить("ОписаниеОповещенияОЗакрытии");
	Массив.Добавить("ОтображатьЗаголовок");
	Массив.Добавить("ОтображатьКнопкуЗакрытия");
	Массив.Добавить("ОтображениеОбсуждений");
	Массив.Добавить("Параметры");
	Массив.Добавить("ПоведениеКлавишиEnter");
	Массив.Добавить("ПодчиненныеЭлементы");
	Массив.Добавить("ПоложениеКоманднойПанели");
	Массив.Добавить("ПроверятьЗаполнениеАвтоматически");
	Массив.Добавить("РежимОткрытияОкна");
	Массив.Добавить("СворачиваниеЭлементовПоВажности");
	Массив.Добавить("СоставКоманднойПанелиНаМобильномУстройстве");
	Массив.Добавить("СохранениеДанныхВНастройках");
	Массив.Добавить("СохраняемыеВНастройкахДанныеМодифицированы");
	Массив.Добавить("ТекущийЭлемент");
	Массив.Добавить("ТолькоПросмотр");
	Массив.Добавить("УникальныйИдентификатор");
	Массив.Добавить("Ширина");
	Массив.Добавить("ШиринаПодчиненныхЭлементов");
	Массив.Добавить("Элементы");
	Массив.Добавить("ЭтаФорма");
	Массив.Добавить("ЭтотОбъект");
	
	Возврат Массив;
КонецФункции	 

&НаКлиенте
Функция ИменаРеквизитовТаблицы()
	
	Массив = Новый Массив;
	Массив.Добавить("АвтоВводНезаполненного");
	Массив.Добавить("АвтоВводНовойСтроки");
	Массив.Добавить("АвтоМаксимальнаяВысота");
	Массив.Добавить("АвтоМаксимальнаяВысотаВСтрокахТаблицы");
	Массив.Добавить("АвтоМаксимальнаяШирина");
	Массив.Добавить("АвтоОбновление");
	Массив.Добавить("АвтоОтметкаНезаполненного");
	Массив.Добавить("АктивизироватьПоУмолчанию");
	Массив.Добавить("ВажностьПриОтображении");
	Массив.Добавить("ВариантУправленияВысотой");
	Массив.Добавить("ВертикальнаяПолосаПрокрутки");
	Массив.Добавить("ВертикальноеПоложениеВГруппе");
	Массив.Добавить("ВертикальныеЛинии");
	Массив.Добавить("Видимость");
	Массив.Добавить("ВосстанавливатьТекущуюСтроку");
	Массив.Добавить("ВыборГруппИЭлементов");
	Массив.Добавить("Вывод");
	Массив.Добавить("ВыделенныеСтроки");
	Массив.Добавить("Высота");
	Массив.Добавить("ВысотаВСтрокахТаблицы");
	Массив.Добавить("ВысотаЗаголовка");
	Массив.Добавить("ВысотаПодвала");
	Массив.Добавить("ВысотаШапки");
	Массив.Добавить("ГоризонтальнаяПолосаПрокрутки");
	Массив.Добавить("ГоризонтальноеПоложениеВГруппе");
	Массив.Добавить("ГоризонтальныеЛинии");
	Массив.Добавить("ДополнительныеПараметрыСоздания");
	Массив.Добавить("Доступность");
	Массив.Добавить("Заголовок");
	Массив.Добавить("ЗапросОбновления");
	Массив.Добавить("ИзменятьПорядокСтрок");
	Массив.Добавить("ИзменятьСоставСтрок");
	Массив.Добавить("Имя");
	Массив.Добавить("ИспользованиеТекущейСтроки");
	Массив.Добавить("КартинкаСтрок");
	Массив.Добавить("КлючТекущихПользовательскихНастроек");
	Массив.Добавить("КоманднаяПанель");
	Массив.Добавить("КонтекстноеМеню");
	Массив.Добавить("МаксимальнаяВысота");
	Массив.Добавить("МаксимальнаяВысотаВСтрокахТаблицы");
	Массив.Добавить("МаксимальнаяШирина");
	Массив.Добавить("МножественныйВыбор");
	Массив.Добавить("НачальноеОтображениеДерева");
	Массив.Добавить("НачальноеОтображениеСписка");
	Массив.Добавить("ОбновлениеПриИзмененииДанных");
	Массив.Добавить("ОтметкаНезаполненного");
	Массив.Добавить("ОтображатьКорень");
	Массив.Добавить("Отображение");
	Массив.Добавить("ОтображениеПодсказки");
	Массив.Добавить("ОтображениеСостоянияПросмотра");
	Массив.Добавить("ОтображениеСтрокиПоиска");
	Массив.Добавить("Период");
	Массив.Добавить("ПериодАвтоОбновления");
	Массив.Добавить("ПоведениеПриНедоступностиОсновногоСервера");
	Массив.Добавить("ПоведениеПриСжатииПоГоризонтали");
	Массив.Добавить("Подвал");
	Массив.Добавить("Подсказка");
	Массив.Добавить("ПодчиненныеЭлементы");
	Массив.Добавить("ПоискПриВводе");
	Массив.Добавить("ПоложениеЗаголовка");
	Массив.Добавить("ПоложениеКоманднойПанели");
	Массив.Добавить("ПоложениеСостоянияПросмотра");
	Массив.Добавить("ПоложениеСтрокиПоиска");
	Массив.Добавить("ПоложениеУправленияПоиском");
	Массив.Добавить("ПропускатьПриВводе");
	Массив.Добавить("ПутьКДанным");
	Массив.Добавить("ПутьКДаннымКартинкиСтроки");
	Массив.Добавить("РазрешитьВыборКорня");
	Массив.Добавить("РазрешитьНачалоПеретаскивания");
	Массив.Добавить("РазрешитьПеретаскивание");
	Массив.Добавить("РастягиватьПоВертикали");
	Массив.Добавить("РастягиватьПоГоризонтали");
	Массив.Добавить("РасширеннаяПодсказка");
	Массив.Добавить("РежимВводаСтрок");
	Массив.Добавить("РежимВыбора");
	Массив.Добавить("РежимВыделения");
	Массив.Добавить("РежимВыделенияСтроки");
	Массив.Добавить("Родитель");
	Массив.Добавить("РодительВерхнегоУровня");
	Массив.Добавить("СочетаниеКлавиш");
	Массив.Добавить("СпособПеретаскиванияФайлов");
	Массив.Добавить("ТекущаяСтрока");
	Массив.Добавить("ТекущиеДанные");
	Массив.Добавить("ТекущийРодитель");
	Массив.Добавить("ТекущийЭлемент");
	Массив.Добавить("ТолькоПросмотр");
	Массив.Добавить("УправлениеПоиском");
	Массив.Добавить("ФиксацияСлева");
	Массив.Добавить("ФиксацияСправа");
	Массив.Добавить("ЦветРамки");
	Массив.Добавить("ЦветТекста");
	Массив.Добавить("ЦветТекстаЗаголовка");
	Массив.Добавить("ЦветФона");
	Массив.Добавить("ЧередованиеЦветовСтрок");
	Массив.Добавить("Шапка");
	Массив.Добавить("Ширина");
	Массив.Добавить("Шрифт");
	Массив.Добавить("ШрифтЗаголовка");
	Возврат Массив;
	
КонецФункции	 

&НаКлиенте
Функция ИменаРеквизитыПолеФормы()
	
	Массив = Новый Массив;
	Массив.Добавить("АвтоВыборНезаполненного");
	Массив.Добавить("АвтоВысотаЯчейки");
	Массив.Добавить("АвтоИзменениеРегистраПриВводеТекста");
	Массив.Добавить("АвтоИсправлениеПриВводеТекста");
	Массив.Добавить("АвтоМаксимальнаяВысота");
	Массив.Добавить("АвтоМаксимальнаяШирина");
	Массив.Добавить("АвтоОтметкаНезаполненного");
	Массив.Добавить("АвтоОтображениеКнопкиОткрытия");
	Массив.Добавить("АвтоОтображениеКнопкиОчистки");
	Массив.Добавить("АвтоПереносСтрок");
	Массив.Добавить("АктивизироватьПоУмолчанию");
	Массив.Добавить("БыстрыйВыбор");
	Массив.Добавить("ВажностьПриОтображении");
	Массив.Добавить("ВариантУправленияВысотой");
	Массив.Добавить("ВертикальноеПоложение");
	Массив.Добавить("ВертикальноеПоложениеВГруппе");
	Массив.Добавить("Вид");
	Массив.Добавить("Видимость");
	Массив.Добавить("ВыбиратьТип");
	Массив.Добавить("ВыборГруппИЭлементов");
	Массив.Добавить("ВыделенныйТекст");
	Массив.Добавить("ВыделятьОтрицательные");
	Массив.Добавить("Высота");
	Массив.Добавить("ВысотаЗаголовка");
	Массив.Добавить("ВысотаСпискаВыбора");
	Массив.Добавить("ГиперссылкаЯчейки");
	Массив.Добавить("ГоризонтальноеПоложение");
	Массив.Добавить("ГоризонтальноеПоложениеВГруппе");
	Массив.Добавить("ГоризонтальноеПоложениеВПодвале");
	Массив.Добавить("ГоризонтальноеПоложениеВШапке");
	Массив.Добавить("Доступность");
	Массив.Добавить("ДоступныеТипы");
	Массив.Добавить("Заголовок");
	Массив.Добавить("Имя");
	Массив.Добавить("ИсторияВыбораПриВводе");
	Массив.Добавить("КартинкаКнопкиВыбора");
	Массив.Добавить("КартинкаПодвала");
	Массив.Добавить("КартинкаШапки");
	Массив.Добавить("КнопкаВыбора");
	Массив.Добавить("КнопкаВыпадающегоСписка");
	Массив.Добавить("КнопкаОткрытия");
	Массив.Добавить("КнопкаОчистки");
	Массив.Добавить("КнопкаРегулирования");
	Массив.Добавить("КнопкаСоздания");
	Массив.Добавить("КнопкаСпискаВыбора");
	Массив.Добавить("КонтекстноеМеню");
	Массив.Добавить("МаксимальнаяВысота");
	Массив.Добавить("МаксимальнаяШирина");
	Массив.Добавить("МаксимальноеЗначение");
	Массив.Добавить("Маска");
	Массив.Добавить("МинимальноеЗначение");
	Массив.Добавить("МногострочныйРежим");
	Массив.Добавить("ОбновлениеТекстаРедактирования");
	Массив.Добавить("ОграничениеТипа");
	Массив.Добавить("ОтметкаНезаполненного");
	Массив.Добавить("ОтображатьВПодвале");
	Массив.Добавить("ОтображатьВШапке");
	Массив.Добавить("ОтображениеКнопкиВыбора");
	Массив.Добавить("ОтображениеПодсказки");
	Массив.Добавить("ОтображениеПредупрежденияПриРедактировании");
	Массив.Добавить("ПараметрыВыбора");
	Массив.Добавить("ПоведениеПриНедоступностиОсновногоСервера");
	Массив.Добавить("Подсказка");
	Массив.Добавить("ПодсказкаВвода");
	Массив.Добавить("ПоложениеЗаголовка");
	Массив.Добавить("ПредупреждениеПриРедактировании");
	Массив.Добавить("ПроверкаПравописанияПриВводеТекста");
	Массив.Добавить("ПропускатьПриВводе");
	Массив.Добавить("ПутьКДанным");
	Массив.Добавить("ПутьКДаннымПодвала");
	Массив.Добавить("РазрешитьСоставнойТип");
	Массив.Добавить("РастягиватьПоВертикали");
	Массив.Добавить("РастягиватьПоГоризонтали");
	Массив.Добавить("РасширеннаяПодсказка");
	Массив.Добавить("РасширенноеРедактирование");
	Массив.Добавить("РедактированиеТекста");
	Массив.Добавить("РежимВыбораИзСписка");
	Массив.Добавить("РежимВыбораНезаполненного");
	Массив.Добавить("РежимПароля");
	Массив.Добавить("РежимРедактирования");
	Массив.Добавить("Родитель");
	Массив.Добавить("СвязиПараметровВыбора");
	Массив.Добавить("СвязьПоТипу");
	Массив.Добавить("СочетаниеКлавиш");
	Массив.Добавить("СпециальныйРежимВводаТекста");
	Массив.Добавить("СписокВыбора");
	Массив.Добавить("ТекстКнопкиВводаЭкраннойКлавиатуры");
	Массив.Добавить("ТекстПодвала");
	Массив.Добавить("ТекстРедактирования");
	Массив.Добавить("ТолькоПросмотр");
	Массив.Добавить("ФиксацияВТаблице");
	Массив.Добавить("ФормаВыбора");
	Массив.Добавить("Формат");
	Массив.Добавить("ФорматРедактирования");
	Массив.Добавить("ЦветРамки");
	Массив.Добавить("ЦветТекста");
	Массив.Добавить("ЦветТекстаЗаголовка");
	Массив.Добавить("ЦветТекстаПодвала");
	Массив.Добавить("ЦветФона");
	Массив.Добавить("ЦветФонаЗаголовка");
	Массив.Добавить("ЦветФонаПодвала");
	Массив.Добавить("Ширина");
	Массив.Добавить("ШиринаВыпадающегоСписка");
	Массив.Добавить("Шрифт");
	Массив.Добавить("ШрифтЗаголовка");
	Массив.Добавить("ШрифтПодвала");
	Возврат Массив;
	
КонецФункции	 

&НаКлиенте
Функция ТипВидОбъектаИзИмениФормы(Знач ТекИмяФормы, ТипОбъекта, ВидОбъекта)
	Поз = Найти(ТекИмяФормы, ".");
	Если Поз > 0 Тогда
		ТипОбъекта = Лев(ТекИмяФормы, Поз - 1);
		ТекИмяФормы = Сред(ТекИмяФормы, Поз + 1);
		
		Поз = Найти(ТекИмяФормы, ".");
		Если Поз > 0 Тогда
			ВидОбъекта = Лев(ТекИмяФормы, Поз - 1);
		КонецЕсли;	 
	КонецЕсли;	 
КонецФункции	 

&НаСервереБезКонтекста
Процедура РеквизитыИзМетаданных(Массив, ТипОбъекта, ВидОбъекта)
	
	Если ТипОбъекта = "Справочник" Тогда
		ВеткаМетаданных = Метаданные.Справочники[ВидОбъекта];
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		ВеткаМетаданных = Метаданные.Документы[ВидОбъекта];
	КонецЕсли;
	
	Для Каждого ТекРеквизит Из ВеткаМетаданных.Реквизиты Цикл
		Массив.Добавить(ТекРеквизит.Имя);
	КонецЦикла;	 
КонецПроцедуры 

&НаКлиенте
Функция РеквизитыОбъекта(ТипОбъекта, ВидОбъекта)
	Массив = Новый Массив;
	
	Если ТипОбъекта = "Справочник" Тогда
		Массив.Добавить("Код");
		Массив.Добавить("Наименование");
		Массив.Добавить("ЭтоГруппа");
		Массив.Добавить("Родитель");
		Массив.Добавить("Владелец");
		Массив.Добавить("ПометкаУдаления");
		
		Если НЕ ПустаяСтрока(ВидОбъекта) Тогда
			РеквизитыИзМетаданных(Массив, ТипОбъекта, ВидОбъекта);
		КонецЕсли;	 
		
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		Массив.Добавить("Дата");
		Массив.Добавить("Номер");
		Массив.Добавить("Проведен");
		Массив.Добавить("ПометкаУдаления");
		
		Если НЕ ПустаяСтрока(ВидОбъекта) Тогда
			РеквизитыИзМетаданных(Массив, ТипОбъекта, ВидОбъекта);
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	Возврат Массив;
	
КонецФункции	 

#КонецОбласти