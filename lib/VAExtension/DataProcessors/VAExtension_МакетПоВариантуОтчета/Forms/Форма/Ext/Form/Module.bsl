#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	ОбработкаВыполнена = Ложь;
	ТекстИсключения = "";
	ЗначениеРезультат = "";
	
	Попытка
		ЗначениеРезультат = ПолучитьМакетСервер();
	Исключение
		ТекстИсключения = ОписаниеОшибки();
	КонецПопытки;
	
	ОбработкаВыполнена = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьМакетСервер()
	
	ЭтоАнглийскийКод = Ложь;
	
	Отчет = Отчеты[ИмяОтчета].Создать();
	ИмяОтчетаМетаданные = Метаданные.Отчеты[Отчет.Метаданные().Имя].ПолноеИмя();
	
	ИдентификаторОбъектовМетаданных = ИдентификаторОбъектовМетаданных(ИмяОтчетаМетаданные);
	Если ИдентификаторОбъектовМетаданных = Неопределено Тогда
		ВызватьИсключение " Не найден ИдентификаторОбъектовМетаданных";
	КонецЕсли;
	
	ТекВариантыОтчетов = ВариантыОтчетовИзСправочника(ИдентификаторОбъектовМетаданных, ПредставлениеВариантаОтчета);
	Если ТекВариантыОтчетов.Количество() = 0 Тогда
		ТекстСообщения = "Не найден вариант отчета <%1>";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ПредставлениеВариантаОтчета);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ТекВариантыОтчетов.Количество() > 1 Тогда
		ТекстСообщения = "Найдено <%1> вариантов отчета по строке <%2>.";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ТекВариантыОтчетов.Количество());
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", ПредставлениеВариантаОтчета);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	ТекВариантОтчета = ТекВариантыОтчетов[0];
	
	КлючВарианта = ТекВариантОтчета.КлючВарианта;
	
	Попытка
		Отчет.ИнициализироватьОтчет(КлючВарианта);
	Исключение
	КонецПопытки;
	
	СхемаКомпоновкиДанных = Отчет.СхемаКомпоновкиДанных;
	КомпоновщикНастроек   = Отчет.КомпоновщикНастроек;
	
	//Получение и загрузка настроек варианта отчета
	Если ТекВариантОтчета.ХешНастроек <> "" Тогда
		
		ПользовательскиеНастройки = ТекВариантОтчета.Настройки.Получить();
		КомпоновщикНастроек.ЗагрузитьНастройки(ПользовательскиеНастройки);
		
	Иначе
		
		НастройкиВарианта = НайтиНастройкиВарианта(СхемаКомпоновкиДанных, КлючВарианта);
		Если НастройкиВарианта = Неопределено Тогда
			
			ВызватьИсключение "Не найдены НастройкиВарианта";
			
		КонецЕсли;
		
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиВарианта);
		
	КонецЕсли;
	
	Фильтр = Новый Структура;
	Если Не ЭтоАнглийскийКод Тогда
		Фильтр.Вставить("КлючОбъекта",  ИмяОтчетаМетаданные + "/" + КлючВарианта);
		Фильтр.Вставить("Пользователь", ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	Иначе
		Фильтр.Вставить("ObjectKey",  ИмяОтчетаМетаданные + "/" + КлючВарианта);
		Фильтр.Вставить("User", InfoBaseUsers.CurrentUser().Name);
	КонецЕсли;
	
	ВыборкаНастроек = ХранилищеПользовательскихНастроекОтчетов.Выбрать(Фильтр);
	Если ВыборкаНастроек.Следующий() Тогда
		ПользовательскиеНастройки = ВыборкаНастроек.Настройки;
		КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(ПользовательскиеНастройки);
	Иначе
		
		КлючОбъекта = НСтр("ru = 'Отчет'; en = 'Report'") + "." + ИмяОтчетаМетаданные + "/" + КлючВарианта + "/ТекущиеПользовательскиеНастройки";
		ВыборкаТекущихНастроек = ХранилищеСистемныхНастроек.Выбрать(Новый Структура("КлючОбъекта", КлючОбъекта));
		Если ВыборкаТекущихНастроек.Следующий() Тогда
			ПользовательскиеНастройки = ВыборкаТекущихНастроек.Настройки;
			КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(ПользовательскиеНастройки);
		КонецЕсли;
		
	КонецЕсли;
	
	ДопСвойства = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
	ДопСвойства.Вставить("КлючВарианта", КлючВарианта);
	ДопСвойства.Вставить("VariantKey", КлючВарианта);
	
	Если ИмяОтчета = "УниверсальныйОтчет" Тогда
		
		ДоступныеЗначения = Неопределено;
		Попытка
			ФиксированныеПараметры = Отчеты.УниверсальныйОтчет.ФиксированныеПараметры(
										КомпоновщикНастроек.Настройки,
										КомпоновщикНастроек.ПользовательскиеНастройки,
										ДоступныеЗначения,
										Неопределено);
		Исключение
			ФиксированныеПараметры = Отчеты.УниверсальныйОтчет.ФиксированныеПараметры(
										КомпоновщикНастроек.Настройки,
										КомпоновщикНастроек.ПользовательскиеНастройки,
										ДоступныеЗначения);
		КонецПопытки;
									
		Отчет.СхемаКомпоновкиДанных = Отчеты.УниверсальныйОтчет.СхемаКомпоновкиДанных(ФиксированныеПараметры);
	
	ИначеЕсли ИмяОтчета = "ДвиженияДокумента" Тогда
		
		Результат = Новый Структура("СсылкаВарианта, СсылкаОтчета, КлючВарианта, НастройкиФормы,
			|Объект, Метаданные, ПолноеИмя,
			|СхемаКД, АдресСхемы, СхемаМодифицирована, НастройкиКД, ПользовательскиеНастройкиКД,
			|ТекстОшибки, Успех");
		
		Отчет.ПередЗагрузкойНастроекВКомпоновщик(
			Результат,
			"",
			Неопределено,
			Неопределено,
			Неопределено);
		
	КонецЕсли;
	
	ИнформацияРасшифровки = Неопределено;
	МакетДляВывода = Новый ТабличныйДокумент;
	Отчет.СкомпоноватьРезультат(МакетДляВывода, ИнформацияРасшифровки);
	
	ПотокФайла = Новый ПотокВПамяти();
	МакетДляВывода.Записать(ПотокФайла);
	ДвоичныеДанные = ПотокФайла.ЗакрытьИПолучитьДвоичныеДанные(); 

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, ДвоичныеДанные);
	
	Возврат ЗаписьXML.Закрыть();	
	
КонецФункции

&НаСервере
Функция ИдентификаторОбъектовМетаданных(ТекИмяОтчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИдентификаторыОбъектовМетаданных.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
		|ГДЕ
		|	ИдентификаторыОбъектовМетаданных.ПолноеИмя = &ПолноеИмя
		|	И НЕ ИдентификаторыОбъектовМетаданных.ПометкаУдаления";

	Запрос.УстановитьПараметр("ПолноеИмя", ТекИмяОтчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ИдентификаторОбъектовМетаданных	= Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ИдентификаторОбъектовМетаданных = ВыборкаДетальныеЗаписи.Ссылка;
		Прервать;
	КонецЦикла;
	
	Возврат ИдентификаторОбъектовМетаданных;
	
КонецФункции

&НаСервере
Функция ВариантыОтчетовИзСправочника(ИдентификаторОбъектовМетаданных, НужноеИмяВарианта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыОтчетов.Ссылка КАК Ссылка,
		|	ВариантыОтчетов.Наименование КАК Наименование,
		|	ВариантыОтчетов.КлючВарианта КАК КлючВарианта,
		|	ВариантыОтчетов.ХешНастроек КАК ХешНастроек,
		|	ВариантыОтчетов.Настройки КАК Настройки
		|ИЗ
		|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
		|ГДЕ
		|	ВариантыОтчетов.Отчет = &Отчет
		|	И ВариантыОтчетов.КлючВарианта <> """"
		|	И НЕ ВариантыОтчетов.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Отчет", ИдентификаторОбъектовМетаданных);
	Тзн = Запрос.Выполнить().Выгрузить();
	КопияТзн = Тзн.Скопировать();
	КопияТзн.Очистить();
	
	Для Каждого ТекВариант Из Тзн Цикл
	
		Если Найти(НРег(ТекВариант.КлючВарианта), "контекст") > 0
			ИЛИ Найти(НРег(ТекВариант.КлючВарианта), "неиспользовать") > 0
			Тогда
				Продолжить;
		КонецЕсли;
			
		Если ЗначениеЗаполнено(НужноеИмяВарианта) Тогда
			Если НРег(НужноеИмяВарианта) <> НРег(ТекВариант.Наименование) Тогда
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	
			
		СтрокаКопияТзн = КопияТзн.Добавить();	
		ЗаполнитьЗначенияСвойств(СтрокаКопияТзн, ТекВариант)
			
	КонецЦикла;	
	
	Возврат КопияТзн;
	
КонецФункции

&НаСервере
Функция НайтиНастройкиВарианта(СхемаКомпоновкиДанных,ИмяВарианта)
	
	НастройкиВарианта = Неопределено;
	Для Каждого Вариант Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
		Если Вариант.Имя = ИмяВарианта Тогда
			НастройкиВарианта = Вариант.Настройки;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НастройкиВарианта;
	
КонецФункции

&НаСервере
Функция ПрочитатьОбъектJSON(ДанныеJSON, ПрочитатьВСоответствие = Ложь)
	
	ЧтениеJSON = New ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ДанныеJSON);
	Значение = ПрочитатьJSON(ЧтениеJSON, ПрочитатьВСоответствие);
	ЧтениеJSON.Закрыть();
	Возврат Значение;
	
КонецФункции	 

#КонецОбласти