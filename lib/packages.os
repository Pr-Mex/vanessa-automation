Перем Лог;
Перем ТекущийКаталог;

Процедура Информация(Текст)
	Сообщить("ИНФОРМАЦИЯ - " + Текст);
КонецПроцедуры

Процедура Ошибка(Текст)
	Сообщить("ОШИБКА - " + Текст);
КонецПроцедуры

Функция ЗагрузитьФайл(Гиперссылка)

	Информация("Скачивание файла: " + Гиперссылка);

	Поз = СтрНайти(Гиперссылка, "://");
	Поз = СтрНайти(Гиперссылка, "/", НаправлениеПоиска.СНачала, Поз + 3);
	ИмяСервера = Лев(Гиперссылка, Поз);
	АдресРесурса = Сред(Гиперссылка, Поз);
	
	HTTPЗапрос = Новый HTTPЗапрос(Гиперссылка);
	HTTPСоединение = Новый HTTPСоединение(ИмяСервера);
	Возврат HTTPСоединение.Получить(HTTPЗапрос);

КонецФункции	

Функция СкачатьФайлРелиза(Пакет, Данные)
	
 	Гиперссылка = Данные["browser_download_url"];
	HTTPОтвет = ЗагрузитьФайл(Гиперссылка);
	Если HTTPОтвет.КодСостояния = 200 Тогда
		ДвоичныеДанные = HTTPОтвет.ПолучитьТелоКакДвоичныеДанные();
		ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA256);
		ХешированиеДанных.Добавить(ДвоичныеДанные);
		ХешСумма = ХешированиеДанных.ХешСуммаСтрокой;
		Информация("Хеш сумма: " + ХешСумма);
		Пакет.Вставить("url", Гиперссылка);
		Пакет.Вставить("hash", ХешСумма);
		Возврат Истина;
	Иначе
		Ошибка("Ошибка HTTP: " + HTTPОтвет.КодСостояния);
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Процедура ПолучитьРелизБиблиотеки(Пакет)
	
	ИмяСервера = "https://api.github.com";
	АдресРесурса = "/repos/" + Пакет.owner + "/" + Пакет.repo + "/releases/latest";
	Информация("Получение данных: " + ИмяСервера + АдресРесурса);
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("User-Agent", "OpenScript");
	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса);
	HTTPЗапрос.Заголовки = Заголовки;
	HTTPСоединение = Новый HTTPСоединение(ИмяСервера);
	HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
	Если HTTPОтвет.КодСостояния = 200 Тогда
		ТекстJSON = HTTPОтвет.ПолучитьТелоКакСтроку();
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТекстJSON);
		СоставРелиза = ПрочитатьJSON(ЧтениеJSON, Истина);
		Для каждого Элемент Из СоставРелиза["assets"] Цикл
			Если Элемент["name"] = Пакет.name Тогда
				Если СкачатьФайлРелиза(Пакет, Элемент) Тогда
					Пакет.Вставить("version", СоставРелиза["name"]);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Сообщить(АдресРесурса);
		Сообщить(HTTPОтвет.ПолучитьТелоКакСтроку());
	КонецЕсли;
	
КонецПроцедуры

Функция НеобходимоЗагрузить(Пакет)

	ИмяФайла = ТекущийКаталог + Пакет.path;
	Файл = Новый Файл(ИмяФайла);
	Если Пакет.Свойство("hash") И Файл.Существует() Тогда
		ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA256);
		ХешированиеДанных.Добавить(Новый ДвоичныеДанные(ИмяФайла));
		ХешСумма = ХешированиеДанных.ХешСуммаСтрокой;
		Возврат ХешСумма <> Пакет.hash;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции	

Процедура ПолучитьОбновления()
	
	ИмяФайла = ТекущийКаталог + "packages.json";
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.ОткрытьФайл(ИмяФайла);
	ВнешниеБиблиотеки = ПрочитатьJSON(ЧтениеJSON);
	Для каждого Пакет Из ВнешниеБиблиотеки Цикл
		ПолучитьРелизБиблиотеки(Пакет);
	КонецЦикла;

	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(
		ПереносСтрокJSON.Windows, Символы.Таб, Истина, ЭкранированиеСимволовJSON.Нет
	);
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ОткрытьФайл(ИмяФайла);
	ЗаписатьJSON(ЗаписьJSON, ВнешниеБиблиотеки);
	ЗаписьJSON.Закрыть();
	
КонецПроцедуры

Процедура ЗагрузитьПакеты()
	
	ИмяФайла = ТекущийКаталог + "packages.json";
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.ОткрытьФайл(ИмяФайла);
	ВнешниеБиблиотеки = ПрочитатьJSON(ЧтениеJSON);
	Для каждого Пакет Из ВнешниеБиблиотеки Цикл
		Если НеобходимоЗагрузить(Пакет) Тогда
			HTTPОтвет = ЗагрузитьФайл(Пакет.url);
			Если HTTPОтвет.КодСостояния = 200 Тогда
				ДвоичныеДанные = HTTPОтвет.ПолучитьТелоКакДвоичныеДанные();
				ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA256);
				ХешированиеДанных.Добавить(ДвоичныеДанные);
				Если ХешированиеДанных.ХешСуммаСтрокой = Пакет.hash Тогда
					ПолноеИмяФайла = ТекущийКаталог + Пакет.path;
					Информация("Сохранение файла: " + ПолноеИмяФайла);
					Файл = Новый Файл(ПолноеИмяФайла);
					СоздатьКаталог(Файл.Путь);
					ДвоичныеДанные.Записать(ПолноеИмяФайла);
				Иначе
					Ошибка("Хеш-сумма файла не совпадает с эталоном");
				КонецЕсли;
			Иначе
				Ошибка("Ошибка HTTP: " + HTTPОтвет.КодСостояния);
			КонецЕсли;
		Иначе
			Информация("Загрузка не требуется: " + Пакет.name + " версия " + Пакет.version);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

ТекущийКаталог = ТекущийСценарий().Каталог + "/";
ТекстПомощи = "Передайте параметр скрипта: ""download"" или ""upgrade""";
Если АргументыКоманднойСтроки.Количество() = 0 Тогда
	Ошибка("Не переданы параметры!");
	Ошибка(ТекстПомощи);
ИначеЕсли АргументыКоманднойСтроки.Количество() > 1 Тогда
	Ошибка("Скрипт принимает только один параметр!");
	Ошибка(ТекстПомощи);
ИначеЕсли АргументыКоманднойСтроки[0] = "upgrade" Тогда
	ПолучитьОбновления();
ИначеЕсли АргументыКоманднойСтроки[0] = "download" Тогда
	ЗагрузитьПакеты();
Иначе
	Ошибка("Неизвестный параметр: " + АргументыКоманднойСтроки[0]);
	Ошибка(ТекстПомощи);
КонецЕсли;