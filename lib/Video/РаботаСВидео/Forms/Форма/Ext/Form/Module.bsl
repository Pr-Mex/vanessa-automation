&НаКлиенте
Перем ИмяФайлаВидеоТекущегоШага;

&НаКлиенте
Перем ВерсияСкриптаСборкиВидео;

&НаКлиенте
Перем Ванесса;

&НаКлиенте
Перем РазделительСтроки;



&НаКлиенте
Процедура УстановитьСлужебныеПеременные(СтруктураПараметров) Экспорт
	Ванесса = СтруктураПараметров.Ванесса;
КонецПроцедуры 

&НаКлиенте
Процедура  ЗаменитьПутиКФайламНаИмяФайла(ПараметрыВидео, Текст)
	Массив = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(Текст," ");
	НовыйМассив = Новый Массив;
	Для Каждого Стр Из Массив Цикл
		МассивСлешей = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(Стр, "\");
		Если МассивСлешей.Количество() > 2 Тогда // длинный путь к файлу
			Если Найти(МассивСлешей[МассивСлешей.Количество() - 1], ".") > 0 Тогда // есть точка в имени файла, т.е. есть расширение
				Стр = МассивСлешей[МассивСлешей.Количество() - 1];
				
  			Если Прав(Стр, 1) = """" 
					И Лев(Стр, 1) <> """" Тогда
						Стр = """" + Стр; // т.к. могло получиться так что мы потеряли кавычку
				КонецЕсли;	 
				
				Если Прав(Стр, 1) = "'" 
					И Лев(Стр, 1) <> "'" Тогда
						Стр = "'" + Стр; // т.к. могло получиться так что мы потеряли апостроф
				КонецЕсли;	 
				НовыйМассив.Добавить(Стр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		НовыйМассив.Добавить(Стр);
	КонецЦикла;
	
	Текст = "";
	Ном = 0;
	Для Каждого Стр Из НовыйМассив Цикл
		Ном = Ном + 1;
		Текст = Текст + Стр;
		Если Ном < НовыйМассив.Количество() Тогда
			Текст = Текст + " ";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(ПараметрыВидео, Команда)
	Если ПараметрыВидео.ЗаписьВидеоСкрытьСлужебныеОкна Тогда
		Ванесса.ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда);
	Иначе
		КомандаСистемы(Команда);
	КонецЕсли;	 
КонецПроцедуры 

&НаКлиенте
Функция СоздатьКартинкуИзТекста(ПараметрыВидео, Знач Текст, ТипВыводаТекста, pointsize)
	
	УбратьЛишниеСимволыИзТекста(Текст);
	ЗаменитьПутиКФайламНаИмяФайла(ПараметрыВидео, Текст);
	
	КартинкаТекст     = ПолучитьИмявременногоФайла("png");
	ФайлКартинкаТекст = Новый Файл(КартинкаТекст);
	КартинкаТекст     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлКартинкаТекст.Имя;
	
	ЛогФайл       = ПолучитьИмяВременногоФайла("txt");
	
	Команда = """" + ПараметрыВидео.ЗаписьВидеоКомандаConvert + """ -gravity Center  -background black  -fill white   -pointsize " 
		+ pointsize + " -size <screenwidth>x<screenheight>   " + ТипВыводаТекста + ":""<Text>"" " + КартинкаТекст;
	Команда = СтрЗаменить(Команда, "<screenwidth>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранШирина,"ND=10; NG=0"));
	Команда = СтрЗаменить(Команда, "<screenheight>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранВысота,"ND=10; NG=0"));
	Команда = СтрЗаменить(Команда, "<Text>", СтрЗаменить(Текст, """", "\"""));
	
	Команда = СтрЗаменить(Команда, Символы.НПП, "");
	
	Ванесса.Отладка("СоздатьКартинкуИзТекста");
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
	ЗТ.ЗаписатьСтроку("CHCP 65001"); 
	ЗТ.ЗаписатьСтроку("" + Команда); 
	ЗТ.Закрыть();

	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
	
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяВременногоФайла);
	
	
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(КартинкаТекст) Тогда
		ТекстСообщения = Ванесса.Локализовать("Команда по созданию картинки из текста не выполнена: %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Символы.ПС + СокрЛП(СтрЗаменить(Текст, "\n", Символы.ПС)));
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;	 
	
	
	Возврат КартинкаТекст;
КонецФункции	

&НаКлиенте
Функция СоздатьВидеоНужнойДлительностиИзКартинки(ПараметрыВидео, КартинкаТекст, ДлительностьВидео, ДелатьFadeIn = Истина, ДелатьFadeOut = Истина)
	КартинкаВидео     = ПолучитьИмявременногоФайла("mpg");
	ФайлКартинкаВидео = Новый Файл(КартинкаВидео);
	КартинкаВидео     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлКартинкаВидео.Имя;
	
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -loop 1 -i """ + КартинкаТекст + """ -qscale 1 -r 29.97 -t " 
		+ ДлительностьВидео + " -y -f mpegts """ + КартинкаВидео + """";
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	ВыполнитьКоманду(ПараметрыВидео, Команда);
	
	
	
	Если ДелатьFadeIn Тогда
		КартинкаВидеоПереход1     = ПолучитьИмявременногоФайла("mpg");
		ФайлКартинкаВидеоПереход1 = Новый Файл(КартинкаВидеоПереход1);
		КартинкаВидеоПереход1     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлКартинкаВидеоПереход1.Имя;
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + КартинкаВидео + " -y -qscale 1 -vf fade=in:0:30 " + КартинкаВидеоПереход1;
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		ВыполнитьКоманду(ПараметрыВидео, Команда);
	Иначе	
		КартинкаВидеоПереход1 = КартинкаВидео;
	КонецЕсли;	 
	
	Если ДелатьFadeOut Тогда
		КартинкаВидеоПереход2     = ПолучитьИмявременногоФайла("mpg");
		ФайлКартинкаВидеоПереход2 = Новый Файл(КартинкаВидеоПереход2);
		КартинкаВидеоПереход2     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлКартинкаВидеоПереход2.Имя;
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + КартинкаВидеоПереход1 
			+ " -y -qscale 1 -vf fade=out:"	+ ((ДлительностьВидео - 1) * 30) +":30 " + КартинкаВидеоПереход2;
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		ВыполнитьКоманду(ПараметрыВидео, Команда);
		Ванесса.УдалитьФайлыКомандаСистемы(КартинкаВидеоПереход1);
	Иначе	
		КартинкаВидеоПереход2 = КартинкаВидеоПереход1;
	КонецЕсли;	 
	
	Ванесса.УдалитьФайлыКомандаСистемы(КартинкаВидео);
	
	
	Возврат КартинкаВидеоПереход2;
КонецФункции	

&НаКлиенте
Функция ОпределитьДлительностьФайла(ПараметрыВидео, ИмяИсходногоФайла)
	ИмяВременногоФайлаЛог = ПолучитьИмяВременногоФайла("txt");
	Команда = """" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + """ -i """ + ИмяИсходногоФайла + """ > """ + ИмяВременногоФайлаЛог + """ 2>&1";
	
	КомандаСистемыЧерезBat(ПараметрыВидео, Команда);
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяВременногоФайлаЛог, "UTF-8");
	
	Зн = Неопределено;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если Найти(Стр, "Duration:") = 0 Тогда
			Продолжить;
		КонецЕсли;	 
		
		Стр = СокрЛП(СтрЗаменить(Стр, "Duration:", ""));
		Поз = Найти(Стр, ",");
		Стр = Лев(Стр, Поз - 1);
		
		Зн = Стр;
		Прервать;
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Если Зн = Неопределено Тогда
		ТекстСообщения = Ванесса.Локализовать("Не смог определить длительность у файла: %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяИсходногоФайла);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	КолМилиСек = Сред(Зн, 10);
	Зн = Лев(Зн, 8);
	МассивСтрок = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(Зн, ":");
	КолСек = 0;
	КолСек = КолСек + Число(МассивСтрок[1]) * 60 + Число(МассивСтрок[2]) + Число(КолМилиСек) / 100;
	
	КолСек = Окр(КолСек, 2);
	Возврат КолСек;
КонецФункции	

&НаКлиенте
Процедура ДобавитьMp3КВидео(ПараметрыВидео, ИмяФайлаВидео, Mp3)
	
	ФайлИмяФайлаВидео = Новый Файл(ИмяФайлаВидео);
	Расширение        = ФайлИмяФайлаВидео.Расширение;
	Если Лев(Расширение, 1) = "." Тогда
		Расширение = Сред(Расширение, 2);
	КонецЕсли;	 
	
	НовоеИмяФайлаВидео     = ПолучитьИмявременногоФайла(Расширение);
	ФайлНовоеИмяФайлаВидео = Новый Файл(НовоеИмяФайлаВидео);
	НовоеИмяФайлаВидео     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлНовоеИмяФайлаВидео.Имя;
	
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + ИмяФайлаВидео + " -i " + Mp3 + " -codec copy -shortest " + НовоеИмяФайлаВидео;
	
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	ВыполнитьКоманду(ПараметрыВидео, Команда);
	
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаВидео);
	ИмяФайлаВидео = НовоеИмяФайлаВидео; 
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьИмяФайлаТишины(ПараметрыВидео, Длительность, ПереданноеИмяФайла)
	КаталогДляФайловTTS = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS";
	ИмяВременногоФайлаMp3 = КаталогДляФайловTTS + "\" + ПереданноеИмяФайла + ".mp3";
	
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg 
		+ " -f lavfi -i anullsrc=r=44100:cl=stereo -t " + СтрЗаменить(XMLСтрока(Длительность), ",", ".") 
		+ " -ab 192k -acodec libmp3lame " + ИмяВременногоФайлаMp3;
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	ВыполнитьКоманду(ПараметрыВидео, Команда);
	
	Возврат ИмяВременногоФайлаMp3;
КонецФункции	

&НаКлиенте
Функция ОбъединитьФайлыMP3(ПараметрыВидео, КаталогРаботы, Файл1, Файл2, Файл3)
	ИмяФайлаСписок = КаталогРаботы + "\listmp3.txt";
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаСписок);
	ЗТ = Новый ЗаписьТекста(ИмяФайлаСписок, "windows-1251", , Ложь); 
	
	
	ПромФайл1 = Новый Файл(Файл1);
	ПромФайл2 = Новый Файл(Файл2);
	ЗТ.ЗаписатьСтроку("file '" + ПромФайл1.Имя + "'"); 
	ЗТ.ЗаписатьСтроку("file '" + ПромФайл2.Имя + "'"); 
	Если Файл3 <> Неопределено Тогда
		ПромФайл3 = Новый Файл(Файл3);
		ЗТ.ЗаписатьСтроку("file '" + ПромФайл3.Имя + "'"); 
	КонецЕсли;	 
	
	ЗТ.Закрыть();
	
	
	
	ВременныйMp3 = ПолучитьИмяВременногоФайла("mp3");
	ФайлВременныйMp3 = Новый Файл(ВременныйMp3);
	ВременныйMp3 = КаталогРаботы + "\" + ФайлВременныйMp3.Имя;
	ФайлВременныйMp3 = Новый Файл(ВременныйMp3);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -f concat -i listmp3.txt -c copy " + ФайлВременныйMp3.Имя;
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	
	ЗТ.ЗаписатьСтроку("" + Лев(КаталогРаботы, 2)); 
	ЗТ.ЗаписатьСтроку("CD " + КаталогРаботы); 
	ЗТ.ЗаписатьСтроку("" + Команда); 
	ЗТ.Закрыть();
	
	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(ФайлВременныйMp3.ПолноеИмя) Тогда
		ТекстСообщения = Ванесса.Локализовать("Команда по объединению mp3 не выполнена. Файл1=%1, Файл2=%2, Файл3=%3");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Файл1);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", Файл2);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%3", Файл3);
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;	 
	
	
	Ванесса.УдалитьФайлыКомандаСистемы(Файл1);
	Ванесса.КопироватьФайлКомандаСистемы(ВременныйMp3, Файл1);
	
	Возврат Файл1;
КонецФункции	

&НаКлиенте
Функция СоздатьФайлВидеоИзТекста(ПараметрыВидео, Текст, MP3, ФинальноеИмяФайла)
	КартинкаТекст = СоздатьКартинкуИзТекста(ПараметрыВидео, Текст, "caption", 80);
	
	ДлительностьВидео = 5;
	Если MP3 <> Неопределено Тогда
		ДлительностьMp3 = Окр(ОпределитьДлительностьФайла(ПараметрыВидео, MP3));
		Если  ДлительностьВидео < (ДлительностьMp3 + 1) Тогда
			ДлительностьВидео = ДлительностьMp3 + 1;
		КонецЕсли;	 
	КонецЕсли;	 
	
	ФайлВидео     = СоздатьВидеоНужнойДлительностиИзКартинки(ПараметрыВидео, КартинкаТекст, ДлительностьВидео);
	
	Ванесса.УдалитьФайлыКомандаСистемы(КартинкаТекст);
	
	
	Если Mp3 <> Неопределено Тогда
		ФайлТишины1 = СоздатьИмяФайлаТишины(ПараметрыВидео, 0.6, ФинальноеИмяФайла + "_silence_1");
		ФайлТишины2 = СоздатьИмяФайлаТишины(ПараметрыВидео, 10, ФинальноеИмяФайла + "_silence_2");
		ФайлMp3     = ОбъединитьФайлыMP3(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS", ФайлТишины1, Mp3, ФайлТишины2);
		ДобавитьMp3КВидео(ПараметрыВидео, ФайлВидео, ФайлMp3);
	Иначе
		ФайлMp3 = СоздатьИмяФайлаТишины(ПараметрыВидео, ДлительностьВидео, ФинальноеИмяФайла + "_silence_0");
		ДобавитьMp3КВидео(ПараметрыВидео, ФайлВидео, ФайлMp3);
	КонецЕсли;	 
	
	
	ФайлФайлВидео = Новый Файл(ФайлВидео);
	ФинальноеИмя  = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФинальноеИмяФайла + ФайлФайлВидео.Расширение;
	Ванесса.ПереместитьФайлКомандаСистемы(ФайлВидео, ФинальноеИмя);
	
	Возврат ФинальноеИмя;
КонецФункции	

&НаКлиенте
Функция ОпределитьЯзыкФичи(ИмяФайла)
	Язык = "ru";
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, "UTF-8");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если Лев(СокрЛП(Стр), 1) <> "#" Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если Найти(НРег(стр), "language:") = 0 Тогда
			Продолжить;
		КонецЕсли;	 
		
		Поз = Найти(Стр, ":");
		Язык = СокрЛП(Сред(Стр, Поз + 1));
	КонецЦикла;	
	Текст.Закрыть();
	
	Возврат НРег(Язык);
КонецФункции	


&НаКлиенте
Функция ПолучитьСловоСценарий(Язык)
	Если Язык = "en" Тогда
		Возврат "Scenario";
	ИначеЕсли Язык = "ro" Тогда
		Возврат "Scenariu";
	ИначеЕсли Язык = "it" Тогда
		Возврат "Scenario";
	ИначеЕсли Язык = "pl" Тогда
		Возврат "Scenariusz";
	КонецЕсли;	 
	
	Возврат "Сценарий";
КонецФункции	

&НаКлиенте
Функция СоздатьЗаголовокСценария(ПараметрыВидео, ИмяСценария, НомерСценария)
	Текст   = ИмяСценария;
	Текст   = СтрЗаменить(Текст, "<", "");
	Текст   = СтрЗаменить(Текст, ">", "");
	
	
	ПолныйПутьКФиче = ПараметрыВидео.МассивСценариевДляВыполнения[0].ПолныйПутьКФиче;
	ЯзыкФичи        = ОпределитьЯзыкФичи(ПолныйПутьКФиче);
	
	СловоСценарий = ПолучитьСловоСценарий(ЯзыкФичи);
	
	СценарийMP3 = ПолучитьФайлMP3ИзТекста(ПараметрыВидео, "" + СловоСценарий + ". " + Текст, "scen_" + ДобавитьНулей(НомерСценария, 3) + "_begin");
	
	Текст   = "" + СловоСценарий + "\n\n " + ИмяСценария;
	
	ФайлВидео   = СоздатьФайлВидеоИзТекста(ПараметрыВидео, Текст, СценарийMP3, "scen_" + ДобавитьНулей(НомерСценария, 3) + "_begin");
	
	Возврат ФайлВидео;
КонецФункции

&НаКлиенте
Процедура ДобавитьКрасивыйТег(ЧтоОборачиваем, Стр)
	ЧтоОборачиваемОриг = ЧтоОборачиваем;
	
	ЧтоОборачиваем = "<span underline='single'><b>" + ЧтоОборачиваем + "</b></span>";
	
	Стр = ЧтоОборачиваем + Сред(Стр, СтрДлина(ЧтоОборачиваемОриг) + 1);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокаВыводаФичи(ПараметрыВидео, ФайлФичи, СтрокаMP3)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ФайлФичи, "UTF-8");
	
	СтрокаВыводаФичи = "";
	СтрокаMP3 = "";
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Стр = СокрЛП(Стр);
		
		Если Лев(Стр, 1) = "#" Тогда
			Продолжить;
		КонецЕсли;	 
		Если Лев(Стр, 1) = "@" Тогда
			Продолжить;
		КонецЕсли;	 
		Если Стр = "" Тогда
			Продолжить;
		КонецЕсли;	 
		
		НРегСтр = НРег(Стр);
		
		Если Найти(НРегСтр, "контекст:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "сценарий:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "scenario:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "background:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "context:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "scenariu:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "scenario:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "contesto:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "scenariusz:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		Если Найти(НРегСтр, "założenia:") > 0 Тогда
			Прервать;
		КонецЕсли;	 
		
		
		Стр = СтрЗаменить(Стр, ">", "");
		Стр = СтрЗаменить(Стр, "<", "");
		
		СтрокаMP3 = СтрокаMP3 + Стр + Символы.ПС;
		
		Если Лев(НРегСтр, 11) = "функционал:" Тогда
			ДобавитьКрасивыйТег(Лев(Стр, 11), Стр);
		КонецЕсли;	 
		Если Лев(НРегСтр, 3) = "как" Тогда
			ДобавитьКрасивыйТег(Лев(Стр, 3), Стр);
		КонецЕсли;	 
		Если Лев(НРегСтр, 6) = "я хочу" Тогда
			ДобавитьКрасивыйТег(Лев(Стр, 6), Стр);
		КонецЕсли;	 
		Если Лев(НРегСтр, 5) = "чтобы" Тогда
			ДобавитьКрасивыйТег(Лев(Стр, 5), Стр);
		КонецЕсли;	 
		
		
		Если Лев(НРегСтр, 3) = "как" Тогда
			СтрокаВыводаФичи = СтрокаВыводаФичи + Символы.ПС;
		КонецЕсли;	 
		
		Если СтрокаВыводаФичи <> "" Тогда
			СтрокаВыводаФичи = СтрокаВыводаФичи + Символы.ПС;
		КонецЕсли;	 
		СтрокаВыводаФичи = СтрокаВыводаФичи + Стр;
	КонецЦикла;	
	
	Текст.Закрыть();
	
	СтрокаВыводаФичи = СтрЗаменить(СтрокаВыводаФичи, Символы.ПС, "\n");
	
	
	
	СтрокаВыводаФичи = "\n\n\n\n\n" + СтрокаВыводаФичи;
	
	Ванесса.Отладка("СтрокаВыводаФичи:");
	Ванесса.Отладка(СтрокаВыводаФичи);
	
	Возврат СтрокаВыводаФичи;
КонецФункции	

&НаКлиенте
Процедура СоздатьIntro(ПараметрыВидео)
	Состояние("Intro...");
	
	Попытка
		ПолныйПутьКФиче = ПараметрыВидео.МассивСценариевДляВыполнения[0].ПолныйПутьКФиче;
	Исключение
		ВызватьИсключение Ванесса.Локализовать("Не найдено ни одного сценария. Запись видео невозможна.");
	КонецПопытки;	
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПолныйПутьКФиче, "UTF-8");
	СтрокаФичи = Текст.Прочитать();
	Текст.Закрыть();
	Если Найти(СтрокаФичи, "#[autodoc.ignore.featureslide]") > 0 
		ИЛИ ПараметрыВидео.ЗаписьВидеоОтключитьСлайдСЗаголовкомФичи 
		ИЛИ ПараметрыВидео.ЗаписьВидеоЗаменитьСлайдЗаголовок Тогда
		// Значит не надо создавать Intro
		Возврат;
	КонецЕсли;	 
	
	СтрокаMP3 = "";
	СтрокаВыводаФичи = ПолучитьСтрокаВыводаФичи(ПараметрыВидео, ПолныйПутьКФиче, СтрокаMP3);
	
	ДлительностьВидео = 6;
	Если ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		ФайлMp3         = ПолучитьФайлMP3ИзТекста(ПараметрыВидео, СтрокаMP3, "intro");
		ДлительностьMp3 = Цел(ОпределитьДлительностьФайла(ПараметрыВидео, ФайлMp3)) + 1;
		
		Если ДлительностьВидео < (ДлительностьMp3 + 2) Тогда
			ДлительностьВидео = ДлительностьMp3 + 2;
		КонецЕсли;	 
	Иначе	
		ФайлMp3         = СоздатьИмяФайлаТишины(ПараметрыВидео, 10, "intro_silence_0");
	КонецЕсли;	 
	
	КартинкаТекст = СоздатьКартинкуИзТекста(ПараметрыВидео, СтрокаВыводаФичи, "pango", 35);
	ФайлВидео     = СоздатьВидеоНужнойДлительностиИзКартинки(ПараметрыВидео, КартинкаТекст, ДлительностьВидео);
	Ванесса.УдалитьФайлыКомандаСистемы(КартинкаТекст);
	
	
	
	ФайлТишины1 = СоздатьИмяФайлаТишины(ПараметрыВидео, 1, "intro_silence_1");
	ФайлТишины2 = СоздатьИмяФайлаТишины(ПараметрыВидео, 20, "intro_silence_2");
	ФайлMp3     = ОбъединитьФайлыMP3(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS", ФайлТишины1, ФайлMp3, ФайлТишины2);
	
	ДобавитьMp3КВидео(ПараметрыВидео, ФайлВидео, ФайлMp3);
	ФайлФайлВидео = Новый Файл(ФайлВидео);
	Ванесса.ПереместитьФайлКомандаСистемы(ФайлВидео, ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + "intro" + ФайлФайлВидео.Расширение);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКоличествоШагов(МассивСценариевДляВыполнения)
	Кол = 0;
	Для каждого Сценарий Из МассивСценариевДляВыполнения Цикл
		Шаги = Сценарий.Шаги;
		Кол  = Кол + Шаги.Количество();
	КонецЦикла;
	
	Возврат Кол;
КонецФункции	

&НаКлиенте
Процедура СоздатьOutro(ПараметрыВидео)
	Состояние("Outro...");
	Попытка
		ПолныйПутьКФиче = ПараметрыВидео.МассивСценариевДляВыполнения[0].ПолныйПутьКФиче;
	Исключение
		ВызватьИсключение Ванесса.Локализовать("Не найдено ни одного сценария. Запись видео невозможна.");
	КонецПопытки;	
	
	ПараметрыВидео.Вставить("ФайлМузыки", Неопределено);
	КаталогМузыки = ПараметрыВидео.ЗаписьВидеоКаталогМузыки;
	Если СокрЛП(КаталогМузыки) <> "" Тогда
		Если Ванесса.ФайлСуществуетКомандаСистемы(КаталогМузыки) Тогда
			СписокФайловКаталога = ПолучитьСписокФайловКаталога(ПараметрыВидео, КаталогМузыки);
			Если СписокФайловКаталога.Количество() > 0 Тогда
				ТекДата = Формат(ТекущаяДата(), "DF=dd.MM.yyyy");
				ТекДата = СтрЗаменить(ТекДата," ", "");
				ТекДата = СтрЗаменить(ТекДата, ":", "");
				ТекДата = СтрЗаменить(ТекДата, ".", "");
				ТекДата = Прав(ТекДата, 2); // секунды
				ТекДата = Число(ТекДата);
				ГенераторСлучайныхЧисел = Новый ГенераторСлучайныхЧисел(ТекДата);
				
				ИД_mp3 = ГенераторСлучайныхЧисел.СлучайноеЧисло(0, СписокФайловКаталога.Количество() - 1);
				mp3файл = СписокФайловКаталога[ИД_mp3].ПолноеИмя;
				
				
				Ванесса.Отладка("Был найден файл mp3 <" + mp3файл + ">");
				
				ПараметрыВидео.Вставить("ФайлМузыки", mp3файл);
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	 
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПолныйПутьКФиче, "UTF-8");
	СтрокаФичи = Текст.Прочитать();
	Текст.Закрыть();
	Если Найти(СтрокаФичи, "#[autodoc.ignore.finalslide]") > 0 
		ИЛИ ПараметрыВидео.ЗаписьВидеоОтключитьСлайдФинал 
		ИЛИ ПараметрыВидео.ЗаписьВидеоЗаменитьСлайдФинал Тогда
		// Значит не надо создавать Outro
		Возврат;
	КонецЕсли;	 
		
	ПолныйПутьКФиче = ПараметрыВидео.МассивСценариевДляВыполнения[0].ПолныйПутьКФиче;
	ЯзыкФичи        = ОпределитьЯзыкФичи(ПолныйПутьКФиче);
	
	КолШагов = ПолучитьКоличествоШагов(ПараметрыВидео.МассивСценариевДляВыполнения);
	
	СтрокаMP3 = "";
	Если ПараметрыВидео.ФайлМузыки = Неопределено Тогда
		АудиоТрек = "";
	Иначе
		ФайлMp3 = Новый Файл(ПараметрыВидео.ФайлМузыки);
		АудиоТрек = "\nАудио трек: " + ФайлMp3.ИмяБезРасширения;
		Если ЯзыкФичи <> "ru" Тогда
			АудиоТрек = "\nAudio track: " + ФайлMp3.ИмяБезРасширения;
		КонецЕсли;	 
	КонецЕсли;	 
	
	Голос = "";
	// ToDO Локализовать?
	СтрокаВыводаФичи = "Видео создано автоматически\n%1\n\n"
		+ "Количество сценариев: %2\nКоличество шагов: %3\nВерсия Vanessa-Automation: %4\nВерсия скрипта сборки видео: %5 \n\n %6";
	Если ЯзыкФичи <> "ru" Тогда
		СтрокаВыводаФичи = "Video created automatically\n%1\n\nNumber of scenarios: %2\n"
			+ "Number of steps: %3\nVanessa-Automation version: %4\nVideo build script version: %5 \n\n %6";
	КонецЕсли;	 
	СтрокаВыводаФичи = СтрЗаменить(СтрокаВыводаФичи, "%1", ТекущаяДата());
	СтрокаВыводаФичи = СтрЗаменить(СтрокаВыводаФичи, "%2", ПараметрыВидео.МассивСценариевДляВыполнения.Количество());
	СтрокаВыводаФичи = СтрЗаменить(СтрокаВыводаФичи, "%3", КолШагов);
	СтрокаВыводаФичи = СтрЗаменить(СтрокаВыводаФичи, "%4", СтрЗаменить(Ванесса.Заголовок, "ver", ""));
	СтрокаВыводаФичи = СтрЗаменить(СтрокаВыводаФичи, "%5", ВерсияСкриптаСборкиВидео + АудиоТрек + Голос);
	СтрокаВыводаФичи = СтрЗаменить(СтрокаВыводаФичи, "%6", "https://github.com/Pr-Mex/vanessa-automation");
	
	КартинкаТекст = СоздатьКартинкуИзТекста(ПараметрыВидео, СтрокаВыводаФичи, "caption", 70);
	ФайлВидео     = СоздатьВидеоНужнойДлительностиИзКартинки(ПараметрыВидео, КартинкаТекст, 5, , Ложь);
	Ванесса.УдалитьФайлыКомандаСистемы(КартинкаТекст);
	
	ФайлТишины = СоздатьИмяФайлаТишины(ПараметрыВидео, 10, "outro_silence");
	ДобавитьMp3КВидео(ПараметрыВидео, ФайлВидео, ФайлТишины);
	
	ФайлФайлВидео = Новый Файл(ФайлВидео);
	Ванесса.ПереместитьФайлКомандаСистемы(ФайлВидео, ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + "outro" + ФайлФайлВидео.Расширение);
КонецПроцедуры

&НаКлиенте
Функция СмасштабироватьВидео(ПараметрыВидео, ИмяФайлаВидеоВременный, Доля)
	ИмяФайлаВидеоВременный2     = ПолучитьИмявременногоФайла("mp4");
	ФайлИмяФайлаВидеоВременный2 = Новый Файл(ИмяФайлаВидеоВременный2);
	ИмяФайлаВидеоВременный2     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлИмяФайлаВидеоВременный2.Имя;
	
	
	ДоляСтр = СтрЗаменить(СтрЗаменить(Строка(Доля), ",", "."), Символы.НПП, "");
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i "
		+ ИмяФайлаВидеоВременный + "  -filter:v ""setpts=" + ДоляСтр + "*PTS"" " + ИмяФайлаВидеоВременный2;
	
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	ВыполнитьКоманду(ПараметрыВидео, Команда);
	
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаВидеоВременный);
	
	Возврат ИмяФайлаВидеоВременный2;
КонецФункции	 

&НаКлиенте
Процедура УскоритьЗамедлитьФайлВидеоИДобавитьMp3(ПараметрыВидео, ИмяФайлВидео, ИмяФайлMP3, ДлительностьВидео, НоваяДлительностьВидео, ДлительностьMP3)
	ИмяФайлаВидеоВременный     = ПолучитьИмявременногоФайла("mp4");
	ФайлИмяФайлаВидеоВременный = Новый Файл(ИмяФайлаВидеоВременный);
	ИмяФайлаВидеоВременный     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлИмяФайлаВидеоВременный.Имя;
	
	Если ДлительностьВидео = 0 Тогда
		ТекстСообщения = Ванесса.Локализовать("Не получилось определить длительность у файла <%1>.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяФайлВидео);
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;	 
	
	МинДоля = 0.4;
	ЗаписьВидеоПроцентУскорения = ПараметрыВидео.ЗаписьВидеоПроцентУскорения;
	ПромДоля = 1 - ЗаписьВидеоПроцентУскорения / 100;
	Если МинДоля < ПромДоля Тогда
		МинДоля = ПромДоля;
	КонецЕсли;	 
	
	Доля    = НоваяДлительностьВидео / ДлительностьВидео;
	Если Доля > 1 Тогда 
		// Значит замедляем
		Доля    = Окр(НоваяДлительностьВидео / ДлительностьВидео, 1);
	Иначе	
		// Значит ускоряем и доля будет что-то вроде 0.425
		Доля    = Окр(НоваяДлительностьВидео / ДлительностьВидео, 3);
		Если Доля < МинДоля Тогда
			Доля = МинДоля;// чтобы не ускорять слишком быстро
		КонецЕсли;	 
	КонецЕсли;	 
	
	Ванесса.Отладка("" + ИмяФайлВидео + ". Коэф ускорения: " + Доля);
	
	Если НоваяДлительностьВидео = -1 ИЛИ ПараметрыВидео.ЗаписьВидеоОтключитьМасштабированиеШаговПоВремени Тогда // Значит ничего делать не надо
		Ванесса.Отладка("Не стал изменять длительность видео " + ИмяФайлВидео);
		ИмяФайлаВидеоВременный = ИмяФайлВидео;
	Иначе	
		ДоляСтр = СтрЗаменить(СтрЗаменить(Строка(Доля), ",", "."), Символы.НПП, "");
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " 
			+ ИмяФайлВидео + "  -filter:v ""setpts=" + ДоляСтр + "*PTS"" " + ИмяФайлаВидеоВременный;
		
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		ВыполнитьКоманду(ПараметрыВидео, Команда);
	КонецЕсли;	 
	
	// проконтролируем что длительность видео не меньше чем длительность mp3
	Для Счетичк = 1 По 3 Цикл
		ТекущаяДлительностьВидео = Окр(ОпределитьДлительностьФайла(ПараметрыВидео, ИмяФайлаВидеоВременный), 2);
		Если (ТекущаяДлительностьВидео - 0.7) < ДлительностьMP3 Тогда
			Допуск = 1;
			НоваяДлительностьВидео = ДлительностьMP3 + Допуск;
			Доля = НоваяДлительностьВидео / ТекущаяДлительностьВидео;
			Если Доля > 1 Тогда 
				// Значит замедляем
				Доля = Окр(НоваяДлительностьВидео / ТекущаяДлительностьВидео, 2);
			Иначе	
				// Значит ускоряем и доля будет что-то вроде 0.425
				Доля = Окр(НоваяДлительностьВидео / ТекущаяДлительностьВидео, 3);
			КонецЕсли;	 
			
			Если Доля < МинДоля Тогда
				Доля = МинДоля;// чтобы не ускорять слишком быстро
			КонецЕсли;	 
			
			Ванесса.Отладка("" + ИмяФайлВидео + ". Коэф ускорения: " + Доля);
			
			ИмяФайлаВидеоВременный = СмасштабироватьВидео(ПараметрыВидео, ИмяФайлаВидеоВременный, Доля);
			
			ТекущаяДлительностьВидео = ОпределитьДлительностьФайла(ПараметрыВидео, ИмяФайлаВидеоВременный);
			Если ТекущаяДлительностьВидео > (ДлительностьMP3 + Допуск) Тогда
				НоваяДлительностьВидео = ДлительностьMP3 + Допуск;
				Доля = НоваяДлительностьВидео / ТекущаяДлительностьВидео;
				ИмяФайлаВидеоВременный = СмасштабироватьВидео(ПараметрыВидео, ИмяФайлаВидеоВременный, Доля);
			КонецЕсли;	 
		Иначе
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	
	
	
	// добавим звук
	Если ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		ФайлИмяФайлMP3     = Новый Файл(ИмяФайлMP3);
		ИмяБезРасширения = ФайлИмяФайлMP3.ИмяБезРасширения;
		
		ФайлТишины1 = СоздатьИмяФайлаТишины(ПараметрыВидео, 0.5, ИмяБезРасширения + "_silence_1");
		ФайлТишины2 = СоздатьИмяФайлаТишины(
			ПараметрыВидео, 
			10 + Цел(ОпределитьДлительностьФайла(ПараметрыВидео, ИмяФайлаВидеоВременный)), 
			ИмяБезРасширения + "_silence_2");
		
		ФайлMp3     = ОбъединитьФайлыMP3(
			ПараметрыВидео, 
			ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS", 
			ФайлТишины1, ФайлИмяФайлMP3.Имя, ФайлТишины2);

		ДобавитьMp3КВидео(ПараметрыВидео, ИмяФайлаВидеоВременный, ФайлMp3);
	Иначе
		// Значит нет озвучки голосом
		ФайлИмяФайлВидео = Новый Файл(ИмяФайлВидео);
		ФайлMp3 = СоздатьИмяФайлаТишины(ПараметрыВидео, ДлительностьВидео + 5, ФайлИмяФайлВидео.ИмяБезРасширения + "_silence_0");
		ДобавитьMp3КВидео(ПараметрыВидео, ИмяФайлаВидеоВременный, ФайлMp3);
	КонецЕсли;	 
	
	
	Если Прав(НРег(ИмяФайлаВидеоВременный), 3) = "mp4" Тогда
		// надо перекодировать в mpg
		НовоеИмяФайлВидео = СтрЗаменить(ИмяФайлаВидеоВременный, "mp4", "mpg");
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " 
			+ ИмяФайлаВидеоВременный + " -r 29.97 -qscale 1 -ab 192k -acodec libmp3lame " 
			+ НовоеИмяФайлВидео;

		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		ВыполнитьКоманду(ПараметрыВидео, Команда);
		
		Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаВидеоВременный);
		ИмяФайлаВидеоВременный = НовоеИмяФайлВидео;
		
		// надо заменить расширение
		ИмяФайлВидео = СтрЗаменить(ИмяФайлВидео, "mp4", "mpg");
	КонецЕсли;	 
	
	
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлВидео);
	Ванесса.ПереместитьФайлКомандаСистемы(ИмяФайлаВидеоВременный, ИмяФайлВидео);
	
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьСтрокуДляСубтитров(Знач Стр)
	Пока Найти(Стр,"  ") > 0 Цикл
		Стр = СтрЗаменить(Стр,"  "," ");
	КонецЦикла;	
	Стр = СтрЗаменить(Стр, Символы.Таб," ");
	Стр = СтрЗаменить(Стр, Символы.ВТаб," ");
	Стр = СтрЗаменить(Стр, "^", "");
	// Стр = СтрЗаменить(Стр,"+","");
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Процедура ДобавитьСубтитрыКВидео(ПараметрыВидео, ИмяФайлаШага, Шаг, ДлительностьMP3)
	Если НЕ ПараметрыВидео.ЗаписьВидеоДобавлятьСубтитры Тогда
		Возврат;
	КонецЕсли;	 
	
	ИмяФайлаСубтитров = СтрЗаменить(ИмяФайлаШага, ".mp4", ".srt");
	ИмяФайлаСубтитров = СтрЗаменить(ИмяФайлаСубтитров, ".mpg", ".srt");
	
	ДлительностьТитра = ДлительностьMP3 + 1;
	Если ДлительностьТитра > 59 Тогда
		ДлительностьТитра = 59;
	КонецЕсли;	 
	
	ДлительностьТитраСтр = Строка(ДлительностьТитра);
	Если СтрДлина(ДлительностьТитраСтр) = 1 Тогда
		ДлительностьТитраСтр = "0" + ДлительностьТитраСтр;
	КонецЕсли;	 
	
	ЗТ = Новый ЗаписьТекста(ИмяФайлаСубтитров, "UTF-8", , Ложь); 
	ЗТ.ЗаписатьСтроку("1"); 
	ЗТ.ЗаписатьСтроку("00:00:00,300 --> 00:00:" + ДлительностьТитраСтр + ",300"); 
	
	Если ЗначениеЗаполнено(Шаг.ТекстИнструкция) Тогда
		ТекстТитра = Шаг.ТекстИнструкция;
	Иначе	
		ТекстТитра = Шаг.Имя;
	КонецЕсли;	 	
	
	Если Лев(ТекстТитра, 1) = "*" Тогда
		ТекстТитра = УбратьСпецсимволыИзНачалаСтроки(ТекстТитра);
	КонецЕсли;	 
	
	ЗТ.ЗаписатьСтроку(ПодготовитьСтрокуДляСубтитров(ТекстТитра)); 
	ЗТ.Закрыть();
	
	ВременныйФайлВидео     = ПолучитьИмявременногоФайла("mpg");
	ФайлВременныйФайлВидео = Новый Файл(ВременныйФайлВидео);
	ВременныйФайлВидео     = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ФайлВременныйФайлВидео.Имя;
	
	ФайлСабов = Новый Файл(ИмяФайлаСубтитров);
	
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + ИмяФайлаШага 
		+ " -r 29.97 -qscale 1 -vf subtitles=" + ФайлСабов.Имя 
		+ ":force_style=""FontName=Consolas"" -acodec copy " + ВременныйФайлВидео;
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
	ЗТ.ЗаписатьСтроку("" + Лев(ФайлСабов.Путь, 2)); 
	ЗТ.ЗаписатьСтроку("cd " + ФайлСабов.Путь); 
	ЗТ.ЗаписатьСтроку("" + Команда); 
	ЗТ.Закрыть();
	
	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(ВременныйФайлВидео) Тогда
		ТекстСообщения = Ванесса.Локализовать("Не получилось добавить субтитры к файлу <%1>.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяФайлаШага);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	
	
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаШага);
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяВременногоФайла);
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаСубтитров);
	Ванесса.ПереместитьФайлКомандаСистемы(ВременныйФайлВидео, ИмяФайлаШага);	
	
КонецПроцедуры

&НаКлиенте
Функция УбратьСпецсимволыИзНачалаСтроки(Знач Стр)
	Если Лев(Стр, 1) = "*" Тогда
		Стр = СокрЛ(Сред(Стр, 2));
	КонецЕсли;	 
	Возврат Стр;
КонецФункции	 

&НаКлиенте
Процедура СобратьВидеоВставкуИзТекста(ПараметрыВидео, ИмяФайлаШага, Знач ТекстВставки, НомерСценария, НомерШага, ПараметрыГолоса)
	ИмяФайлаШага = СтрЗаменить(ИмяФайлаШага, ".mp4", ".mpg");// так реально создан mpg и дальше нам надо mpg
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаШага);
	ИсходныйТекст = ТекстВставки;
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьВидеоВставки Тогда
		Если ПараметрыВидео.ДанныеКэшВидеоВставки[ТекстВставки] <> Неопределено Тогда
			КаталогГдеЛежитКэшВидеоВставок = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшВидеоВставок);
			ФайлВидео = КаталогГдеЛежитКэшВидеоВставок + "\" + ПараметрыВидео.ДанныеКэшВидеоВставки[ТекстВставки];
			Ванесса.КопироватьФайлКомандаСистемы(ФайлВидео, ИмяФайлаШага);	
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	ПромФайл    = Новый Файл(ИмяФайлаШага);
	СтрИмяФайла = "breakscen_" + ПромФайл.ИмяБезРасширения;
	
	ДлительностьВидео = 5;
	
	Если ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		ФайлMp3         = ПолучитьФайлMP3ИзТекста(ПараметрыВидео, ТекстВставки, СтрИмяФайла, ПараметрыГолоса);
		ДлительностьMp3 = Цел(ОпределитьДлительностьФайла(ПараметрыВидео, ФайлMp3)) + 1;
	Иначе
		ФайлMp3         = СоздатьИмяФайлаТишины(ПараметрыВидео, ДлительностьВидео, СтрИмяФайла + "_silence_0");
		ДлительностьMp3 = ДлительностьВидео;
	КонецЕсли;	 
	
	Если ДлительностьВидео < (ДлительностьMp3 + 1) Тогда
		ДлительностьВидео = ДлительностьMp3 + 1;
	КонецЕсли;	 
	
	Если Лев(ТекстВставки, 1) = "*" Тогда
		ТекстВставки = УбратьСпецсимволыИзНачалаСтроки(ТекстВставки);
	КонецЕсли;	 
	
	ТекстВставки = СтрЗаменить(ТекстВставки, "^", "");
	// ТекстВставки = СтрЗаменить(ТекстВставки,"+","");
	
	КартинкаТекст = СоздатьКартинкуИзТекста(ПараметрыВидео, ТекстВставки, "caption", 80);
	ФайлВидео     = СоздатьВидеоНужнойДлительностиИзКартинки(ПараметрыВидео, КартинкаТекст, ДлительностьВидео);
	Ванесса.УдалитьФайлыКомандаСистемы(КартинкаТекст);
	
	ФайлТишины1 = СоздатьИмяФайлаТишины(ПараметрыВидео, 1, СтрИмяФайла + "_silence_1");
	ФайлТишины2 = СоздатьИмяФайлаТишины(ПараметрыВидео, 20, СтрИмяФайла + "_silence_2");
	ФайлMp3     = ОбъединитьФайлыMP3(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS", ФайлТишины1, ФайлMp3, ФайлТишины2);
	
	ДобавитьMp3КВидео(ПараметрыВидео, ФайлВидео, ФайлMp3);
	ФайлФайлВидео = Новый Файл(ФайлВидео);
	
	
	Ванесса.ПереместитьФайлКомандаСистемы(ФайлВидео, ИмяФайлаШага);	
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьВидеоВставки Тогда
		ДобавитьВидеоВставкуШагаВКэш(ИмяФайлаШага, ИсходныйТекст, ПараметрыВидео);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура СобратьВидеоВставкуИзКартинки(ПараметрыВидео, ИмяФайлаШага, Знач ТекстВставки, ИмяКартинки, НомерСценария, НомерШага, ПараметрыГолоса)
	ИмяФайлаШага = СтрЗаменить(ИмяФайлаШага, ".mp4", ".mpg");// так реально создан mpg и дальше нам надо mpg
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайлаШага);
	ИсходныйТекст = ТекстВставки;
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьВидеоВставки Тогда
		Если ПараметрыВидео.ДанныеКэшВидеоВставки[ТекстВставки] <> Неопределено Тогда
			КаталогГдеЛежитКэшВидеоВставок = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшВидеоВставок);
			ФайлВидео = КаталогГдеЛежитКэшВидеоВставок + "\" + ПараметрыВидео.ДанныеКэшВидеоВставки[ТекстВставки];
			Ванесса.КопироватьФайлКомандаСистемы(ФайлВидео, ИмяФайлаШага);	
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	ПромФайл    = Новый Файл(ИмяФайлаШага);
	СтрИмяФайла = "breakscen_" + ПромФайл.ИмяБезРасширения;
	
	ДлительностьВидео = 5;
	
	Если ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		ФайлMp3         = ПолучитьФайлMP3ИзТекста(ПараметрыВидео, ТекстВставки, СтрИмяФайла, ПараметрыГолоса);
		ДлительностьMp3 = Цел(ОпределитьДлительностьФайла(ПараметрыВидео, ФайлMp3)) + 1;
	Иначе
		ФайлMp3         = СоздатьИмяФайлаТишины(ПараметрыВидео, ДлительностьВидео, СтрИмяФайла + "_silence_0");
		ДлительностьMp3 = ДлительностьВидео;
	КонецЕсли;	 
	
	Если ДлительностьВидео < (ДлительностьMp3 + 1) Тогда
		ДлительностьВидео = ДлительностьMp3 + 1;
	КонецЕсли;	 
	
	
	Картинка = Ванесса.ПолучитьФайлКартинки(ИмяКартинки);
	ФайлВидео = СоздатьВидеоНужнойДлительностиИзКартинки(ПараметрыВидео, Картинка.ПолноеИмя, ДлительностьВидео);
	
	ФайлТишины1 = СоздатьИмяФайлаТишины(ПараметрыВидео, 1, СтрИмяФайла + "_silence_1");
	ФайлТишины2 = СоздатьИмяФайлаТишины(ПараметрыВидео, 20, СтрИмяФайла + "_silence_2");
	ФайлMp3     = ОбъединитьФайлыMP3(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS", ФайлТишины1, ФайлMp3, ФайлТишины2);
	
	ДобавитьMp3КВидео(ПараметрыВидео, ФайлВидео, ФайлMp3);
	ФайлФайлВидео = Новый Файл(ФайлВидео);
	
	
	Ванесса.ПереместитьФайлКомандаСистемы(ФайлВидео, ИмяФайлаШага);	
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьВидеоВставки Тогда
		ДобавитьВидеоВставкуШагаВКэш(ИмяФайлаШага, ИсходныйТекст, ПараметрыВидео);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Функция СоздатьДанныеФайла(Имя, ПолныйПуть, Приоритет)
	Зн = Новый Структура;
	Зн.Вставить("Имя", Имя);
	Зн.Вставить("ПолныйПуть", ПолныйПуть);
	Зн.Вставить("Приоритет", Приоритет);
	
	Возврат Зн;
КонецФункции	


&НаКлиенте
Функция ПолучитьСписокФайловКаталога(ПараметрыВидео, Каталог)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	ИмяЛога            = ПолучитьИмяВременногоФайла("txt");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
	
	Команда = "dir /a:-d /b > """ + ИмяЛога + """";
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео, Истина);
	Ванесса.Отладка(Команда);
	
	
	ЗТ.ЗаписатьСтроку("" + Лев(Каталог, 2)); 
	ЗТ.ЗаписатьСтроку("CD "+ Каталог); 
	ЗТ.ЗаписатьСтроку("" + Команда); 
	ЗТ.Закрыть();
	
	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(ИмяЛога) Тогда
		ТекстСообщения = Ванесса.Локализовать("Команда по получению списка файлов каталога не выполнена. Каталог = %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Каталог);
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;	 
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяВременногоФайла);
	
	МассивФайлов = Новый Массив;
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяЛога, "UTF-8");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если Прав(НРег(Стр), 3) = "mp3" Тогда
			Файл = Новый Файл(Каталог + "\" + Стр);
			МассивФайлов.Добавить(Файл);
		КонецЕсли;	 
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяЛога);
	
	Возврат МассивФайлов;
КонецФункции	


&НаКлиенте
Функция ПолучитьMP3МузыкиНужнойДлительности(ПараметрыВидео, ДлительностьВидео)
	ДлительностьMP3   = Цел(ОпределитьДлительностьФайла(ПараметрыВидео, ПараметрыВидео.ФайлМузыки));
	Если ДлительностьMP3 = 0 Тогда
		ТекстСообщения = Ванесса.Локализовать("Длительность MP3 = 0. Файл=%1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ПараметрыВидео.ФайлМузыки);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	Ном = 0;
	
	ФайлMp3 = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS\Music.mp3";
	Ванесса.КопироватьФайлКомандаСистемы(ПараметрыВидео.ФайлМузыки, ФайлMp3);
	
	Пока ДлительностьMP3 < ДлительностьВидео Цикл
		Ном = Ном + 1;
		ФайлТишины  = СоздатьИмяФайлаТишины(ПараметрыВидео, 1, "music_" + XMLСтрока(Ном));
		ФайлMp3     = ОбъединитьФайлыMP3(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS", ФайлMp3, ФайлТишины, ФайлMp3);
		
		ДлительностьMP3   = Цел(ОпределитьДлительностьФайла(ПараметрыВидео, ФайлMp3));
	КонецЦикла;	
	
	Возврат ФайлMp3;
	
КонецФункции	

&НаКлиенте
Функция СтрокаОтключенияВыводаКонсоли(Знач Команда, ПараметрыВидео, НуженВыводКонсоли = Ложь)
	Если НуженВыводКонсоли Тогда
		Возврат Команда; 
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоСкрытьСлужебныеОкна Тогда
		Возврат Команда + " > nul 2>&1";
	КонецЕсли;	 
	Возврат Команда; 
КонецФункции	 

&НаКлиенте
Процедура СобратьФинальноеВидеоИзЧастей(ПараметрыВидео, МассивЧастей)
	
	// Сборка частей видео в одно
	Состояние("Сборка частей видео...");
	ГдеИскать = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов;
	ТаблицаФайлов = Новый Массив;
	
	ДанныеФайла = СоздатьДанныеФайла("intro.mpg", ГдеИскать + "\intro.mpg", 0);
	Если Ванесса.ФайлСуществуетКомандаСистемы(ДанныеФайла.ПолныйПуть) Тогда
		ТаблицаФайлов.Добавить(ДанныеФайла);
	КонецЕсли;	 
	
	СписокФайлов = Новый СписокЗначений;
	Для каждого Файл Из МассивЧастей Цикл
		Если НРег(Файл.Имя) = НРег("intro.mpg") Тогда
			Продолжить;
		КонецЕсли;	 
		Если НРег(Файл.Имя) = НРег("outro.mpg") Тогда
			Продолжить;
		КонецЕсли;	 
		
		СписокФайлов.Добавить(Файл, Файл.Имя);
	КонецЦикла;
	
	СписокФайлов.СортироватьПоПредставлению();
	
	Для каждого ЗначениеСписка Из СписокФайлов Цикл
		Файл        = ЗначениеСписка.Значение;
		ДанныеФайла = СоздатьДанныеФайла(Файл.Имя, Файл.ПолноеИмя, 1);
		ТаблицаФайлов.Добавить(ДанныеФайла);
	КонецЦикла;
	
	ДанныеФайла = СоздатьДанныеФайла("outro.mpg", ГдеИскать + "\outro.mpg", 2);
	Если Ванесса.ФайлСуществуетКомандаСистемы(ДанныеФайла.ПолныйПуть) Тогда
		ТаблицаФайлов.Добавить(ДанныеФайла);
	КонецЕсли;	 
	
	ИмяФайлаСписка = ПолучитьИмяВременногоФайла("txt");
	ФайлИмяФайлаСписка = Новый Файл(ИмяФайлаСписка);
	ИмяФайлаСписка = ГдеИскать + "\" + ФайлИмяФайлаСписка.Имя;
	
	ЗТ = Новый ЗаписьТекста(ИмяФайлаСписка, "windows-1251", , Истина); 
	Для каждого СтрТаблицаФайлов Из ТаблицаФайлов Цикл
		ЗТ.ЗаписатьСтроку("file " + СтрТаблицаФайлов.Имя); 
	КонецЦикла;
	ЗТ.Закрыть();
	
	СобранноеВидео1 = ГдеИскать + "\mix1.mpg";
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -f concat -i " + ИмяФайлаСписка + " -c copy " + СобранноеВидео1;
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	
	ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
	ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
	ЗТ.ЗаписатьСтроку("" + Команда); 
	ЗТ.Закрыть();
	
	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидео1) Тогда
		ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по слиянию всех видео не выполнена."));
	КонецЕсли;	 
	
	
	// добавим водяной знак
	Состояние("Добавление водяного знака...");
	ИмяФайлаВодянойЗнак = ПараметрыВидео.ЗаписьВидеоФайлВодянойЗнак;
	Если СокрЛП(ИмяФайлаВодянойЗнак) = "" Тогда
		КомандаВодянойЗнак = "";
	Иначе
		Файл_watermark = Новый Файл(ИмяФайлаВодянойЗнак);
		Копияwatermark = ГдеИскать + "\" + Файл_watermark.Имя;
		Ванесса.КопироватьФайлКомандаСистемы(ИмяФайлаВодянойЗнак, Копияwatermark);
		
		КомандаВодянойЗнак = " -i " +  Файл_watermark.Имя + " -filter_complex overlay=main_w-overlay_w-10:main_h-overlay_h-10 ";
	КонецЕсли;	 
	
	СобранноеВидео3 = ГдеИскать + "\mix3.mpg";
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i mix1.mpg " 
		+ КомандаВодянойЗнак 
		+ " -qscale 1 -af ""aresample=async=1:first_pts=0"" -codec:a libmp3lame -q:a 0 " 
		+ СобранноеВидео3;
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
	ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
	ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
	ЗТ.ЗаписатьСтроку("" + Команда); 
	ЗТ.Закрыть();
	
	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидео3) Тогда
		Если КомандаВодянойЗнак = "" Тогда
			ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по перекодированю звука не выполнена."));
		Иначе	
			ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по добавлению водяной отметки и перекодированию звука не выполнена."));
		КонецЕсли;	 
	КонецЕсли;	 
	
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяВременногоФайла);
	
	СобранноеВидео4 = ГдеИскать + "\mix4.mp4";
	
	// конверт в mp4
	Состояние("Сжатие видео...");
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + СобранноеВидео3 + " -qscale 1 " + СобранноеВидео4;
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	
	ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
	ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
	ЗТ.ЗаписатьСтроку("" + Команда); 
	ЗТ.Закрыть();
	
	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидео4) Тогда
		ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по кодированию в mp4 не выполнена."));
	КонецЕсли;	 
	
	ИмяФайлаСобранноеВидео = "mix4.mp4";
	
	// добавляем музыку
	Состояние("Добавление музыки...");
	Если ПараметрыВидео.ФайлМузыки <> Неопределено Тогда
		
		Если ПараметрыВидео.ЗаписьВидеоЗаменитьСлайдЗаголовок 
			И ПараметрыВидео.ЗаписьВидеоДобавитьМузыкуКСлайдуЗаголовок Тогда
			
			ИмяФайлаСобранноеВидео = ДобавитьСлайдЗаголовокКСобранномуВидео(ПараметрыВидео, ГдеИскать, ИмяФайлаСобранноеВидео, СобранноеВидео4);
			
		КонецЕсли;
		
		Если ПараметрыВидео.ЗаписьВидеоЗаменитьСлайдФинал И ПараметрыВидео.ЗаписьВидеоДобавитьМузыкуКСлайдуФинал Тогда
			
			ИмяФайлаСобранноеВидео = ДобавитьСлайдФиналКСобранномуВидео(ПараметрыВидео, ГдеИскать, ИмяФайлаСобранноеВидео, СобранноеВидео4);
			
		КонецЕсли;
		
		СобранноеВидео4 = ГдеИскать + "\" + ИмяФайлаСобранноеВидео;
		ДлительностьВидео = Цел(ОпределитьДлительностьФайла(ПараметрыВидео, СобранноеВидео4)) + 1;
		mp3файл = ПолучитьMP3МузыкиНужнойДлительности(ПараметрыВидео, ДлительностьВидео);
		
		СобранноеВидео5 = ГдеИскать + "\mix5.mp4";
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
		ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
		// ЗТ.ЗаписатьСтроку("CHCP 65001"); 
		Команда = ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + mp3файл + " -i " 
			+ СобранноеВидео4 
			+ " -filter_complex ""[0:a]aformat=sample_fmts=fltp:sample_rates=44100:channel_layouts=stereo,volume=%MusicVolume[a1]; "
			+ "[1:a]aformat=sample_fmts=fltp:sample_rates=44100:channel_layouts=stereo,volume=1[a2]; "
			+ "[a1][a2]amerge,pan=stereo:c0<c0+c2:c1<c1+c3[out]"" -map 1:v -map ""[out]"" -c:v copy  -acodec libmp3lame -b:a 320k -shortest " 
			+ СобранноеВидео5;
		ГромкостьМузыки = "0.1";
		Если ЗначениеЗаполнено(ПараметрыВидео.ЗаписьВидеоГромкостьМузыки) Тогда
			ГромкостьМузыки = XMLСтрока(ПараметрыВидео.ЗаписьВидеоГромкостьМузыки);
			ГромкостьМузыки = СтрЗаменить(ГромкостьМузыки, ",", ".");
		КонецЕсли;	 
		
		Команда = СтрЗаменить(Команда, "%MusicVolume", ГромкостьМузыки);
		Ванесса.Отладка("ГромкостьМузыки=" + ГромкостьМузыки);
		
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		
		ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
		ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
		ЗТ.ЗаписатьСтроку("" + Команда); 
		ЗТ.Закрыть();
		
		ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидео5) Тогда
			ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по добавлению mp3 в ролик не выполнена."));
		КонецЕсли;
		ИмяФайлаСобранноеВидео = "mix5.mp4";
	Иначе	
		СобранноеВидео5 = СобранноеВидео4;
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоЗаменитьСлайдЗаголовок 
		И (НЕ ПараметрыВидео.ЗаписьВидеоДобавитьМузыкуКСлайдуЗаголовок ИЛИ ПараметрыВидео.ФайлМузыки = Неопределено) Тогда
		
		ИмяФайлаСобранноеВидео = ДобавитьСлайдЗаголовокКСобранномуВидео(ПараметрыВидео, ГдеИскать, ИмяФайлаСобранноеВидео, СобранноеВидео5);
		
	КонецЕсли;
	
	Если ПараметрыВидео.ЗаписьВидеоЗаменитьСлайдФинал 
		И (НЕ ПараметрыВидео.ЗаписьВидеоДобавитьМузыкуКСлайдуФинал Или ПараметрыВидео.ФайлМузыки = Неопределено) Тогда
		
		ИмяФайлаСобранноеВидео = ДобавитьСлайдФиналКСобранномуВидео(ПараметрыВидео, ГдеИскать, ИмяФайлаСобранноеВидео, СобранноеВидео5);
		
	КонецЕсли;
	
	СобранноеВидео5 = ГдеИскать + "\" + ИмяФайлаСобранноеВидео;
	
	КаталогВидео = ПараметрыВидео.КаталогВыгрузкиИнструкцийВидео + "\Video";
	
	ФинальноеИмя = КаталогВидео + "\result.mp4";
	Ванесса.УдалитьФайлыКомандаСистемы(ФинальноеИмя);	
	
	ФайлФинальноеИмя = Новый Файл(ФинальноеИмя);
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ФайлФинальноеИмя.Путь) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(ФайлФинальноеИмя.Путь);
	КонецЕсли;	 
	
	Ванесса.ПереместитьФайлКомандаСистемы(СобранноеВидео5, ФинальноеИмя);	
	
	ТекстСообщения = Ванесса.Локализовать("Создан файл: %1");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ФинальноеИмя);
	Ванесса.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

&НаКлиенте
Функция ДобавитьСлайдЗаголовокКСобранномуВидео(ПараметрыВидео, ГдеИскать, ИмяФайлаСВидео, СобранноеВидео)
	
	Если Ванесса.ФайлСуществуетКомандаСистемы(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуЗаголовок) Тогда
		
		ФайлIntro = Новый Файл(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуЗаголовок);
		СобранноеВидеоIntro = ГдеИскать + "\intro.mp4";
		
		Если ФайлIntro.Расширение = "mp4" Тогда
			
			Ванесса.КопироватьФайлКомандаСистемы(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуЗаголовок, СобранноеВидеоIntro);
			
		Иначе
			ПолноеИмяФайлаIntro = ГдеИскать + "\" + ФайлIntro.Имя;
			Ванесса.КопироватьФайлКомандаСистемы(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуЗаголовок, ПолноеИмяФайлаIntro);
			// конверт в mp4
			Состояние("Сжатие видео...");
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
			ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина);
			Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + ПолноеИмяФайлаIntro + " -qscale 1 "+ СобранноеВидеоIntro; 
			Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
			Ванесса.Отладка(Команда);
			ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
			ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
			ЗТ.ЗаписатьСтроку("" + Команда); 
			ЗТ.Закрыть();
			
			ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
			Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидеоIntro) Тогда
				ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по кодированию файла с заголовком фичи в mp4 не выполнена."));
			КонецЕсли;
			
		КонецЕсли;	 
		
		
		// Изменение параметров видео
		Состояние("Изменение параметров Intro...");
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
		ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина);
		СобранноеВидеоIntro2 = ГдеИскать + "\intro2.mp4";
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + СобранноеВидеоIntro 
			+ " -vf scale=<screenwidth>:<screenheight>,setdar=16:9,setsar=1:1 -c:a copy " + СобранноеВидеоIntro2; 
		Команда = СтрЗаменить(Команда, "<screenwidth>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранШирина,"ND=10; NG=0"));
		Команда = СтрЗаменить(Команда, "<screenheight>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранВысота,"ND=10; NG=0"));
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
		ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
		ЗТ.ЗаписатьСтроку("" + Команда); 
		ЗТ.Закрыть();
		
		ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидеоIntro2) Тогда
			ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по кодированию файла с заголовком фичи в mp4 не выполнена."));
		КонецЕсли;
		
		// Объединение видео
		СобранноеВидеоIntro = ГдеИскать + "\mixIntro.mp4";
	
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
		ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина);
		
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i intro2.mp4" + " -i " 
			+ ИмяФайлаСВидео 
			+ " -filter_complex ""[0:v]scale=<screenwidth>:<screenheight>:force_original_aspect_ratio=1[v0]; "
			+ "[1:v]scale=<screenwidth>:<screenheight>:force_original_aspect_ratio=1[v1]; "
			+ "[v0][0:a][v1][1:a]concat=n=2:v=1:a=1[v][a]"" -map [v] -map [a] " + СобранноеВидеоIntro;
		Команда = СтрЗаменить(Команда, "<screenwidth>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранШирина,"ND=10; NG=0"));
		Команда = СтрЗаменить(Команда, "<screenheight>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранВысота,"ND=10; NG=0"));
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		
		ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
		ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
		ЗТ.ЗаписатьСтроку("" + Команда); 
		ЗТ.Закрыть();
		
		ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидеоIntro) Тогда
			ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по слиянию файла с заголовком фичи с основным видео не выполнена."));
		КонецЕсли;
		ИмяФайлаСВидео = "mixIntro.mp4";
	КонецЕсли;

Возврат ИмяФайлаСВидео;
	
КонецФункции
	
&НаКлиенте
Функция ДобавитьСлайдФиналКСобранномуВидео(ПараметрыВидео, ГдеИскать, ИмяФайлаСВидео, СобранноеВидео)
	
	Если Ванесса.ФайлСуществуетКомандаСистемы(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуФинал) Тогда
		
		ФайлOutro = Новый Файл(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуФинал);
		СобранноеВидеоOutro = ГдеИскать + "\outro.mp4";
		
		Если ФайлOutro.Расширение = "mp4" Тогда
			
			Ванесса.КопироватьФайлКомандаСистемы(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуФинал, СобранноеВидеоOutro);
			
		Иначе
			ПолноеИмяФайлаOutro = ГдеИскать + "\" + ФайлOutro.Имя;
			Ванесса.КопироватьФайлКомандаСистемы(ПараметрыВидео.ЗаписьВидеоПутьКСлайдуФинал, ПолноеИмяФайлаOutro);
			// конверт в mp4
			Состояние("Сжатие видео...");
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
			ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина); 
			Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + ПолноеИмяФайлаOutro + " -qscale 1 " + СобранноеВидеоOutro;
			Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
			Ванесса.Отладка(Команда);
			ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
			ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
			ЗТ.ЗаписатьСтроку("" + Команда); 
			ЗТ.Закрыть();
			
			ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
			Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидеоOutro) Тогда
				ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по кодированию финального файла в mp4 не выполнена."));
			КонецЕсли;	 
		КонецЕсли;	 
		
		// Изменение параметров видео
		Состояние("Изменение параметров Outro...");
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
		ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина);
		СобранноеВидеоOutro2 = ГдеИскать + "\outro2.mp4";
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + СобранноеВидеоOutro 
			+ " -vf scale=<screenwidth>:<screenheight>,setdar=16:9,setsar=1:1 -c:a copy " + СобранноеВидеоOutro2; 
		Команда = СтрЗаменить(Команда, "<screenwidth>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранШирина,"ND=10; NG=0"));
		Команда = СтрЗаменить(Команда, "<screenheight>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранВысота,"ND=10; NG=0"));
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
		ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
		ЗТ.ЗаписатьСтроку("" + Команда); 
		ЗТ.Закрыть();
		
		ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидеоOutro2) Тогда
			ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по кодированию файла с заголовком фичи в mp4 не выполнена."));
		КонецЕсли;
		
		СобранноеВидеоOutro = ГдеИскать + "\mixOutro.mp4";
		ИмяФайлаСписка = ПолучитьИмяВременногоФайла("txt");
		ФайлИмяФайлаСписка = Новый Файл(ИмяФайлаСписка);
		ИмяФайлаСписка = ГдеИскать + "\" + ФайлИмяФайлаСписка.Имя;
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
		ЗТ = Новый ЗаписьТекста(ИмяВременногоФайла, "UTF-8", , Истина);
		
		Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + ИмяФайлаСВидео + " -i Outro2.mp4" 
			+ " -filter_complex ""[0:v]scale=<screenwidth>:<screenheight>:force_original_aspect_ratio=1[v0]; "
			+ "[1:v]scale=<screenwidth>:<screenheight>:force_original_aspect_ratio=1[v1]; "
			+ "[v0][0:a][v1][1:a]concat=n=2:v=1:a=1[v][a]"" -map [v] -map [a] " 
			+ СобранноеВидеоOutro;
		Команда = СтрЗаменить(Команда, "<screenwidth>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранШирина,"ND=10; NG=0"));
		Команда = СтрЗаменить(Команда, "<screenheight>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранВысота,"ND=10; NG=0"));
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		
		ЗТ.ЗаписатьСтроку("" + Лев(ГдеИскать, 2)); 
		ЗТ.ЗаписатьСтроку("CD "+ ГдеИскать); 
		ЗТ.ЗаписатьСтроку("" + Команда); 
		ЗТ.Закрыть();
		
		ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоФайла);
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(СобранноеВидеоOutro) Тогда
			ВызватьИсключение(Ванесса.Локализовать("Команда ffmpeg по слиянию финального файла с основным видео не выполнена."));
		КонецЕсли;
		ИмяФайлаСВидео = "mixOutro.mp4";
		
	КонецЕсли;
	
	Возврат ИмяФайлаСВидео;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьОткрытьКаталогВидео(КодВозврата, ДополнительныеПараметры) Экспорт
КонецПроцедуры

&НаКлиенте
Функция ЭтоШагПервыйВВеткеДерева(ПараметрыВидео, Шаг, МассивВставок, Сценарий)
	Если Шаг.Свойство("ВнутриГруппыКотораяРаботаетКакОдинШаг") Тогда
		Если Шаг.ВнутриГруппыКотораяРаботаетКакОдинШаг Тогда
			Возврат Ложь;
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	МассивСтрокДереваДанныеФормы = ПараметрыВидео.МассивСтрокДереваДанныеФормы;
	ИДСтрокиШага                 = Шаг.СтрокаШага;
	СтрокаШага                   = МассивСтрокДереваДанныеФормы[ИДСтрокиШага];
	
	РодительШага                 = СтрокаШага.ПолучитьРодителя();
	Если РодительШага.Тип = "Сценарий" Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	Если (РодительШага.Тип <> "Область") И (РодительШага.Тип <> "ШагСценарий") Тогда // только эти шаги идут как видеовставки
		Возврат Ложь;
	КонецЕсли;	 
	
	Если Сценарий.Свойство("ГруппыКоторыеНадоИгнорировать") Тогда
		Если Сценарий.ГруппыКоторыеНадоИгнорировать.Найти(РодительШага.ИдСтроки) <> Неопределено Тогда
			// Значит у группы стоит признак #[autodoc.ignorestep]
			Возврат Ложь;
		КонецЕсли;	 
	КонецЕсли;	 
	
	ЭлементыРодителя             = РодительШага.ПолучитьЭлементы();
	Индекс                       = ЭлементыРодителя.Индекс(СтрокаШага);
	Если Индекс = 0 Тогда
		// добавим верхние шаги тоже, если они являются ветками
		ШагРодитель = Новый Структура;
		ШагРодитель.Вставить("СтрокаШага", РодительШага.ИдСтроки);
		ШагРодитель.Вставить("Имя", РодительШага.Имя);
		ЭтоШагПервыйВВеткеДерева(ПараметрыВидео, ШагРодитель, МассивВставок, Сценарий);
		
		МассивВставок.Добавить(РодительШага.Имя);
		Возврат Истина;
	КонецЕсли;	 
	
	Возврат Ложь;
КонецФункции	

&НаКлиенте
Функция ЭтоВложенныйШагВнутриОбъединеннойГруппы(Шаг)
	Если Шаг.Свойство("ВнутриГруппыКотораяРаботаетКакОдинШаг") Тогда
		Если Шаг.ВнутриГруппыКотораяРаботаетКакОдинШаг Тогда
			Если НЕ Шаг.ПервыйВГруппеШагов Тогда
				// Значит это шаг, который находится в группе, котороя объединена в один шаг
				Возврат Истина;
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	 
	
	Возврат Ложь;
КонецФункции	


&НаКлиенте
Процедура ОбработатьИнструкцииАвтоВидео(ПараметрыВидео)
	КолШагов  = ПолучитьКоличествоШагов(ПараметрыВидео.МассивСценариевДляВыполнения);
	ТекИДШага = 0;
	
	НомерСценария = -1;
	МассивСценариевДляВыполнения = ПараметрыВидео.МассивСценариевДляВыполнения;
	Для каждого Сценарий Из МассивСценариевДляВыполнения Цикл
		НомерСценария = НомерСценария + 1;
		Шаги = Сценарий.Шаги;
		
		Если Не Сценарий.Свойство("МассивТекстФичи") Тогда
			МассивТекстФичи = ЗагрузитьФайлВМассив(Сценарий.ПолныйПутьКФиче);
			Сценарий.Вставить("МассивТекстФичи", МассивТекстФичи);
		КонецЕсли;	 
		
		НомерШага = -1;
		Для каждого Шаг Из Шаги Цикл
			НомерШага = НомерШага + 1;
			ТекИДШага = ТекИДШага + 1;
			Если Шаг.ЭтоШагКонтекста Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если Шаг.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
				Если Шаг.ИгнорироватьШагВАвтоинструкции Тогда
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			Если ЭтоВложенныйШагВнутриОбъединеннойГруппы(Шаг) Тогда
				Продолжить;
			КонецЕсли;	 
			
			Текст = "";
			ПолучитьТекстШагаИзТекстаФичиЕслиОнТамЗадан(ПараметрыВидео, Текст, Шаг, Сценарий);
			Если Не ЗначениеЗаполнено(Текст) Тогда
				Если ЗначениеЗаполнено(Шаг.ТекстИнструкция) Тогда
					Текст = Шаг.ТекстИнструкция;
				Иначе	
					Текст = Шаг.Имя;
				КонецЕсли;	 	
			Иначе
				Шаг.ТекстИнструкция = Текст;
			КонецЕсли;	 
			
			Шаг.Вставить("ТекстИнструкция", Текст);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры 

&НаКлиенте
Процедура ЗавершитьЗаписьИнструкцииВидео(ПараметрыВидео)
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьФайлыTTS Тогда
		ПараметрыВидео.Вставить("ДанныеКэшMp3", ДанныеКэшMp3(ПараметрыВидео));
		КаталогГдеЛежитКэшMp3 = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшФайловTTS);
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьВидеоВставки Тогда
		ПараметрыВидео.Вставить("ДанныеКэшВидеоВставки", ДанныеКэшВидеоВставки(ПараметрыВидео));
		КаталогГдеЛежитКэшMp3 = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшФайловTTS);
	КонецЕсли;	 
	
	ОбработатьИнструкцииАвтоВидео(ПараметрыВидео);
	СоздатьФайлыTTS(ПараметрыВидео);
	
	СоздатьIntro(ПараметрыВидео);
	СоздатьOutro(ПараметрыВидео);
	
	МассивЧастей = Новый Массив;
	
	КолШагов  = ПолучитьКоличествоШагов(ПараметрыВидео.МассивСценариевДляВыполнения);
	ТекИДШага = 0;
	
	НомерСценария = -1;
	МассивСценариевДляВыполнения = ПараметрыВидео.МассивСценариевДляВыполнения;
	Для каждого Сценарий Из МассивСценариевДляВыполнения Цикл
		НомерСценария = НомерСценария + 1;
		Шаги = Сценарий.Шаги;
		
		ИмяСценария = Сценарий.Имя;
		
		Если Сценарий.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
			Если Сценарий.ИгнорироватьШагВАвтоинструкции Тогда
				Продолжить;
			КонецЕсли;	 
		КонецЕсли;	 
		
		ДобавитьСлайдСценария = Истина;
		Если Сценарий.Свойство("ИгнорироватьСлайдСценарияВАвтоинструкции") Тогда
			Если Сценарий.ИгнорироватьСлайдСценарияВАвтоинструкции Тогда
				ДобавитьСлайдСценария = Ложь;
			КонецЕсли;	 
		КонецЕсли;	 
		
		Если ДобавитьСлайдСценария Тогда
			ИмяФайлаЗаголовкаСценария = СоздатьЗаголовокСценария(ПараметрыВидео, ИмяСценария, НомерСценария);
			ФайлЧасти = Новый Файл(ИмяФайлаЗаголовкаСценария);
			МассивЧастей.Добавить(ФайлЧасти);
		КонецЕсли;	 
		
		НомерШага = -1;
		Для каждого Шаг Из Шаги Цикл
			НомерШага = НомерШага + 1;
			ТекИДШага = ТекИДШага + 1;
			
			Если Шаг.ЭтоШагКонтекста Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если ЭтоВложенныйШагВнутриОбъединеннойГруппы(Шаг) Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если Шаг.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
				Если Шаг.ИгнорироватьШагВАвтоинструкции Тогда
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			ПараметрыВидео.Вставить("ТекИД_СценарияВМассиве", НомерСценария);
			ПараметрыВидео.Вставить("ТекИД_ШагаВМассиве", НомерШага);
			
			ПараметрыГолоса = ПолучитьПараметрыГолоса(ПараметрыВидео, Шаг.МассивТеговШага);

			ИмяФайлаШага = ПолучитьИмяФайлаВидеоШага(ПараметрыВидео);
			
			МассивВставок = Новый Массив;
			Если ЭтоШагПервыйВВеткеДерева(ПараметрыВидео, Шаг, МассивВставок, Сценарий) Тогда
				СчетчикВставок = 0;
				Для Каждого ТекстВставкиВеткиДерева Из МассивВставок Цикл
					СчетчикВставок = СчетчикВставок + 1;
					ИмяФайлаШагаВетки = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" 
						+ СтрЗаменить(ИмяФайлаШага, "_main.", "_ins" + СчетчикВставок + ".");
					СобратьВидеоВставкуИзТекста(ПараметрыВидео, ИмяФайлаШагаВетки, ТекстВставкиВеткиДерева, НомерСценария, НомерШага, ПараметрыГолоса);
					ФайлЧасти = Новый Файл(ИмяФайлаШагаВетки);
					МассивЧастей.Добавить(ФайлЧасти);
				КонецЦикла;	
			КонецЕсли;	 
			
			Если Шаг.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
				Если Шаг.ИгнорироватьШагВАвтоинструкции Тогда
					Ванесса.УдалитьФайлыКомандаСистемы(ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ИмяФайлаШага);
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			ТекстДляПрогресБара = Шаг.ТекстИнструкция;
			Если НЕ ЗначениеЗаполнено(ТекстДляПрогресБара) Тогда
				ТекстДляПрогресБара = Шаг.Имя;
			КонецЕсли;	 
			
			Прогресс = Цел((ТекИДШага / КолШагов) * 100);
			Состояние("Обработка видеофайлов шагов", Прогресс,"Сценарий №" + (НомерСценария + 1) + ", шаг №" + (НомерШага + 1) + ". " + ТекстДляПрогресБара);
			
			ФайлИмяФайлаВидеоШага = Новый Файл(ИмяФайлаШага);
			ИмяMp3Шага            = ФайлИмяФайлаВидеоШага.ИмяБезРасширения + ".mp3";// файл имеет такое же имя
			
			ИмяФайлаШага          = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\"    + ИмяФайлаШага;
			ИмяMp3Шага            = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS\" + ИмяMp3Шага;
			
			Если Ванесса.ЭтоПрерывающйВидеоШаг(Шаг) Тогда
				СобратьВидеоВставкуИзТекста(ПараметрыВидео, ИмяФайлаШага, Шаг.ЗначенияПараметров[0].Значение.Значение, НомерСценария, НомерШага, ПараметрыГолоса);
			ИначеЕсли Ванесса.ЭтоШагВидеовставкиКартинки(Шаг) Тогда
				СобратьВидеоВставкуИзКартинки(ПараметрыВидео, ИмяФайлаШага,
				Шаг.ЗначенияПараметров[1].Значение.Значение, // текст диктора
				Шаг.ЗначенияПараметров[0].Значение.Значение, // имя картинки
				НомерСценария, НомерШага, ПараметрыГолоса);
			Иначе
				// надо масштабировать файл видео, чтобы он и звук правильно соотносились
				ДлительностьВидео = Окр(ОпределитьДлительностьФайла(ПараметрыВидео, ИмяФайлаШага), 2);
				Если ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
					ДлительностьMP3   = Окр(ОпределитьДлительностьФайла(ПараметрыВидео, ИмяMp3Шага), 2);
				Иначе	
					ДлительностьMP3 = 5;// непонятно подо что подгонять длительность шага если не было озвучки
				КонецЕсли;	 
				
				Если ДлительностьВидео < (ДлительностьMP3 + 0.5) Тогда
					// Значит надо замедлить видео
					НоваяДлительностьВидео = ДлительностьMP3 + 0.5;
					УскоритьЗамедлитьФайлВидеоИДобавитьMp3(ПараметрыВидео, ИмяФайлаШага, ИмяMp3Шага, ДлительностьВидео, НоваяДлительностьВидео, ДлительностьMP3);
				ИначеЕсли ДлительностьВидео > (ДлительностьMP3 + 1) И Шаг.МасштабироватьВВидео Тогда
					// Значит надо ускорить видео
					НоваяДлительностьВидео = ДлительностьMP3 + 1;
					УскоритьЗамедлитьФайлВидеоИДобавитьMp3(ПараметрыВидео, ИмяФайлаШага, ИмяMp3Шага, ДлительностьВидео, НоваяДлительностьВидео, ДлительностьMP3);
				Иначе
					// Значит не меняем длительность видео, передаём -1
					УскоритьЗамедлитьФайлВидеоИДобавитьMp3(ПараметрыВидео, ИмяФайлаШага, ИмяMp3Шага, ДлительностьВидео,  -1, ДлительностьMP3);
				КонецЕсли;	 
				
				ДобавитьСубтитрыКВидео(ПараметрыВидео, ИмяФайлаШага, Шаг, ДлительностьMP3);
			КонецЕсли;	 
			
			ФайлЧасти = Новый Файл(ИмяФайлаШага);
			МассивЧастей.Добавить(ФайлЧасти);
			
		КонецЦикла;
		
	КонецЦикла;	
	
	СобратьФинальноеВидеоИзЧастей(ПараметрыВидео, МассивЧастей);
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьФайлыTTS Тогда
		ВыгрузитьКэшMp3(ПараметрыВидео);
	КонецЕсли;	 
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьВидеоВставки Тогда
		ВыгрузитьКэшВидеоВставок(ПараметрыВидео);
	КонецЕсли;	 
КонецПроцедуры 

&НаКлиенте
Процедура ЗавершитьЗаписьИнструкцииHTML(ПараметрыВидео)
	
	КолШагов  = ПолучитьКоличествоШагов(ПараметрыВидео.МассивСценариевДляВыполнения);
	
	КаталогHTML = ПараметрыВидео.КаталогВыгрузкиИнструкцийВидео + "\HTML";
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогHTML) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(КаталогHTML);
	КонецЕсли;	 
	
	Ванесса.ОчиститьСодержимоеКаталога(КаталогHTML);
	
	ИмяФайлаДляЗаписи = КаталогHTML + "\result.html";
	КаталогФайловСтраницы  = КаталогHTML + "\files";
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогФайловСтраницы) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(КаталогФайловСтраницы);
	КонецЕсли;	 
	
	Страница = Новый ЗаписьТекста(ИмяФайлаДляЗаписи, КодировкаТекста.UTF8);
	Страница.ЗаписатьСтроку("<!DOCTYPE html>");
	Страница.ЗаписатьСтроку("<html>");
	Страница.ЗаписатьСтроку("
	|<head>
	|  <style>
	|    h1 {
	|      text-align: center;
	|      font-size: 35px
	|    }
	
	|    p {
	|      text-align: left;
	|      font-size: 30px;
	|    }
	
	|    div {
	|      text-align: center;
	|    }
	|  </style>
	|  <script>
	|    function fullscreen(self) {
	|      if (self.requestFullscreen) {
	|        self.requestFullscreen();
	|      }
	|      else if (self.webkitRequestFullscreen) {
	|        self.webkitRequestFullscreen();
	|      }
	|      else if (self.mozRequestFullScreen) {
	|        self.mozRequestFullScreen();
	|      }
	|      else if (self.msRequestFullscreen) {
	|        self.msRequestFullscreen();
	|      }
	|    }
	|  </script>
	|</head>
	|");
	Страница.ЗаписатьСтроку("<body>");	
	
	СнипетыПрерывающиеЗаписьСценария = Ванесса.ПолучитьМассивСнипетовПрерывающихЗаписьСценария();
	СнипетыСубтитры                  = Ванесса.ПолучитьМассивСнипетовСубтитров();
	
	НомерСценария = -1;
	МассивСценариевДляВыполнения = ПараметрыВидео.МассивСценариевДляВыполнения;
	Для каждого Сценарий Из МассивСценариевДляВыполнения Цикл
		Страница.ЗаписатьСтроку("<h1><p align=""center"" style=""font-size:35px"">" + Сценарий.Имя + "</p></h1>");		
		Страница.ЗаписатьСтроку("");
		
		ИмяФичи = Сценарий.ИмяФичи;
		ИмяФичи = Ванесса.УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяФичи);
		ИмяФичи = СтрЗаменить(ИмяФичи, " ", "_");
		
		НомерСценария = НомерСценария + 1;
		Шаги = Сценарий.Шаги;
		
		Если Сценарий.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
			Если Сценарий.ИгнорироватьШагВАвтоинструкции Тогда
				Продолжить;
			КонецЕсли;	 
		КонецЕсли;	 
		
		НомерШага = 0;
		ТекИДШага = -1;
		Для каждого Шаг Из Шаги Цикл
			ТекИДШага = ТекИДШага + 1;
			
			Если Шаг.ЭтоШагКонтекста Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если ЭтоВложенныйШагВнутриОбъединеннойГруппы(Шаг) Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если Шаг.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
				Если Шаг.ИгнорироватьШагВАвтоинструкции Тогда
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			// проверка видеовставок
			СнипетНрег = Нрег(Шаг.Снипет);
			Поз = Найти(СнипетНрег, "(");
			Если Поз > 0 Тогда
				СнипетНрег = Лев(СнипетНрег, Поз - 1);
			КонецЕсли;	 
			
			
			ИмяШага = Шаг.ТекстИнструкция;
			Если НЕ ЗначениеЗаполнено(ИмяШага) Тогда
				ИмяШага = Шаг.Имя;
			КонецЕсли;	
			
			ИмяШага = УбратьСпецсимволыИзНачалаСтроки(ИмяШага);
			ИмяШага = ПодготовитьСтрокуДляСубтитров(ИмяШага);
			
			ПараметрыВидео.Вставить("ТекИД_СценарияВМассиве", НомерСценария);
			ПараметрыВидео.Вставить("ТекИД_ШагаВМассиве", ТекИДШага);
			
			ИмяФайлаШага = ПолучитьИмяФайлаВидеоШага(ПараметрыВидео);
			
			Если СнипетыПрерывающиеЗаписьСценария.Найти(СнипетНрег) <> Неопределено
			Или  СнипетыСубтитры.Найти(СнипетНрег) <> Неопределено
				Тогда
				НомерШага = НомерШага + 1;
				Стр = "<p><b>%1</b>. %2</p>";
				Стр = СтрЗаменить(Стр, "%1", Ванесса.ПолучитьФорматированныйНомер(НомерШага, 3));
				Стр = СтрЗаменить(Стр, "%2", ИмяШага);
				Страница.ЗаписатьСтроку(Стр);
				
				Продолжить;
			КонецЕсли;	 
			
			Если Шаг.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
				Если Шаг.ИгнорироватьШагВАвтоинструкции Тогда
					Ванесса.УдалитьФайлыКомандаСистемы(ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ИмяФайлаШага);
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			Прогресс = Цел((ТекИДШага / КолШагов) * 100);
			Состояние("Обработка видеофайлов шагов", Прогресс,"Сценарий №" + (НомерСценария + 1) + ", шаг №" + (НомерШага + 1) + ". " + ИмяШага);
			
			
			Если НЕ Ванесса.ЭтоПрерывающйВидеоШаг(Шаг) Тогда
			
				НомерШага = НомерШага + 1;
				Стр = "<p><b>%1</b>. %2</p>";
				Стр = СтрЗаменить(Стр, "%1", Ванесса.ПолучитьФорматированныйНомер(НомерШага, 3));
				Стр = СтрЗаменить(Стр, "%2", ИмяШага);
				Страница.ЗаписатьСтроку(Стр);
				
				Страница.ЗаписатьСтроку("<div>");
				Страница.ЗаписатьСтроку(
					"  <video width=""1280"" height=""720"" loop onmouseover=""this.play()"" onmouseout=""this.pause()"" onclick=""fullscreen(this)"">");
				
				ФайлИмяФайлаВидеоШага = Новый Файл(ИмяФайлаШага);
				ИмяФайлаШага          = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\" + ИмяФайлаШага;
				ВременныйФайлWebm     = СконвертироватьФайлВWebm(ПараметрыВидео, ИмяФайлаШага);
				Файл = Новый Файл(ИмяФайлаШага);
				Ванесса.ПереместитьФайлКомандаСистемы(ВременныйФайлWebm, КаталогФайловСтраницы + "\" + Файл.ИмяБезРасширения + ".webm");
				
				
				Стр = "    <source src=""files/%1"" type='video/webm; codecs=""vp8, vorbis""'>";
				Стр = СтрЗаменить(Стр, "%1", Файл.ИмяБезРасширения + ".webm");
				Страница.ЗаписатьСтроку(Стр);
				Страница.ЗаписатьСтроку("  </video>");
				Страница.ЗаписатьСтроку("</div>");
				
			КонецЕсли;	 
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Страница.ЗаписатьСтроку("</body>");
	Страница.ЗаписатьСтроку("</html>");
	
КонецПроцедуры 

&НаКлиенте
Функция СконвертироватьФайлВWebm(ПараметрыВидео, ИмяФайлаИсходник)
	ИмяФайлаВидеоВременный = ПолучитьИмяВременногоФайла("webm");
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i " + ИмяФайлаИсходник + "  " + ИмяФайлаВидеоВременный;
	
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
	Ванесса.Отладка(Команда);
	ВыполнитьКоманду(ПараметрыВидео, Команда);
	
	Возврат ИмяФайлаВидеоВременный;
КонецФункции	 

&НаКлиенте
Процедура ЗавершитьЗаписьВидео(ПараметрыВидео) Экспорт
	Если ПараметрыВидео.ЗаписьВидеоФормироватьИнструкциюТипHTML Тогда
		ЗавершитьЗаписьИнструкцииHTML(ПараметрыВидео);
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоФормироватьИнструкциюТипВидео Тогда
		ЗавершитьЗаписьИнструкцииВидео(ПараметрыВидео);
	КонецЕсли;	 
	
	КаталогВидео = ПараметрыВидео.КаталогВыгрузкиИнструкцийВидео;
	Если Не Ванесса.Объект.РежимСамотестирования  // чтобы не блокировался каталог
	   И Не Ванесса.ЭтоЗапускВРежимеКоманднойСтроки // чтобы не открыть каталог в режиме запуска из командной строки
	   Тогда 
		Если Ванесса.ЕстьПоддержкаАсинхронныхВызовов Тогда
			ОписаниеОповещения = Вычислить("Новый ОписаниеОповещения(""ОбработатьОткрытьКаталогВидео"", ЭтаФорма)");
			Выполнить("НачатьЗапускПриложения(ОписаниеОповещения, КаталогВидео)");
		Иначе	
			ЗапуститьПриложение("""" + КаталогВидео + """");
		КонецЕсли;	 
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтрокуПоСловарю(ПараметрыВидео, ИсходнаяСтрока)
	Если ПараметрыВидео.ЗаписьВидеоСловарьЗамен.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого ЭлементСловоряЗамен Из ПараметрыВидео.ЗаписьВидеоСловарьЗамен Цикл
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ЭлементСловоряЗамен.Значение) Тогда
			ТекстСообщения = Ванесса.Локализовать("Не найден файл словаря замен. <%1>");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ЭлементСловоряЗамен.Значение);
			Ванесса.СообщитьПользователю(ТекстСообщения);
			ТекстСообщения = Ванесса.Локализовать("Не найден файл словаря замен. <%1>");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ЭлементСловоряЗамен.Значение);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	 
		
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ЭлементСловоряЗамен.Значение, "UTF-8");
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;	 
			
			Если СокрЛП(Стр) = "" Тогда
				Продолжить;
			КонецЕсли;	 
			
			Массив = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(Стр, "|");
			
			ИсходнаяСтрока = СтрЗаменить(ИсходнаяСтрока, Массив[0], Массив[1]);
		КонецЦикла;	
		
		Текст.Закрыть();
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура УбратьЛишниеСимволыИзТекста(Текст)
	Текст = СтрЗаменить(Текст, Символы.Таб," ");
	Текст = СтрЗаменить(Текст, Символы.ВТаб," ");
	
	Пока Найти(Текст,"  ") > 0 Цикл
		Текст = СтрЗаменить(Текст,"  "," ");
	КонецЦикла;	 
КонецПроцедуры

&НаКлиенте
Процедура УбратьНачалоСтроки(Текст, НачалоСтроки)
	Стр = НРег(НачалоСтроки + " """);// далее идёт параметр
	Если (Лев(НРег(Текст), СтрДлина(Стр)) = Стр) Тогда
		Текст = Сред(Текст, СтрДлина(Стр) + 1);
	КонецЕсли;	 
	
	Стр = НРег(НачалоСтроки + " '");// далее идёт параметр
	Если (Лев(НРег(Текст), СтрДлина(Стр)) = Стр) Тогда
		Текст = Сред(Текст, СтрДлина(Стр) + 1);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура УбратьЧастьСлужебныхШаговКоторыеОтвечаютЗаНаборТекста(Текст)
	УбратьНачалоСтроки(Текст,"и я пишу");
	УбратьНачалоСтроки(Текст,"и я добавляю строку");
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВременныйФайлШагДляФормированияMp3(ПараметрыВидео, Знач Текст, ТекстДляMp3)
	ОбработатьСтрокуПоСловарю(ПараметрыВидео, Текст);
	
	УбратьЛишниеСимволыИзТекста(Текст);
	
	УбратьЧастьСлужебныхШаговКоторыеОтвечаютЗаНаборТекста(Текст);
	
	
	Текст = СтрЗаменить(Текст, "\n", "");
	Текст = СтрЗаменить(Текст, "\"," ");
	Текст = СтрЗаменить(Текст, "|"," ");
	// в некоторых случаях это обозначает ударение
	Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 0 Тогда
		Текст = СтрЗаменить(Текст, "^", "-");
	ИначеЕсли ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 1 Тогда
		Текст = СтрЗаменить(Текст, "^", "+");
	Иначе
		Текст = СтрЗаменить(Текст, "^", "+");
	КонецЕсли;	 
	Текст = СокрЛП(Текст);
	Если Прав(Текст, 1) <> "." И Прав(Текст, 1) <> "!" И Прав(Текст, 1) <> "?" Тогда
		Текст = Текст + ".";
	КонецЕсли;	 
	
	Если Лев(Текст, 1) = "*" Тогда
		Текст = УбратьСпецсимволыИзНачалаСтроки(Текст);
	КонецЕсли;	 
	
	ИмяФайла = ПолучитьИмяВременногоФайла("txt");
	ЗТ = Новый ЗаписьТекста(ИмяФайла, "utf-8", , Ложь); 
	ЗТ.Записать(Текст); 
	ЗТ.Закрыть();
	
	ТекстДляMp3 = Текст;
	
	Возврат ИмяФайла;
КонецФункции	

&НаКлиенте
Функция ЗагрузитьФайлВстроку(ИмяФайла)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, "UTF-8");
	
	Стр = Текст.Прочитать();
	
	Текст.Закрыть();
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Функция ЗагрузитьФайлВМассив(ИмяФайла)
	Массив = Новый Массив;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, "UTF-8");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Массив.Добавить(Стр);
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат Массив;
КонецФункции	

&НаКлиенте
Функция ПолучитьФайлMP3ИзТекста(ПараметрыВидео, Текст, Знач ИмяФайла, ПараметрыГолоса = Неопределено)
	Если НЕ ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		Возврат Неопределено;
	КонецЕсли;	 
	
	Если ПараметрыГолоса = Неопределено Тогда
		ПараметрыГолоса = ПолучитьПараметрыГолосаПоУмолчанию(ПараметрыВидео);
	КонецЕсли;

	ИсходныйТекст = Текст;
	ИмяФайлаШага = ИмяФайла;
	
	// получение wav
	ТекстДляMp3 = "";
	ВременныйФайлШаг = ПолучитьВременныйФайлШагДляФормированияMp3(ПараметрыВидео, Текст, ТекстДляMp3);
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьФайлыTTS И ПараметрыВидео.Свойство("ДанныеКэшMp3") Тогда
		Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 0 Тогда
			Если ПараметрыВидео.ДанныеКэшMp3[ТекстДляMp3] <> Неопределено Тогда
				КаталогГдеЛежитКэшMp3 = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшФайловTTS);
				КаталогФайлов = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS";
				Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогФайлов) Тогда
					Ванесса.СоздатьКаталогКомандаСистемы(КаталогФайлов);
				КонецЕсли;	 
				
				ИмяФайла = КаталогФайлов + "\" + ИмяФайлаШага + ".mp3";
				Источник = КаталогГдеЛежитКэшMp3 + "\" + ПараметрыВидео.ДанныеКэшMp3[ТекстДляMp3];
				Если Ванесса.ФайлСуществуетКомандаСистемы(Источник) Тогда
					Ванесса.КопироватьФайлКомандаСистемы(Источник, ИмяФайла);
					Возврат ИмяФайла;
				Иначе
					ПараметрыВидео.ДанныеКэшMp3.Удалить(ТекстДляMp3);
				КонецЕсли;	
			КонецЕсли;
		Иначе	
			Если ПараметрыГолоса.ТипОзвучки = 1 Тогда
				СтрокаПоиск =  ПараметрыГолоса.Префикс + ПараметрыГолоса.Голос + РазделительСтроки 
								+ ПараметрыВидео.ЗаписьВидеоYandexTTSСкорость + РазделительСтроки
								+ ПараметрыГолоса.Эмоция + РазделительСтроки
								+ ТекстДляMp3;
			Иначе
				СтрокаПоиск =  ПараметрыГолоса.Префикс + ПараметрыГолоса.Голос + РазделительСтроки 
								+ ПараметрыГолоса.Язык + РазделительСтроки  
								+ ТекстДляMp3;
			КонецЕсли;
			
			Источник = ПараметрыВидео.ДанныеКэшMp3[СтрокаПоиск];				
			Если Источник <> Неопределено Тогда
				Если Ванесса.ФайлСуществуетКомандаСистемы(Источник) Тогда
					КаталогФайлов = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS";
					Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогФайлов) Тогда
						Ванесса.СоздатьКаталогКомандаСистемы(КаталогФайлов);
					КонецЕсли;	 
					
					ИмяФайла = КаталогФайлов + "\" + ИмяФайлаШага + ".mp3";
					Ванесса.КопироватьФайлКомандаСистемы(Источник, ИмяФайла);
					Возврат ИмяФайла;
				Иначе
					ПараметрыВидео.ДанныеКэшMp3.Удалить(СтрокаПоиск);
				КонецЕсли;	
			КонецЕсли;	
	
		КонецЕсли;		 
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 0 Тогда
		// озвучка от Microsoft
		AudioEngine         = ПараметрыВидео.ЗаписьВидеоПутьКДвижкуTTS;
		КаталогДляФайловTTS = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS";
		ffmpeg              = ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg;
		
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДляФайловTTS) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогДляФайловTTS);
		КонецЕсли;	 
		
		ЛогФайл = ПолучитьИмяВременногоФайла("txt");
		
		ИмяWAV = КаталогДляФайловTTS + "\" + ИмяФайла + ".wav";
		Команда = """" + AudioEngine + """ -f " + ВременныйФайлШаг + " -w " + ИмяWAV +  " -fr 44 -bt 16 -ch 2 -s %1  -n """ 
			+ ПараметрыВидео.ЗаписьВидеоИмяTTS + """ > """ + ЛогФайл + """ 2>&1";
		Команда = СтрЗаменить(Команда, "%1", XMLСтрока(ПараметрыВидео.ЗаписьВидеоСкоростьПроизношения));
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео, Истина);
		Ванесса.Отладка(Команда);
		
		КомандаСистемыЧерезBat(ПараметрыВидео, Команда);
		
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ИмяWAV) Тогда
			ТекстСообщения = "Не получилось создать файл TTS <%1>.";
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяWAV); 
			ТекстСообщения = ТекстСообщения + Символы.ПС + ЗагрузитьФайлВстроку(ЛогФайл);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	 
		
		Ванесса.УдалитьФайлыКомандаСистемы(ВременныйФайлШаг);
		
		// получение mp3
		ИмяMP3 = СтрЗаменить(ИмяWav, "wav", "mp3");
		Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяMP3) Тогда
			Ванесса.УдалитьФайлыКомандаСистемы(ИмяMP3);
		КонецЕсли;	 
		Команда = "" + ffmpeg + " -i " + ИмяWav + " -vn -ar 44100 -ac 2 -ab 192k -f mp3 -af ""volume=1.15"" " + ИмяMP3;
		Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
		Ванесса.Отладка(Команда);
		
		ВыполнитьКоманду(ПараметрыВидео, Команда);
		Ванесса.УдалитьФайлыКомандаСистемы(ИмяWav);

	ИначеЕсли ПараметрыГолоса.ТипОзвучки = 1 Тогда
		//Озвучка от Yandex

		iamToken = ПолучитьiamToken(ПараметрыВидео);
		ЧтениеТекста = Новый ЧтениеТекста;
		ЧтениеТекста.Открыть(ВременныйФайлШаг, "UTF-8");
		ТекстДляMp3 = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
		
		ИмяMP3 = ПолучитьMP3ИзТекстаYandexSpeechkit(ПараметрыВидео, iamToken, ТекстДляMp3, ИмяФайла, ПараметрыГолоса);
	Иначе	
		// Озвучка от Amazon
		ЧтениеТекста = Новый ЧтениеТекста;
		ЧтениеТекста.Открыть(ВременныйФайлШаг, "UTF-8");
		ТекстДляMp3 = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();

		ИмяMP3 = ПолучитьMP3ИзТекстаAmazonPoly(ПараметрыВидео,ТекстДляMp3,ИмяФайла, ПараметрыГолоса);

	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьФайлыTTS Тогда
		ДобавитьMp3ШагаВКэш(ИмяMP3, ТекстДляMp3, ПараметрыВидео, ПараметрыГолоса);
	КонецЕсли;	 
	
	Возврат ИмяMP3;
КонецФункции	

&НаСервереБезКонтекста
Функция urlencode(Text)
	TextUTF8 = КодироватьСтроку(Text, СпособКодированияСтроки.КодировкаURL , "UTF-8");
	Возврат TextUTF8;
КонецФункции

&НаСервереБезКонтекста
Функция КодироватьПараметрыЗапроса(ПараметрыЗапроса)
	// https://github.com/vbondarevsky/Connector/blob/master/src/CommonModules/%D0%9A%D0%BE%D0%BD%D0%BD%D0%B5%D0%BA%D1%82%D0%BE%D1%80HTTP/Ext/Module.bsl
	// Часть проекта "Коннектор: удобный HTTP-клиент для 1С:Предприятие 8"
	
	ЧастиПараметрыЗапроса = Новый Массив;
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		Если ТипЗнч(Параметр.Значение) = Тип("Массив") Тогда
			Значения = Параметр.Значение;
		Иначе
			Значения = Новый Массив;
			Значения.Добавить(Параметр.Значение);
		КонецЕсли;
		
		Для Каждого Значение Из Значения Цикл
			ЗначениеПараметра = КодироватьСтроку(Значение, СпособКодированияСтроки.URLВКодировкеURL);
			Стр = "%1=%2";
			Стр = СтрЗаменить(Стр, "%1", Параметр.Ключ); 
			Стр = СтрЗаменить(Стр, "%2", ЗначениеПараметра); 
			ЧастиПараметрыЗапроса.Добавить(Стр);
		КонецЦикла;
	КонецЦикла;
	
	Если ЧастиПараметрыЗапроса.Количество() = 0 Тогда
		Возврат "";
	ИначеЕсли ЧастиПараметрыЗапроса.Количество() = 1 Тогда
		Возврат ЧастиПараметрыЗапроса[0];
	КонецЕсли;	 
	
	Стр = "";
	Для Ккк = 0 По ЧастиПараметрыЗапроса.Количество() - 2 Цикл
		Стр = Стр + ЧастиПараметрыЗапроса[Ккк] + "&";
	КонецЦикла;	
	Стр = Стр + ЧастиПараметрыЗапроса[ЧастиПараметрыЗапроса.Количество() - 1];
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция СериализоватьКакJson(Данные)
	
	НастройкиСериализации = Новый НастройкиСериализацииJSON;
	НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
		
	ПараметрыЗаписиJSON = Вычислить("Новый ПараметрыЗаписиJSON(
		|ПереносСтрокJSON.Нет,
		|"" "",    // СимволыОтступа
		|Истина, // ИспользоватьДвойныеКавычки
		|ЭкранированиеСимволовJSON.Нет,
		|Ложь,   // ЭкранироватьУгловыеСкобки
		|Истина, // ЭкранироватьАмперсанд
		|Ложь,   // ЭкранироватьОдинарныеКавычки
		|Ложь,   // ЭкранироватьРазделителиСтрок
		|Ложь    // ЭкранироватьСлеш
	|)");	
		
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Данные, НастройкиСериализации);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

&НаСервереБезКонтекста
Функция ХешSHA256КакHexСтрока(Text)
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA256);
	ХешированиеДанных.Добавить(Вычислить("ПолучитьДвоичныеДанныеИзСтроки(Text, КодировкаТекста.UTF8)"));
	
	Возврат НРег(Вычислить("ПолучитьHexСтрокуИзДвоичныхДанных(ХешированиеДанных.ХешСумма)"));
	
КонецФункции

&НаСервереБезКонтекста
Функция HMAC(ДвоичныеДанныеКлюч, СтрокаТекст)
	
	СтрокаНули = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
	СтрокаОПАД = "5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c";
	СтрокаИПАД = "36363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636";
		
	Шаг0 = ДвоичныеДанныеКлюч;
	Если Шаг0.Размер() > 64 Тогда
		ХД = Новый ХешированиеДанных(ХешФункция.SHA256);
		ХД.Добавить(Шаг0);
		Шаг0 = ХД.ХешСумма;
	КонецЕсли;
	
	К = Вычислить("ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Шаг0)");
	Нули = Вычислить("ПолучитьБуферДвоичныхДанныхИзHexСтроки(СтрокаНули)");
	Нули.ЗаписатьПобитовоеИли(0, К);             
	Шаг1 = Вычислить("ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(Нули)");
	
	ИПАД = Вычислить("ПолучитьБуферДвоичныхДанныхИзHexСтроки(СтрокаИПАД)");
	БуферШаг1 = Вычислить("ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Шаг1)");
	ИПАД.ЗаписатьПобитовоеИсключительноеИли(0, БуферШаг1);
	Шаг2 = Вычислить("ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(ипад)");
	
	БуферШаг2 = Вычислить("ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Шаг2)");
	БуферТекст = Вычислить("ПолучитьБуферДвоичныхДанныхИзСтроки(СтрокаТекст, КодировкаТекста.UTF8)");
	БуферШаг3 = БуферШаг2.Соединить(БуферТекст);
	Шаг3 = Вычислить("ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(БуферШаг3)");
	
	ХД = Новый ХешированиеДанных(ХешФункция.SHA256);
	ХД.Добавить(Шаг3);
	Шаг4 = ХД.ХешСумма;
	
	ОПАД = Вычислить("ПолучитьБуферДвоичныхДанныхИзHexСтроки(СтрокаОПАД)");
	БуферШаг1 = Вычислить("ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Шаг1)");
	ОПАД.ЗаписатьПобитовоеИсключительноеИли(0, БуферШаг1);
	Шаг5 = Вычислить("ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(ОПАД)");
	
	БуферШаг4 = Вычислить("ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Шаг4)");
	БуферШаг5 = Вычислить("ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(Шаг5)");
	БуферШаг6 = БуферШаг5.Соединить(БуферШаг4);
	Шаг6 = Вычислить("ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных(БуферШаг6)");
	
	ХД = Новый ХешированиеДанных(ХешФункция.SHA256);
	ХД.Добавить(Шаг6);
	Шаг7 = ХД.ХешСумма;
	
	Возврат Шаг7;
	
КонецФункции

&НаКлиенте
Функция СгенерироватьКлючПодписи(СекретныйКлюч, Дата, Регион, Сервис)
	
	
	Стр = "AWS4" + СекретныйКлюч;
	ДанныеКлюча = Вычислить("ПолучитьДвоичныеДанныеИзСтроки(Стр, КодировкаТекста.UTF8)");
	КодДаты = HMAC(ДанныеКлюча, Дата);
	КодРегиона = HMAC(КодДаты, Регион);
	КодСервиса = HMAC(КодРегиона, Сервис);
	КлючПодписи = HMAC(КодСервиса, "aws4_request");
	
	Возврат КлючПодписи;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекущаяУниверсальнаяДатаСервер()
	Возврат ТекущаяУниверсальнаяДата();
КонецФункции	 

&НаКлиенте

Функция ПолучитьMP3ИзТекстаAmazonPoly(ПараметрыВидео, Текст, ИмяФайлаШага, ПараметрыГолоса)

	// Описание структуры и параметров запроса: https://docs.aws.amazon.com/en_us/polly/latest/dg/API_SynthesizeSpeech.html#polly-SynthesizeSpeech-request-Engine
	
	// Авторизация реализована по аналогии с примером: https://docs.aws.amazon.com/en_us/general/latest/gr/sigv4-signed-request-examples.html#sig-v4-examples-post
	// Заголовки на английском сделаны для удобства сопоставления с исходным примером.
	
	СтруктураПараметровЗапроса = Новый Структура;
	СтруктураПараметровЗапроса.Вставить("Engine", ПараметрыВидео.ЗаписьВидеоAmazonДвижок);
	СтруктураПараметровЗапроса.Вставить("LanguageCode", Лев(ПараметрыГолоса.Язык, 3) + Врег(Сред(ПараметрыГолоса.Язык, 4)));
	СтруктураПараметровЗапроса.Вставить("OutputFormat", "mp3");
	СтруктураПараметровЗапроса.Вставить("Text", Текст);
	СтруктураПараметровЗапроса.Вставить("TextType", "text");
	СтруктураПараметровЗапроса.Вставить("VoiceId", Врег(Лев(ПараметрыГолоса.Голос, 1)) + Сред(ПараметрыГолоса.Голос ,2));
	
	ТекущаяДата = ТекущаяУниверсальнаяДатаСервер();
	ДатаISO8601 = Формат(ТекущаяДата, "ДФ=yyyyMMddTHHmmssZ");
	Дата = Формат(ТекущаяДата, "ДФ=yyyyMMdd");
	
	// CREATE A CANONICAL REQUEST
	// http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html
	
	КаноничныйURI = "/v1/speech";
	КаноничнаяСтрокаЗапроса = "";
	ТипСодержимого = "application/json";
	Хост = "polly.us-east-2.amazonaws.com";
	Регион = "us-east-2";
	Сервис = "polly";
	
	КаноничныеЗаголовки =
		"host:" + Хост + Символы.ПС +
		"x-amz-date:" + ДатаISO8601 + Символы.ПС;
	
	ПодписанныеЗаголовки = "host;x-amz-date";
	
	ПараметрыЗапроса = СериализоватьКакJson(СтруктураПараметровЗапроса);
	ХэшПараметровЗапроса = ХешSHA256КакHexСтрока(ПараметрыЗапроса);
	
	Метод = "POST";
	КаноничныйЗапрос =
		Метод + Символы.ПС +
		КаноничныйURI + Символы.ПС +
		КаноничнаяСтрокаЗапроса + Символы.ПС +
		КаноничныеЗаголовки + Символы.ПС +
		ПодписанныеЗаголовки + Символы.ПС +
		ХэшПараметровЗапроса;
	
	// CREATE THE STRING TO SIGN
	
	Алгоритм = "AWS4-HMAC-SHA256";
	
	ОбластьДействияУчетныхДанных =
		Дата + "/" +
		Регион + "/" +
		Сервис + "/" +
		"aws4_request";
	
	СтрокаДляПодписи =
		Алгоритм + Символы.ПС +
		ДатаISO8601 + Символы.ПС +
		ОбластьДействияУчетныхДанных + Символы.ПС +
		ХешSHA256КакHexСтрока(КаноничныйЗапрос);
	
	// CALCULATE THE SIGNATURE
	
	ЧтениеТекста = Новый ЧтениеТекста;
	ЧтениеТекста.Открыть(ПараметрыВидео.ЗаписьВидеоAmazonСекретныйКлюч, "UTF-8");
	СекретныйКлюч = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	КлючПодписи = СгенерироватьКлючПодписи(СекретныйКлюч, Дата, Регион, Сервис);
	Подпись = HMAC(КлючПодписи, СтрокаДляПодписи);
	
	ПодписьСтрокой = НРег(Вычислить("ПолучитьHexСтрокуИзДвоичныхДанных(Подпись)"));
	
	// ADD SIGNING INFORMATION TO THE REQUEST
	
	ЗаголовокАвторизации =
		Алгоритм + " " +
		"Credential=" + ПараметрыВидео.ЗаписьВидеоAmazonКлючДоступа + "/" + ОбластьДействияУчетныхДанных + ", " + 
		"SignedHeaders=" + ПодписанныеЗаголовки + ", " +
		"Signature=" + ПодписьСтрокой;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("host", Хост);
	Заголовки.Вставить("x-amz-date", ДатаISO8601);
	Заголовки.Вставить("authorization", ЗаголовокАвторизации);
	Заголовки.Вставить("content-type", ТипСодержимого);
	
	Соединение = Новый HTTPСоединение(
		"polly.us-east-2.amazonaws.com", , , , , ,
		Новый ЗащищенноеСоединениеOpenSSL()
	);
	
	Запрос = Новый HTTPЗапрос("/v1/speech", Заголовки);
	
	Запрос.УстановитьТелоИзСтроки(
		ПараметрыЗапроса,
		"UTF-8",
		ИспользованиеByteOrderMark.DontUse   
	);
	
	Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	
	Если Ответ.StatusCode = 200 Тогда
		
		Чтение = Новый ЧтениеТекста(Ответ.ПолучитьТелоКакПоток());
		ТипРезультата = Чтение.Прочитать(3);
		
		Если ТипРезультата = "ID3" Тогда 
			
			ДвДанные = Ответ.ПолучитьТелоКакДвоичныеДанные();
			ИмяВременногоФайла_mp3_оригинал = ПолучитьИмяВременногоФайла("mp3");
			ДвДанные.Записать(ИмяВременногоФайла_mp3_оригинал);
			
			
			ИмяВременногоФайла_mp3 = ПолучитьИмяВременногоФайла("mp3");
			Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i ""%1"" -b:a 192k -ar 44100 -ac 2 ""%2""";
			Команда = СтрЗаменить(Команда, "%1", ИмяВременногоФайла_mp3_оригинал);
			Команда = СтрЗаменить(Команда, "%2", ИмяВременногоФайла_mp3);
			Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
			Ванесса.Отладка(Команда);
			ВыполнитьКоманду(ПараметрыВидео, Команда);
			
			КаталогФайлов = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS";
			Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогФайлов) Тогда
				Ванесса.СоздатьКаталогКомандаСистемы(КаталогФайлов);
			КонецЕсли;	 
			
			ФинальноеИмяMp3 = КаталогФайлов + "\" + ИмяФайлаШага + ".mp3";
			Ванесса.ПереместитьФайлКомандаСистемы(ИмяВременногоФайла_mp3, ФинальноеИмяMp3);
			
			Возврат ФинальноеИмяMp3;
			
		Иначе 
			ТекстИсключения = Ванесса.Локализовать("Не удалось получить данные. Код результата: <%1>. Ответ: <%2>.");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%1", Ответ.КодСостояния);
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%2", Ответ.ПолучитьТелоКакСтроку("UTF-8"));
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
	Иначе
		ТекстИсключения = Ванесса.Локализовать("Не удалось получить данные. Код результата: <%1>. Ответ: <%2>.");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%1", Ответ.КодСостояния);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%2", Ответ.ПолучитьТелоКакСтроку("UTF-8"));
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьMP3ИзТекстаYandexSpeechkit(ПараметрыВидео, iamToken, Текст, ИмяФайлаШага, ПараметрыГолоса)
	folderId = ПараметрыВидео.ЗаписьВидеоYandexTTSИдентификаторКаталога;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", "Bearer " + iamToken);
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded; charset=utf-8");
	
	// Параметры 
	Структура = Новый Структура;
	Структура.Вставить("text", urlencode(Текст));
	Структура.Вставить("lang", ПараметрыВидео.ЗаписьВидеоYandexTTSЯзык);
	Структура.Вставить("folderId", folderId);
	Структура.Вставить("speed", СтрЗаменить(Строка(ПараметрыВидео.ЗаписьВидеоYandexTTSСкорость),",","."));
	Если ПараметрыГолоса = Неопределено Тогда
		Структура.Вставить("emotion", ПараметрыВидео.ЗаписьВидеоYandexTTSЭмоция);
		Структура.Вставить("voice", ПараметрыВидео.ЗаписьВидеоYandexTTSГолос);
	Иначе
		Структура.Вставить("emotion", ПараметрыГолоса.Эмоция);
		Структура.Вставить("voice", ПараметрыГолоса.Голос);
	КонецЕсли;

	Соединение = Новый HTTPСоединение(
		"tts.api.cloud.yandex.net", , , , , ,
		Новый ЗащищенноеСоединениеOpenSSL()
	);
	Запрос = Новый HTTPЗапрос("/speech/v1/tts:synthesize", Заголовки);
	Запрос.УстановитьТелоИзСтроки(
		КодироватьПараметрыЗапроса(Структура),
		"UTF-8",
		ИспользованиеByteOrderMark.DontUse   
	);
	
	Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	
	Если Ответ.StatusCode = 200 Тогда
		
		Чтение = Новый ЧтениеТекста(Ответ.ПолучитьТелоКакПоток());
		ТипРезультата = Чтение.Прочитать(4);
		
		Если ТипРезультата = "OggS" Тогда 
			ДвДанные = Ответ.ПолучитьТелоКакДвоичныеДанные();
			ИмяВременногоФайла_ogg = ПолучитьИмяВременногоФайла("ogg");
			ДвДанные.Записать(ИмяВременногоФайла_ogg);
			
			ИмяВременногоФайла_mp3 = ПолучитьИмяВременногоФайла("mp3");
			Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -i ""%1"" -b:a 192k -ar 44100 -ac 2 ""%2""";
			Команда = СтрЗаменить(Команда, "%1", ИмяВременногоФайла_ogg);
			Команда = СтрЗаменить(Команда, "%2", ИмяВременногоФайла_mp3);
			Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео);
			Ванесса.Отладка(Команда);
			ВыполнитьКоманду(ПараметрыВидео, Команда);
			
			КаталогФайлов = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS";
			Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогФайлов) Тогда
				Ванесса.СоздатьКаталогКомандаСистемы(КаталогФайлов);
			КонецЕсли;	 
			
			ФинальноеИмяMp3 = КаталогФайлов + "\" + ИмяФайлаШага + ".mp3";
			Ванесса.ПереместитьФайлКомандаСистемы(ИмяВременногоФайла_mp3, ФинальноеИмяMp3);
			
			Возврат ФинальноеИмяMp3;
		Иначе 
			ТекстСообщения = Ванесса.Локализовать("Не удалось получить данные. Код результата: <%1>. Ответ: <%2>.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Ответ.КодСостояния);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", Ответ.ПолучитьТелоКакСтроку("UTF-8"));
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
	Иначе
		ТекстСообщения = Ванесса.Локализовать("Не удалось получить данные. Код результата: <%1>. Ответ: <%2>.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Ответ.КодСостояния);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", Ответ.ПолучитьТелоКакСтроку("UTF-8"));
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
КонецФункции	 

&НаКлиенте
Функция ПолучитьiamToken(ПараметрыВидео)
	Если ПараметрыВидео.Свойство("iamToken") Тогда
		Возврат ПараметрыВидео.iamToken;
	КонецЕсли;	 
	
	iamToken = Неопределено;
	
	ИмяФайлаЯндексТокен = ПараметрыВидео.ЗаписьВидеоYandexTTSOauthToken;
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайлаЯндексТокен) Тогда
		ТекстСообщения = Ванесса.Локализовать("Файл <%1> не существует.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяФайлаЯндексТокен); 
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайлаЯндексТокен, "UTF-8");
	ЯндексТокен = Текст.Прочитать();
	Текст.Закрыть();
	
	Структура = Новый Структура("yandexPassportOauthToken", ЯндексТокен);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	
	JSONЗапись = Новый ЗаписьJSON;
	JSONЗапись.УстановитьСтроку();
	ЗаписатьJSON(JSONЗапись, Структура);
	СтруктураJSON = JSONЗапись.Закрыть();
	
	// Подключаемся к сайту.
	Соединение = Новый HTTPСоединение(
		"iam.api.cloud.yandex.net", , , , , ,
		Новый ЗащищенноеСоединениеOpenSSL()
	);
	Запрос = Новый HTTPЗапрос("/iam/v1/tokens", Заголовки);
	Запрос.УстановитьТелоИзСтроки(СтруктураJSON);
	
	Ответ  = Соединение.ОтправитьДляОбработки(Запрос);
	
	Если Ответ.StatusCode = 200 Тогда
		Результат = Ответ.ПолучитьТелоКакСтроку("UTF-8");
		
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(Результат);
		Результат = ПрочитатьJSON(Чтение, Ложь);
		Чтение.Закрыть();
		
		Если Результат.Свойство("iamToken") Тогда
			iamToken = Результат.iamToken;
			ПараметрыВидео.Вставить("iamToken", iamToken);
			Возврат iamToken;
		КонецЕсли;
		
		ТекстСообщения = Ванесса.Локализовать("Не удалось получить токен.");
		ВызватьИсключение ТекстСообщения;
	Иначе
		ТекстСообщения = Ванесса.Локализовать("Не удалось получить токен. Код результата: <%1>. Ответ: <%2>.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Ответ.КодСостояния);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", Ответ.ПолучитьТелоКакСтроку("UTF-8"));
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПолучитьТекстШагаИзТекстаФичиЕслиОнТамЗадан(ПараметрыВидео, Текст, Шаг, Сценарий)
	Ванесса.ПолучитьТекстШагаИзТекстаФичиЕслиОнТамЗадан(Текст, Шаг, Сценарий);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлыTTS(ПараметрыВидео) Экспорт
	КаталогДляФайловTTS = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов + "\TTS";
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДляФайловTTS) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(КаталогДляФайловTTS);
	КонецЕсли;	 
	
	Если НЕ ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		Возврат;
	КонецЕсли;	 
	
	
	AudioEngine = ПараметрыВидео.ЗаписьВидеоПутьКДвижкуTTS;
	
	Если СокрЛП(ПараметрыВидео.ЗаписьВидеоИмяTTS) = "" Тогда
		ТекстСообщения = Ванесса.Локализовать("Не указано имя голоса Text To Speech.");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	
	ffmpeg = ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg;
	Если СокрЛП(ffmpeg) = "" Тогда
		ТекстСообщения = Ванесса.Локализовать("Не указана команда ffmpeg.");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	КолШагов  = ПолучитьКоличествоШагов(ПараметрыВидео.МассивСценариевДляВыполнения);
	ТекИДШага = 0;
	
	НомерСценария = -1;
	МассивСценариевДляВыполнения = ПараметрыВидео.МассивСценариевДляВыполнения;
	Для каждого Сценарий Из МассивСценариевДляВыполнения Цикл
		НомерСценария = НомерСценария + 1;
		Шаги = Сценарий.Шаги;

		
		Если Не Сценарий.Свойство("МассивТекстФичи") Тогда
			МассивТекстФичи = ЗагрузитьФайлВМассив(Сценарий.ПолныйПутьКФиче);
			Сценарий.Вставить("МассивТекстФичи", МассивТекстФичи);
		КонецЕсли;	 
		
		НомерШага = -1;
		Для каждого Шаг Из Шаги Цикл

			НомерШага = НомерШага + 1;
			ТекИДШага = ТекИДШага + 1;
			Если Шаг.ЭтоШагКонтекста Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если Шаг.Свойство("ИгнорироватьШагВАвтоинструкции") Тогда
				Если Шаг.ИгнорироватьШагВАвтоинструкции Тогда
					Продолжить;
				КонецЕсли;	 
			КонецЕсли;	 
			
			Если ЭтоВложенныйШагВнутриОбъединеннойГруппы(Шаг) Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если Ванесса.ЭтоПрерывающйВидеоШаг(Шаг) Тогда
				Продолжить;
			КонецЕсли;	 
			
			Если ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
				Прогресс = Цел((ТекИДШага / КолШагов) * 100);
				Состояние("Создание файлов TTS", Прогресс,"Сценарий №" + (НомерСценария + 1) + ", шаг №" + (НомерШага + 1) + ". " + Шаг.ТекстИнструкция);
			КонецЕсли;	 
			
			ПараметрыГолоса = ПолучитьПараметрыГолоса(ПараметрыВидео, Шаг.МассивТеговШага);

			ИмяMP3 = ПолучитьФайлMP3ИзТекста(ПараметрыВидео, Шаг.ТекстИнструкция, "scen_" + ДобавитьНулей(НомерСценария, 3) 
				+ "_step_" + ДобавитьНулей(НомерШага, 3) + "_main", ПараметрыГолоса);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыГолосаПоУмолчанию(ПараметрыВидео)
	ПараметрыГолоса = Новый Структура;
	Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 1 Тогда
		ПараметрыГолоса.Вставить("ТипОзвучки", 1);
		ПараметрыГолоса.Вставить("Префикс", "y_");
		ПараметрыГолоса.Вставить("Голос", ПараметрыВидео.ЗаписьВидеоYandexTTSГолос);
		ПараметрыГолоса.Вставить("Эмоция", ПараметрыВидео.ЗаписьВидеоYandexTTSЭмоция);
		ПараметрыГолоса.Вставить("Язык", ПараметрыВидео.ЗаписьВидеоAmazonЯзык);
	Иначе
		ПараметрыГолоса.Вставить("ТипОзвучки", 2);
		ПараметрыГолоса.Вставить("Префикс", "a_");
		ПараметрыГолоса.Вставить("Голос", ПараметрыВидео.ЗаписьВидеоAmazonГолос);
		ПараметрыГолоса.Вставить("Эмоция", ПараметрыВидео.ЗаписьВидеоYandexTTSЭмоция);
		ПараметрыГолоса.Вставить("Язык", ПараметрыВидео.ЗаписьВидеоAmazonЯзык);
	КонецЕсли;
	Возврат ПараметрыГолоса;
КонецФункции	

&НаКлиенте
Функция ПолучитьПараметрыГолоса(ПараметрыВидео, ТегиШага)
	ПараметрыГолоса = ПолучитьПараметрыГолосаПоУмолчанию(ПараметрыВидео);

	Если ТегиШага.Количество() > 0 Тогда
		Для Каждого ЭлементМассива Из ТегиШага Цикл
			Если Лев(НРег(ЭлементМассива), 9) = "yandextts" Тогда

				СтрокаГолосаЭмоции = СокрЛП(Сред(НРег(ЭлементМассива),11));
				РазобратьПараметрыСтроки(СтрокаГолосаЭмоции, ПараметрыГолоса);
				ПараметрыГолоса.ТипОзвучки = 1;
				ПараметрыГолоса.Префикс = "y_";
				Прервать;	
			КонецЕсли;	

			Если Лев(НРег(ЭлементМассива), 9) = "amazontts" Тогда
				СтрокаГолосаЭмоции = СокрЛП(Сред(НРег(ЭлементМассива),11));
				РазобратьПараметрыСтроки(СтрокаГолосаЭмоции, ПараметрыГолоса);
				ПараметрыГолоса.ТипОзвучки = 2;
				ПараметрыГолоса.Префикс = "a_";
				Прервать;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат ПараметрыГолоса;
КонецФункции

&НаКлиенте
Процедура РазобратьПараметрыСтроки(СтрокаПарамеровГолоса, ПараметрыГолоса)
	СтрокаПарамеровГолоса = Нрег(СтрокаПарамеровГолоса);
	УдалитьПробелыВСтроке(СтрокаПарамеровГолоса);
	ПозицияV = Найти(СтрокаПарамеровГолоса, "voice=");
	ТекГолос = ПараметрыГолоса.Голос;
	ТекЭмоция = ПараметрыГолоса.Эмоция;
	ТекЯзык = ПараметрыГолоса.Язык;
	
	Если ПозицияV = 0 Тогда
		//Разделитель - запятая
		МассивПараметровГолоса = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(СтрокаПарамеровГолоса, ",");
		Если МассивПараметровГолоса.Количество() = 2 Тогда
			ТекГолос = МассивПараметровГолоса[0];
			ТекЭмоция = МассивПараметровГолоса[1];
		Иначе
			ТекГолос = МассивПараметровГолоса[0];
		КонецЕсли;
	Иначе
		МассивСтрок = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(СтрокаПарамеровГолоса, ";");
		Для Каждого СтрокаМассива Из МассивСтрок Цикл
			
			Если Лев(СтрокаМассива, 6) = "voice=" Тогда
				ТекГолос = Сред(СтрокаМассива,7);
			КонецЕсли;

			Если Лев(СтрокаМассива, 5) = "lang=" Тогда
				ТекЯзык = Сред(СтрокаМассива,6);
			КонецЕсли;
			
			Если Лев(СтрокаМассива, 8) = "emotion=" Тогда
				ТекЭмоция = Сред(СтрокаМассива,9);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ПараметрыГолоса.Голос = ТекГолос;
	ПараметрыГолоса.Эмоция = ТекЭмоция;
	ПараметрыГолоса.Язык = ТекЯзык;

КонецПроцедуры	


&НаКлиенте
Процедура УдалитьПробелыВСтроке(ИсходнаяСтрока)
	Пока Найти(ИсходнаяСтрока, " ") > 0 Цикл
		ИсходнаяСтрока = СтрЗаменить(ИсходнаяСтрока, " ", "");
	КонецЦикла;	
КонецПроцедуры	


&НаКлиенте
Функция ТестГолоса(ПараметрыВидео) Экспорт
	Стр = ПараметрыВидео.ТекстДляТестаГолоса;
	ОбработатьСтрокуПоСловарю(ПараметрыВидео, Стр);
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьФайлыTTS Тогда
		ПараметрыВидео.Вставить("ДанныеКэшMp3", ДанныеКэшMp3(ПараметрыВидео));
	КонецЕсли;	 
	ИмяФайла = ПолучитьФайлMP3ИзТекста(ПараметрыВидео, Стр, "test");
	
	Если ПараметрыВидео.ЗаписьВидеоКэшироватьФайлыTTS Тогда
		ВыгрузитьКэшMp3(ПараметрыВидео);	
	КонецЕсли;	 
	
	Возврат ИмяФайла;
КонецФункции

&НаКлиенте
Процедура ВыгрузитьКешВJson(ИмяФайла, Кэш)
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJson.ОткрытьФайл(ИмяФайла);
	ЗаписьJson.ЗаписатьНачалоОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства("data");
	ЗаписьJson.ЗаписатьНачалоМассива();
	
	СписокЗначений = Новый СписокЗначений;
	Для Каждого Элем Из Кэш Цикл
		СписокЗначений.Добавить(Элем.Ключ, Элем.Значение);
	КонецЦикла;	 
	СписокЗначений.СортироватьПоПредставлению();
	
	Для Каждого Элем Из СписокЗначений Цикл
		ЗаписьJson.ЗаписатьНачалоОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("Text");
		ЗаписьJSON.ЗаписатьЗначение(Элем.Значение);
		ЗаписьJSON.ЗаписатьИмяСвойства("FileName");
		ЗаписьJSON.ЗаписатьЗначение(Элем.Представление);
		
		ЗаписьJson.ЗаписатьКонецОбъекта();
	КонецЦикла;	 
	ЗаписьJson.ЗаписатьКонецМассива();
	
	ЗаписьJson.ЗаписатьКонецОбъекта();
	ЗаписьJson.Закрыть();
КонецПроцедуры 

&НаКлиенте
Процедура ВыгрузитьКэшMP3YandexAmazonВJson(ПараметрыВидео)
	
	СписокГолосов = ПолучитьСписокГолосовВКэше(ПараметрыВидео);
	
	ИмяФайлаСГолосами = ПараметрыВидео.ЗаписьВидеоКэшФайловTTS + "\Voices.json"; 

	ЗаписьJSONОсновной = Новый ЗаписьJSON;
	ЗаписьJSONОсновной.ОткрытьФайл(ИмяФайлаСГолосами);
	ЗаписьJSONОсновной.ЗаписатьНачалоОбъекта();
	ЗаписьJSONОсновной.ЗаписатьИмяСвойства("data");
	ЗаписьJSONОсновной.ЗаписатьНачалоМассива();

	Для Каждого Голос Из СписокГолосов Цикл
		ЗаписьJSONОсновной.ЗаписатьНачалоОбъекта();
		ЗаписьJSONОсновной.ЗаписатьИмяСвойства("Driver");
		ЗаписьJSONОсновной.ЗаписатьЗначение(Лев(Голос, 1));
		ЗаписьJSONОсновной.ЗаписатьИмяСвойства("Voice");
		ЗаписьJSONОсновной.ЗаписатьЗначение(Сред(Голос, 3));
		ЗаписьJSONОсновной.ЗаписатьКонецОбъекта();
		
		КаталогФайла = ПараметрыВидео.ЗаписьВидеоКэшФайловTTS + "\" + Голос;
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогФайла) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогФайла);
		КонецЕсли;
		
		ИмяФайла = КаталогФайла + "\data.json";
		Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайла);
		КонецЕсли;	 

		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJson.ОткрытьФайл(ИмяФайла);
		ЗаписьJson.ЗаписатьНачалоОбъекта();
		ЗаписьJSON.ЗаписатьИмяСвойства("data");
		ЗаписьJson.ЗаписатьНачалоМассива();

		Для Каждого СтрокаКэша Из ПараметрыВидео.ДанныеКэшMp3 Цикл
			ДлиннаГолоса = СтрДлина(Голос);
			
			Если Лев(СтрокаКэша.Ключ, ДлиннаГолоса) = Голос Тогда
				ЗаписьJson.ЗаписатьНачалоОбъекта();
		
				МасссивИзСтроки = Ванесса.РазложитьСтрокуВМассивПодстрокКлиент(СтрокаКэша.Ключ, РазделительСтроки);

				Если Лев(Голос,1) = "y" Тогда
					ЗаписьJSON.ЗаписатьИмяСвойства("Text");
					ЗаписьJSON.ЗаписатьЗначение(МасссивИзСтроки[3]);
					ЗаписьJSON.ЗаписатьИмяСвойства("Voice");
					ЗаписьJSON.ЗаписатьЗначение(МасссивИзСтроки[0]);
					ЗаписьJSON.ЗаписатьИмяСвойства("Speed");
					ЗаписьJSON.ЗаписатьЗначение(МасссивИзСтроки[1]);
					ЗаписьJSON.ЗаписатьИмяСвойства("Emotion");
					ЗаписьJSON.ЗаписатьЗначение(МасссивИзСтроки[2]);
					ЗаписьJSON.ЗаписатьИмяСвойства("FileName");
					ЗаписьJSON.ЗаписатьЗначение(СтрокаКэша.Значение);
				Иначе
					ЗаписьJSON.ЗаписатьИмяСвойства("Text");
					ЗаписьJSON.ЗаписатьЗначение(МасссивИзСтроки[2]);
					ЗаписьJSON.ЗаписатьИмяСвойства("Lang");
					ЗаписьJSON.ЗаписатьЗначение(МасссивИзСтроки[1]);
					ЗаписьJSON.ЗаписатьИмяСвойства("Voice");
					ЗаписьJSON.ЗаписатьЗначение(МасссивИзСтроки[0]);
					ЗаписьJSON.ЗаписатьИмяСвойства("FileName");
					ЗаписьJSON.ЗаписатьЗначение(СтрокаКэша.Значение);
				КонецЕсли;	
				ЗаписьJson.ЗаписатьКонецОбъекта();
			КонецЕсли;
		КонецЦикла;		 
		ЗаписьJson.ЗаписатьКонецМассива();
	
		ЗаписьJson.ЗаписатьКонецОбъекта();
		ЗаписьJson.Закрыть();
	КонецЦикла;
	
	ЗаписьJSONОсновной.ЗаписатьКонецМассива();

	ЗаписьJSONОсновной.ЗаписатьКонецОбъекта();
	ЗаписьJSONОсновной.Закрыть();
КонецПроцедуры 

&НаКлиенте
Функция ПолучитьСписокГолосовВКэше(ПараметрыВидео)
	СписокГолосов = Новый Массив;
	Для Каждого Элемент Из ПараметрыВидео.ДанныеКэшMp3 Цикл
		ПозицияРазделителя = Найти(Элемент.Ключ, РазделительСтроки);
		Если не ПозицияРазделителя = 0 Тогда
			Голос = Лев(Элемент.Ключ, ПозицияРазделителя-1);
			Если СписокГолосов.Найти(Голос) = Неопределено Тогда
				СписокГолосов.Добавить(Голос);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	Возврат СписокГолосов;
КонецФункции	


&НаКлиенте
Процедура ВыгрузитьКэшMp3(ПараметрыВидео)
	Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 1 
			или ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 2 Тогда
		ВыгрузитьКэшMP3YandexAmazonВJson(ПараметрыВидео);
	Иначе 
		КаталогГдеЛежитКэшMp3 = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшФайловTTS);
		ИмяФайла = КаталогГдеЛежитКэшMp3 + "\data.json";
	
		Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайла);
		КонецЕсли;	 
	
		ВыгрузитьКешВJson(ИмяФайла, ПараметрыВидео.ДанныеКэшMp3);
	КонецЕсли;	
КонецПроцедуры 

&НаКлиенте
Процедура ВыгрузитьКэшВидеоВставок(ПараметрыВидео)
	КаталогГдеЛежитКэшВидеоВставок = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшВидеоВставок);
	ИмяФайла = КаталогГдеЛежитКэшВидеоВставок + "\data.json";
	
	Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		Ванесса.УдалитьФайлыКомандаСистемы(ИмяФайла);
	КонецЕсли;	 
	
	ВыгрузитьКешВJson(ИмяФайла, ПараметрыВидео.ДанныеКэшВидеоВставки);
КонецПроцедуры 


&НаКлиенте
Функция ДанныеКэшMp3(ПараметрыВидео)
	Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 1 
			Или ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 2 Тогда
		
		ТаблицаКэша = Новый Соответствие;
		
		КаталогГдеЛежитКэшMp3 = ПараметрыВидео.ЗаписьВидеоКэшФайловTTS;
		
		СписокГолосов = ПрочитатьГолосаИзКэша(КаталогГдеЛежитКэшMp3);

		Для Каждого Голос Из СписокГолосов Цикл
			ИмяФайла = КаталогГдеЛежитКэшMp3 + "\" + Голос + "\data.json";
			Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
				ЧтениеJSON = Новый ЧтениеJSON;
				ЧтениеJSON.ОткрытьФайл(ИмяФайла);
				ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
				ЧтениеJSON.Закрыть();
	
				Данные = ДанныеJSON.data;
	
				Для Каждого СтрокаДанные Из Данные Цикл
					Если Лев(Голос,1) = "y" Тогда
						СтрокаПоиск = Голос + РазделительСтроки 
								+ СтрокаДанные.Speed + РазделительСтроки
								+ СтрокаДанные.Emotion + РазделительСтроки
								+ СтрокаДанные.Text;
					Иначе
						СтрокаПоиск = Голос + РазделительСтроки 
								+ СтрокаДанные.Lang + РазделительСтроки
								+ СтрокаДанные.Text;
					КонецЕсли;	
					ИмяФайла = СтрокаДанные.FileName;
					ТаблицаКэша.Вставить(СтрокаПоиск, ИмяФайла);
				КонецЦикла;	  
			КонецЕсли;
		КонецЦикла;		 
		
		Возврат ТаблицаКэша;
	Иначе
		КаталогГдеЛежитКэшMp3 = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшФайловTTS);
		ИмяФайла = КаталогГдеЛежитКэшMp3 + "\data.json";
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			Возврат Новый Соответствие; 
		КонецЕсли;	 
	
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.ОткрытьФайл(ИмяФайла);
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
	
		Данные = ДанныеJSON.data;
	
		Соответствие = Новый Соответствие;
		Для Каждого СтрокаДанные Из Данные Цикл
			Соответствие.Вставить(СтрокаДанные.Text, СтрокаДанные.FileName);
		КонецЦикла;	 
		Возврат Соответствие;
	КонецЕсли;		
КонецФункции	 

&НаКлиенте 
Функция ПрочитатьГолосаИзКэша(ПутьКПапкеКэша)
	ИмяФайла = ПутьКПапкеКэша + "\Voices.json";
	МассивГолосов = Новый Массив;

	Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.ОткрытьФайл(ИмяФайла);
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();

		Данные = ДанныеJSON.data;

		Для Каждого СтрокаДанные Из Данные Цикл
			МассивГолосов.Добавить(СтрокаДанные.Driver + "_" + СтрокаДанные.Voice);
		КонецЦикла;	  
	КонецЕсли;

	Возврат МассивГолосов;
КонецФункции	

&НаКлиенте
Функция ДанныеКэшВидеоВставки(ПараметрыВидео)
	КаталогГдеЛежитКэшВидеоВставок = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшВидеоВставок);
	ИмяФайла = КаталогГдеЛежитКэшВидеоВставок + "\data.json";
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		Возврат Новый Соответствие; 
	КонецЕсли;	 
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.ОткрытьФайл(ИмяФайла);
	ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Данные = ДанныеJSON.data;
	
	Соответствие = Новый Соответствие;
	Для Каждого СтрокаДанные Из Данные Цикл
		Соответствие.Вставить(СтрокаДанные.Text, СтрокаДанные.FileName);
	КонецЦикла;	 
	
	Возврат Соответствие;
КонецФункции	 

&НаКлиенте
Функция КаталогГдеЛежитКэш(ПараметрыВидео, БазовыйКаталог)
	Если НЕ ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		Каталог = БазовыйКаталог + "\_";
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(Каталог) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(Каталог);
		КонецЕсли;	 
		Возврат Каталог; 
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 0 Тогда
		// Microsoft
		КаталогДанногоГолоса = БазовыйКаталог + "\" + ПараметрыВидео.ЗаписьВидеоИмяTTS;
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДанногоГолоса) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогДанногоГолоса);
		КонецЕсли;	 
		
		ИмяКаталогПараметров = "S" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоСкоростьПроизношения);
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДанногоГолоса + "\" + ИмяКаталогПараметров) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогДанногоГолоса + "\" + ИмяКаталогПараметров);
		КонецЕсли;
	ИначеЕсли ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 1 Тогда
		//Yandex
		КаталогДанногоГолоса = БазовыйКаталог + "\y_" + ПараметрыВидео.ЗаписьВидеоYandexTTSГолос;
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДанногоГолоса) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогДанногоГолоса);
		КонецЕсли;	 
		
		ИмяКаталогПараметров = "Lang_" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоYandexTTSЯзык)
		                     + "_Emo_" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоYandexTTSЭмоция)
		                     + "_Sp_"  + XMLСтрока(ПараметрыВидео.ЗаписьВидеоYandexTTSСкорость);
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДанногоГолоса + "\" + ИмяКаталогПараметров) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогДанногоГолоса + "\" + ИмяКаталогПараметров);
		КонецЕсли;
	Иначе	
		//Amazon
		КаталогДанногоГолоса = БазовыйКаталог + "\a_" + ПараметрыВидео.ЗаписьВидеоAmazonГолос;
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДанногоГолоса) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогДанногоГолоса);
		КонецЕсли;	 
		
		ИмяКаталогПараметров = "Lang_" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоAmazonЯзык)
		                     + "_Eng_" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоAmazonДвижок);
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогДанногоГолоса + "\" + ИмяКаталогПараметров) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогДанногоГолоса + "\" + ИмяКаталогПараметров);
		КонецЕсли;
	КонецЕсли;	 
	
	Возврат КаталогДанногоГолоса + "\" + ИмяКаталогПараметров; 
КонецФункции	 

&НаКлиенте
Процедура ДобавитьВидеоВставкуШагаВКэш(ИмяФайлаШага, Текст, ПараметрыВидео)
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ПараметрыВидео.ЗаписьВидеоКэшВидеоВставок) Тогда
		ТекстСообщения = Ванесса.Локализовать("Каталог <%1> не найден.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ПараметрыВидео.ЗаписьВидеоКэшВидеоВставок);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	КаталогГдеЛежитКэшВидеоВставок = КаталогГдеЛежитКэш(ПараметрыВидео, ПараметрыВидео.ЗаписьВидеоКэшВидеоВставок);
	
	ДанныеКэшВидеоВставки = ПараметрыВидео.ДанныеКэшВидеоВставки;
	КоличествоДанных = ДанныеКэшВидеоВставки.Количество();
	
	ИмяФайла = ДобавитьНулей(КоличествоДанных + 1, 8) + ".mp4";
	НовоеИмяMP4 = КаталогГдеЛежитКэшВидеоВставок + "\" + ИмяФайла;
	Ванесса.КопироватьФайлКомандаСистемы(ИмяФайлаШага, НовоеИмяMP4);
	
	ДанныеКэшВидеоВставки.Вставить(Текст, ИмяФайла);
КонецПроцедуры 

&НаКлиенте
Процедура ДобавитьMp3ШагаВКэш(ИмяMP3, Текст, ПараметрыВидео, ПараметрыГолоса)
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ПараметрыВидео.ЗаписьВидеоКэшФайловTTS) Тогда
		ТекстСообщения = Ванесса.Локализовать("Каталог <%1> не найден.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ПараметрыВидео.ЗаписьВидеоКэшФайловTTS);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	Если ПараметрыВидео.Свойство("ДанныеКэшMp3") = Ложь Тогда
		ПараметрыВидео.Вставить("ДанныеКэшMp3", Новый Соответствие);
	КонецЕсли;

	Если ПараметрыВидео.ЗаписьВидеоТипОзвучкиTTS = 0 Тогда
		КаталогГдеЛежитКэшMp3 = КаталогГдеЛежитКэш(ПараметрыВидео,ПараметрыВидео.ЗаписьВидеоКэшФайловTTS);

		ДанныеКэшMp3 = ПараметрыВидео.ДанныеКэшMp3;
		КоличествоДанных = ДанныеКэшMp3.Количество();
	
		ИмяФайла = ДобавитьНулей(КоличествоДанных+1,8) + ".mp3";
		НовоеИмяMP3 = КаталогГдеЛежитКэшMp3 + "\" + ИмяФайла;
		Ванесса.КопироватьФайлКомандаСистемы(ИмяMP3,НовоеИмяMP3);
	
		ДанныеКэшMp3.Вставить(Текст,ИмяФайла);

	ИначеЕсли ПараметрыГолоса.ТипОзвучки = 1 Тогда
		ДанныеКэшMp3 = ПараметрыВидео.ДанныеКэшMp3;
		КоличествоДанных = ДанныеКэшMp3.Количество();

		Счетчик = 1;

		ИмяФайла = ДобавитьНулей(КоличествоДанных+Счетчик,8) + ".mp3";
		ТекГолос = ПараметрыГолоса.Голос;
		ТекЭмоция = ПараметрыГолоса.Эмоция;

		ТекСкорость = ПараметрыВидео.ЗаписьВидеоYandexTTSСкорость;

		ИмяКаталогПараметров = "Lang_" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоYandexTTSЯзык)
		                     + "_Emo_" + XMLСтрока(ТекЭмоция)
		                     + "_Sp_"  + XMLСтрока(ТекСкорость);
	
		КаталогХраненияMp3 = ПараметрыВидео.ЗаписьВидеоКэшФайловTTS + "\" + ПараметрыГолоса.Префикс 
							+ ТекГолос + "\" + ИмяКаталогПараметров;
		
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогХраненияMp3) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогХраненияMp3);
		КонецЕсли;

		НовоеИмяMP3 = КаталогХраненияMp3 + "\" + ИмяФайла;

		Пока Ванесса.ФайлСуществуетКомандаСистемы(НовоеИмяMP3) Цикл
			Счетчик = Счетчик + 1;
			ИмяФайла = ДобавитьНулей(КоличествоДанных + Счетчик, 8) + ".mp3";
			НовоеИмяMP3 = КаталогХраненияMp3 + "\" + ИмяФайла;
		КонецЦикла;	

		Ванесса.КопироватьФайлКомандаСистемы(ИмяMP3, НовоеИмяMP3);

		СтрокаПоиск = ПараметрыГолоса.Префикс + ТекГолос + РазделительСтроки 
					+ ТекСкорость + РазделительСтроки
					+ ТекЭмоция + РазделительСтроки
					+ Текст;
								
		ДанныеКэшMp3.Вставить(СтрокаПоиск, НовоеИмяMP3);
	Иначе	
		ДанныеКэшMp3 = ПараметрыВидео.ДанныеКэшMp3;
		КоличествоДанных = ДанныеКэшMp3.Количество();

		Счетчик = 1;
		ИмяФайла = ДобавитьНулей(КоличествоДанных+Счетчик,8) + ".mp3";
		ТекГолос = ПараметрыГолоса.Голос;

		ИмяКаталогПараметров = "Lang_" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоAmazonЯзык)
							+ "_Eng_" + XMLСтрока(ПараметрыВидео.ЗаписьВидеоAmazonДвижок);

		КаталогХраненияMp3 = ПараметрыВидео.ЗаписьВидеоКэшФайловTTS + "\" + ПараметрыГолоса.Префикс
					 + ТекГолос + "\" + ИмяКаталогПараметров;
		
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(КаталогХраненияMp3) Тогда
			Ванесса.СоздатьКаталогКомандаСистемы(КаталогХраненияMp3);
		КонецЕсли;


		НовоеИмяMP3 = КаталогХраненияMp3 + "\" + ИмяФайла;

		Пока Ванесса.ФайлСуществуетКомандаСистемы(НовоеИмяMP3) Цикл
			Счетчик = Счетчик+1;
			ИмяФайла = ДобавитьНулей(КоличествоДанных+Счетчик,8) + ".mp3";
			НовоеИмяMP3 = КаталогХраненияMp3 + "\" + ИмяФайла;
		КонецЦикла;	

		Ванесса.КопироватьФайлКомандаСистемы(ИмяMP3,НовоеИмяMP3);

		СтрокаПоиск = ПараметрыГолоса.Префикс + ТекГолос + РазделительСтроки
					+ ПараметрыГолоса.Язык + РазделительСтроки 
					+ Текст;
								
		ДанныеКэшMp3.Вставить(СтрокаПоиск, НовоеИмяMP3);

	КонецЕсли;	
КонецПроцедуры 

&НаКлиенте
Функция ДобавитьНулей(ЗначениеЧисло, КолНулей)
	Стр = СтрЗаменить(Строка(ЗначениеЧисло), Символы.НПП, "");
	
	Пока СтрДлина(Стр) < КолНулей Цикл
		Стр = "0" + Стр;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Функция ПолучитьИмяФайлаВидеоШага(ПараметрыВидео)
	Если ПараметрыВидео.ЭтоИнициализация Тогда
		Стр = "init.mp4";
	Иначе	
		Стр = "scen_" + ДобавитьНулей(ПараметрыВидео.ТекИД_СценарияВМассиве, 3) + "_step_" 
			+ ДобавитьНулей(ПараметрыВидео.ТекИД_ШагаВМассиве, 3) + "_main.mp4";
	КонецЕсли;	 
	
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Процедура Инициализация(ПараметрыВидео) Экспорт
	Ванесса.Объект.ИдетЗаписьВидео = Ложь;	
	
	Каталог = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов;
	
	Если СокрЛП(Каталог) = "" Тогда
		ТекстСообщения = Ванесса.Локализовать("Каталог ЗаписьВидеоКаталогДляВременныхФайлов <%1> не указан.");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Каталог);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(Каталог) Тогда
		
		Ванесса.СоздатьКаталогКомандаСистемы(Каталог);
		
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(Каталог) Тогда
			ТекстСообщения = Ванесса.Локализовать("Каталог ЗаписьВидеоКаталогДляВременныхФайлов <%1> не существует.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Каталог);
			Ванесса.СообщитьПользователю(ТекстСообщения);
			ТекстСообщения = Ванесса.Локализовать("Каталог ЗаписьВидеоКаталогДляВременныхФайлов <%1> не существует.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Каталог);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если СокрЛП(ПараметрыВидео.ЗаписьВидеоКомандаConvert) = "" Тогда
		ТекстСообщения = Ванесса.Локализовать("Не указана команда Convert.");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	
	Если НЕ Установлен_ImageMagic(ПараметрыВидео) Тогда
		ВызватьИсключение Ванесса.Локализовать("Не установлен ImageMagic (convert.exe)");
	КонецЕсли;	 
	
	// Запишем специальный шаг видео, чтобы VLC проинициализировался (init.mp4)
	Ванесса.Отладка("Инициализация записи видео...");
	
	НачатьЗаписьВидеоОдногоШага(ПараметрыВидео);
	
	// проверим что появился файл
	СчетчикПроверок     = 0;
	МаксСчетчикПроверок = 30;
	ТекДат = ТекущаяДата();
	Пока Истина Цикл
		СчетчикПроверок = СчетчикПроверок + 1;
		
		Если (СчетчикПроверок > МаксСчетчикПроверок) И (ТекущаяДата() >= (ТекДат + МаксСчетчикПроверок)) Тогда
			ТекстСообщения = Ванесса.Локализовать("Не найден файл <%1>");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ПараметрыВидео.ТекущийФайлВидео);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	 
		
		
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ПараметрыВидео.ТекущийФайлВидео) Тогда
			Ванесса.Sleep(1);
			Продолжить;
		Иначе
			Прервать;
		КонецЕсли;	 
		
		
	КонецЦикла;
	
	// остановим запись
	ОстановитьЗаписьВидеоОдногоШага(ПараметрыВидео);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаписьВидеоОдногоШага(ПараметрыВидео) Экспорт
	Если Не ПараметрыВидео.ЭтоИнициализация Тогда
		Если Ванесса.ЭтоПрерывающйВидеоШаг(ПараметрыВидео.ТекШаг) Тогда
			Возврат;
		КонецЕсли;	 
	КонецЕсли;	 
	
	Ванесса.Объект.ИдетЗаписьВидео = Истина;
	
	
	КомандаНачатьЗаписьВидео = ПараметрыВидео.ЗаписьВидеоКомандаНачатьЗаписьВидео;
	
	// fix для 32 битной винды
	Поз_screen = Найти(КомандаНачатьЗаписьВидео, "screen");
	Если Поз_screen > 0 Тогда
		СтрокаVLC = Лев(КомандаНачатьЗаписьВидео, Поз_screen - 1);
		СтрокаVLC = СтрЗаменить(СтрокаVLC, """", "");
		Если Найти(СтрокаVLC," (x86)") > 0 Тогда
			ИмяФайлаVLC = СтрокаVLC;
			Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайлаVLC) Тогда
				ИмяФайлаVLC = СтрЗаменить(ИмяФайлаVLC," (x86)", "");
				Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайлаVLC) Тогда // Значит VLC лежит в другом каталоге
					КомандаНачатьЗаписьВидео = """" + ИмяФайлаVLC + """ " + Сред(КомандаНачатьЗаписьВидео, Поз_screen);
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	 
	
	
	
	Если СокрЛП(ПараметрыВидео.ЗаписьВидеоФайлКурсораМышки) <> "" Тогда
		КомандаНачатьЗаписьВидео = СтрЗаменить(КомандаНачатьЗаписьВидео, "<screenmouseimage>", ПараметрыВидео.ЗаписьВидеоФайлКурсораМышки);
	Иначе
		КомандаНачатьЗаписьВидео = СтрЗаменить(КомандаНачатьЗаписьВидео, ":screen-mouse-image=""<screenmouseimage>""", "");
	КонецЕсли;	 
	
	
	КомандаНачатьЗаписьВидео = СтрЗаменить(КомандаНачатьЗаписьВидео, "<screenwidth>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранШирина,"ND=10; NG=0"));
	КомандаНачатьЗаписьВидео = СтрЗаменить(КомандаНачатьЗаписьВидео, "<screenheight>", Формат(ПараметрыВидео.ЗаписьВидеоЭкранВысота,"ND=10; NG=0"));
	
	
	
	ИмяФайлаВидео             = ПараметрыВидео.ЗаписьВидеоКаталогДляВременныхФайлов  + "\" + ПолучитьИмяФайлаВидеоШага(ПараметрыВидео);
	ПараметрыВидео.Вставить("ТекущийФайлВидео", ИмяФайлаВидео);
	КомандаНачатьЗаписьВидео  = СтрЗаменить(КомандаНачатьЗаписьВидео, "<dst>", ИмяФайлаВидео);
	ИмяФайлаВидеоТекущегоШага = ИмяФайлаВидео;
	
	
	КолКадров = ПараметрыВидео.ЗаписьВидеоКоличествоКадров;
	Если КолКадров = 0 Тогда
		ВызватьИсключение Ванесса.Локализовать("Не указано количество кадров.");
	КонецЕсли;	 
	КомандаНачатьЗаписьВидео = СтрЗаменить(КомандаНачатьЗаписьВидео, "<fps>", Строка(КолКадров));
	
	КомандаНачатьЗаписьВидео = СтрЗаменить(КомандаНачатьЗаписьВидео, Символы.НПП, "");
	
	Ванесса.Отладка(КомандаНачатьЗаписьВидео);
	
	Ванесса.Объект.ИдетЗаписьВидео = Истина;
	
	Ванесса.TASKKILL("vlc.exe");
	Ванесса.ВыполнитьКомандуОСБезПоказаЧерногоОкна(КомандаНачатьЗаписьВидео, 0);
	
	
	// ждём чтобы файл появился на диске
	СчетчикПроверок     = 0;
	МаксСчетчикПроверок = 20;
	ТекДат = ТекущаяДата();
	Пока Истина Цикл
		СчетчикПроверок = СчетчикПроверок + 1;
		
		Если (СчетчикПроверок > МаксСчетчикПроверок) И (ТекущаяДата() >= (ТекДат + МаксСчетчикПроверок)) Тогда
			ТекстСообщения = Ванесса.Локализовать("Не найден файл <%1>");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяФайлаВидео);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	 
		
		Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайлаВидео) Тогда
			Ванесса.Sleep(1);
			Продолжить;
		Иначе
			Прервать;
		КонецЕсли;	 
		
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Функция ПолучитьАдресСокета(Знач Стр)
	Поз = Найти(Стр, "--rc-host=");
	Стр = Сред(Стр, Поз);
	Стр = СтрЗаменить(Стр, "--rc-host=", "");
	
	Поз = Найти(Стр," ");
	Стр = Лев(Стр, Поз - 1);
	Стр = СокрЛП(Стр);
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Процедура ПроверитьЧтоФайлВидеоШагаНеНулевогоРазмера(ПараметрыВидео, ИмяФайла, КолСек)
	// ToDo сделать для ассинхронных вызовов
	Если ПараметрыВидео.ЕстьПоддержкаАсинхронныхВызовов Тогда
		Возврат;
	КонецЕсли;	 
	
	ЦелеваяДата = ТекущаяДата() + КолСек;
	Пока Истина Цикл
		
		Файл = Новый Файл(ИмяФайла);
		Если Файл.Размер() > 1024 Тогда
			Прервать;
		КонецЕсли;	 
		
		Если ЦелеваяДата <= ТекущаяДата() Тогда
			Прервать;
		КонецЕсли;	 
		
		Ванесса.Sleep(1);
		
		
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьЗаписьВидеоОдногоШага(ПараметрыВидео) Экспорт
	
	Если Не Ванесса.Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;	 
	
	// ПроверитьЧтоФайлВидеоШагаНеНулевогоРазмера(ПараметрыВидео,ИмяФайлаВидеоТекущегоШага,10);
	
	АдресСокета = ПолучитьАдресСокета(ПараметрыВидео.ЗаписьВидеоКомандаНачатьЗаписьВидео);
	
	ЛогВыполненияКоманды = ПолучитьИмяВременногоФайла("txt");
	КомандаОстановитьЗапись = "oscript """ + ПараметрыВидео.Файл_StopVideoRec + """ """ + АдресСокета + """ > """ + ЛогВыполненияКоманды + """";
	
	Ванесса.Отладка("КомандаОстановитьЗапись=" + КомандаОстановитьЗапись);
	
	Ванесса.Объект.ИдетЗаписьВидео = Ложь;	
	
	Рез = Ванесса.ВыполнитьКомандуОСБезПоказаЧерногоОкна(КомандаОстановитьЗапись);
	Если Рез <> 0 Тогда
		ТекстЛога = "";
		Если Ванесса.ФайлСуществуетКомандаСистемы(ЛогВыполненияКоманды) Тогда
			Попытка
				Текст = Новый ЧтениеТекста;
				Текст.Открыть(ЛогВыполненияКоманды,"UTF-8");
				ТекстЛога = Текст.Прочитать();
				Текст.Закрыть();
			Исключение
				ТекстЛога = "";
			КонецПопытки;
			
		КонецЕсли;	 
		
		ТекстСообщения = Ванесса.Локализовать("Команда ОстановитьЗаписьВидео вернула код возврата = %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Рез);
		ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстЛога;
		Ванесса.СообщитьПользователю(ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	// надо дать vlc закрыться
	МаксКолПопыток = 10;
	КолПопыток     = 0;
	ТекДат = ТекущаяДата();
	Пока Истина Цикл
		КолПопыток = КолПопыток + 1;
		
		МассивPID = Ванесса.ПолучитьМассивPIDПроцессов("vlc.exe");
		Если МассивPID.Количество() = 0 Тогда
			Прервать;
		КонецЕсли;	 
		
		Ванесса.Sleep(1);
		
		Если (КолПопыток >= МаксКолПопыток) И (ТекущаяДата() >= (ТекДат + МаксКолПопыток)) Тогда
			Прервать;
		КонецЕсли;	 
		
	КонецЦикла;	
		
	
КонецПроцедуры

&НаКлиенте
Функция ВТекстеЕстьСтрока(Лог, ЧтоИщем)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(Лог, "UTF-8");
	
	Нашли = Ложь;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Если Найти(Стр, ЧтоИщем)  > 0 Тогда
			Нашли = Истина;
			Прервать;
		КонецЕсли;	 
		
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат Нашли;
КонецФункции	

&НаКлиенте
Функция Установлен_ffmpeg(ПараметрыВидео)
	Лог = ПолучитьИмяВременногоФайла("txt");
	Команда = "" + ПараметрыВидео.ЗаписьВидеоКомандаFfmpeg + " -version > """ + Лог + """";
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео, Истина);
	Ванесса.Отладка(Команда);
	ВыполнитьКоманду(ПараметрыВидео, Команда);
	
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(Лог) Тогда
		ТекстСообщения = Ванесса.Локализовать("Команда не выполнена: %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Символы.ПС + Команда);
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;	 
	
	Возврат ВТекстеЕстьСтрока(Лог,"ffmpeg version");
КонецФункции	

&НаКлиенте
Процедура КомандаСистемыЧерезBat(ПараметрыВидео, Команда)
	ИмяВременногоBat = ПолучитьИмяВременногоФайла("bat");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоBat, "UTF-8", , Истина); 
	ЗТ.Записать(Команда);
	ЗТ.Закрыть();
	
	ВыполнитьКоманду(ПараметрыВидео, ИмяВременногоBat);
	Ванесса.УдалитьФайлыКомандаСистемы(ИмяВременногоBat);
КонецПроцедуры

&НаКлиенте
Функция Установлен_ImageMagic(ПараметрыВидео)
	Лог = ПолучитьИмяВременногоФайла("txt");
	Команда = """" + ПараметрыВидео.ЗаписьВидеоКомандаConvert + """ -version > """ + Лог + """ 2>&1";
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео, Истина);
	Ванесса.Отладка(Команда);
	КомандаСистемыЧерезBat(ПараметрыВидео, Команда);
	
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(Лог) Тогда
		ТекстСообщения = Ванесса.Локализовать("Команда не выполнена: %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Символы.ПС + Команда);
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;	 
	
	Возврат ВТекстеЕстьСтрока(Лог, "Version:");
КонецФункции	

&НаКлиенте
Функция Установлен_ГолосовойДвижок(ПараметрыВидео)
	Лог = ПолучитьИмяВременногоФайла("txt");
	Команда = """" + ПараметрыВидео.ЗаписьВидеоПутьКДвижкуTTS + """ -g > """ + Лог + """";
	Команда = СтрокаОтключенияВыводаКонсоли(Команда, ПараметрыВидео, Истина);
	Ванесса.Отладка(Команда);
	КомандаСистемыЧерезBat(ПараметрыВидео, Команда);
	
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(Лог) Тогда
		ТекстСообщения = Ванесса.Локализовать("Команда не выполнена: %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Символы.ПС + Команда);
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;	 
	
	Возврат ВТекстеЕстьСтрока(Лог, "1:");
КонецФункции	

&НаКлиенте
Функция Установлен_VLC(ПараметрыВидео)
	Нашли = Ложь;
	
	ИмяФайла1 = "C:\Program Files (x86)\VideoLAN\VLC\NEWS.txt";
	ИмяФайла2 = "C:\Program Files\VideoLAN\VLC\NEWS.txt";
	
	ИмяФайла = ИмяФайла1;
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		ИмяФайла = ИмяФайла2; 
	КонецЕсли;	 
	
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("Не найдена установка VLC."));
		Возврат Ложь;
	КонецЕсли;	 
	
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, "UTF-8");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Поз = Найти(Стр, "2.1.5");
		Если Поз > 0 Тогда
			Нашли = Истина;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	
	
	Текст.Закрыть();
	
	Возврат Нашли;
КонецФункции	

&НаКлиенте
Процедура ПроверитьЧтоЗаписьВидеоБудетРаботать(ПараметрыВидео) Экспорт
	БылиОшибки = Ложь;
	
	Если Не Ванесса.УстановленOneScript() Тогда
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("Не установлен oscript."));
		БылиОшибки = Истина;
	Иначе
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("oscript - OK"));
	КонецЕсли;	
	
	Если Не Установлен_VLC(ПараметрыВидео) Тогда
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("Не установлен VLC 2.1.5."));
		БылиОшибки = Истина;
	Иначе
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("VLC 2.1.5 - OK"));
	КонецЕсли;	
	
	Если Не Установлен_ffmpeg(ПараметрыВидео) Тогда
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("Не установлен ffmpeg."));
		БылиОшибки = Истина;
	Иначе
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("ffmpeg - OK"));
	КонецЕсли;	
	
	Если Не Установлен_ImageMagic(ПараметрыВидео) Тогда
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("Не установлен ImageMagic (convert.exe)."));
		БылиОшибки = Истина;
	Иначе
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("ImageMagic - OK"));
	КонецЕсли;	
	
	Если ПараметрыВидео.ЗаписьВидеоДелатьНаложениеTTS Тогда
		Если Не Установлен_ГолосовойДвижок(ПараметрыВидео) Тогда
			Ванесса.СообщитьПользователю(Ванесса.Локализовать("Не установлен ГолосовойДвижок."));
			БылиОшибки = Истина;
		Иначе
			Ванесса.СообщитьПользователю(Ванесса.Локализовать("ГолосовойДвижок - OK"));
			
			ФайлMp3 = ПолучитьФайлMP3ИзТекста(ПараметрыВидео,"тестовый текст", "test");
			Если Не Ванесса.ФайлСуществуетКомандаСистемы(ФайлMp3) Тогда
				Ванесса.СообщитьПользователю(Ванесса.Локализовать("Не получилось создать тестовый MP3"));
				БылиОшибки = Истина;
			Иначе	
				Ванесса.СообщитьПользователю(Ванесса.Локализовать("Создать тестовый mp3 - OK"));
			КонецЕсли;	 
			
			
		КонецЕсли;	
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм Тогда
		ИмяФайла = ПараметрыВидео.КаталогИнструментов + "\tools\VideoTools\FrameShow.exe";
		
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			ТекстСообщения = Ванесса.Локализовать("Файл <%1> не найден.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяФайла);
			Ванесса.СообщитьПользователю(ТекстСообщения);
			БылиОшибки = Истина;
		Иначе	
			Ванесса.СообщитьПользователю(Ванесса.Локализовать("Подсвет рамки - OK"));
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если ПараметрыВидео.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы Тогда
		ИмяФайла = ПараметрыВидео.КаталогИнструментов + "\tools\VideoTools\MouseMove.exe";
		
		Если Не Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			ТекстСообщения = Ванесса.Локализовать("Файл <%1> не найден.");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИмяФайла);
			Ванесса.СообщитьПользователю(ТекстСообщения);
			БылиОшибки = Истина;
		Иначе	
			Ванесса.СообщитьПользователю(Ванесса.Локализовать("Передвижение курсора мышки - OK"));
		КонецЕсли;	 
	КонецЕсли;	 
	                               
	Если БылиОшибки Тогда
		ТекстСообщения = Ванесса.Локализовать("Необходимо установить программное обеспечение. Подробности тут: %1");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", "https://github.com/Pr-Mex/vanessa-automation/blob/develop/README.md"); 
		
		Ванесса.СообщитьПользователю(ТекстСообщения);
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("Включите флаг <Включить отладочные сообщения> чтобы посмотреть выполняемые команды."));
	Иначе
		Ванесса.СообщитьПользователю(Ванесса.Локализовать("Все проверки пройдены."));
	КонецЕсли;	 
	
КонецПроцедуры


ВерсияСкриптаСборкиВидео = "1.11";
РазделительСтроки = "#";
